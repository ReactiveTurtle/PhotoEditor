{"version":3,"sources":["edittext/EditText.tsx","structures/Type.tsx","components/selectsizepopup/SelectSizeDialog.tsx","helper/ColorHelper.tsx","helper/DrawHelper.tsx","store/actions/updateTool.tsx","components/tool/Tools.tsx","store/actionCreators/updateTool.tsx","helper/VectorHelper.tsx","helper/ObjectCreateHelper.tsx","store/actions/removeSelectedObject.tsx","store/actionCreators/removeSelectedObject.tsx","store/actions/selectArea.tsx","store/actionCreators/selectArea.tsx","store/actions/cutSelectedArea.tsx","store/actionCreators/cutSelectedArea.tsx","store/actions/pushToHistory.tsx","store/actionCreators/pushToHistory.tsx","store/actions/actionReplaceSelectedObject.tsx","store/actionCreators/actionReplaceSelectedObject.tsx","helper/CanvasHelper.tsx","helper/EditorHelper.tsx","store/actions/setEditor.tsx","store/actionCreators/setEditor.tsx","components/canvas/Canvas.tsx","components/colopicker/TextColorPicker.tsx","store/actions/updateFillColor.tsx","store/actions/updateStrokeColor.tsx","store/actions/updateStrokeWidth.tsx","store/actions/updateText.tsx","store/actions/updateTextColor.tsx","store/actions/updateTextSize.tsx","store/initialState.tsx","objectparams/ObjectParams.tsx","structures/Filter.tsx","store/actionCreators/updateFillColor.tsx","store/actionCreators/updateStrokeColor.tsx","store/actionCreators/updateStrokeWidth.tsx","store/actionCreators/updateText.tsx","store/actionCreators/updateTextSize.tsx","store/actionCreators/updateTextColor.tsx","components/filtermenu/FIltersIcon.tsx","components/filtermenu/FilterMenu.tsx","helper/FilterHelper.tsx","components/brightslider/BrightnessSlider.tsx","components/pasteartdialog/PasteArtDialog.tsx","store/actions/undoHistory.tsx","store/actionCreators/undoHistory.tsx","store/actions/redoHistory.tsx","store/actionCreators/redoHistory.tsx","store/actions/editCanvasSize.tsx","store/actionCreators/editCanvasSize.tsx","store/actions/applyFilter.tsx","store/actionCreators/applyFilter.tsx","store/actions/createNewCanvas.tsx","store/actionCreators/createNewCanvas.tsx","App.tsx","components/timeout/Timeout.tsx","reportWebVitals.ts","helper/HistoryHelper.tsx","store/reducers/updateCanvas.tsx","store/reducers/updateEditor.tsx","store/reducers/updateObjectState.tsx","store/reducers/rootReducer.tsx","store/store.tsx","index.tsx"],"names":["EditText","props","className","id","type","min","defaultValue","text","placeholder","hintText","onFocus","undefined","onClick","onChange","e","htmlFor","title","Types","DialogTitle","withStyles","theme","createStyles","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","fontFamily","secondary","main","children","classes","onClose","other","disableTypography","Typography","variant","IconButton","aria-label","Transition","React","forwardRef","ref","Slide","direction","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","SelectSizeDialog","dispatch","useDispatch","useState","open","setOpen","x","y","size","handleClose","Dialog","PaperProps","style","backgroundColor","TransitionComponent","aria-labelledby","dividers","parseInt","target","value","Button","autoFocus","action","applyText","toRGBAColor","hex","r","substr","g","b","a","toHexColor","getRGB","to2dHex","Math","floor","num","getAnalog","drawObject","context","selectedObject","newImageData","Rectangle","drawRectangle","Triangle","ctx","triangle","beginPath","moveTo","p0","lineTo","p1","p2","closePath","globalAlpha","fillColor","fillStyle","fill","strokeWidth","lineWidth","strokeColor","strokeStyle","stroke","getImageData","drawTriangle","Circle","circle","radius","arc","PI","drawCircle","Art","art","canvasCtx","document","createElement","width","image","height","imageCtx","getContext","Error","putImageData","canvasScaled","max","imageScaled","scale","drawImage","drawArt","TextObject","font","textSize","rectangle","textColor","fillText","drawText","UPDATE_TOOL","ToolType","useStyles","makeStyles","item","minWidth","borderRadius","alignContent","background","selectedItem","light","Tools","onSelected","currentTool","useSelector","state","tool","Paper","List","component","ListItem","button","SvgIcon","viewBox","points","cx","cy","Text","d","Area","length","vector","sqrt","pow","createRectangle","downStart","moveEnd","objectState","start","end","createArea","REMOVE_SELECTED_OBJECT","removeSelectedObject","SELECT_AREA","selectArea","CUT_SELECTED_AREA","cutSelectedArea","PUSH_TO_HISTORY","pushToHistory","imageData","REPLACE_SELECTED_OBJECT","actionReplaceSelectedObject","obj","copyImageData","ImageData","data","set","Uint8ClampedArray","editor","canvas","selectedArea","newCanvas","i","j","dstIndex","srcIndex","k","replaceSelectedObject","newSelectedObject","newEditor","console","log","SET_EDITOR","setEditor","Canvas","isCanvasDown","setCanvasDown","tempObject","setTempObject","tempPoint","setTempPoint","setStart","shallowEqual","drawProps","textObject","canvasElement","useRef","useEffect","current","renderCanvas","listener","ctrlKey","code","historyCanvas","window","addEventListener","removeEventListener","onCreateObject","newObject","createTriangle","len","createCircle","createText","onMouseDown","cursor","clientX","offsetLeft","clientY","offsetTop","onMouseMove","first","second","deltaX","deltaY","objRA","shiftKey","delta","distance","sizeLength","dir","sign","abs","objRCA","setupCursor","onMouseUp","pointIndex","map","p","findIndex","pointInTriangle","dX","dY","dX21","dY12","D","s","t","tempCanvasObject","drawBorder","objRTCTA","createGradient","grad","createLinearGradient","addColorStop","setLineDash","normY","positions","forEach","TextColorPicker","defaultColor","setColor","displayColorPicker","setDisplayColorPicker","handleChange","result","alpha","rgb","newColor","getElementById","zIndex","bottom","left","transform","clientHeight","disableAlpha","onChangeComplete","oninput","UPDATE_FILL_COLOR","UPDATE_STROKE_COLOR","UPDATE_STROKE_WIDTH","UPDATE_TEXT","UPDATE_TEXT_COLOR","UPDATE_TEXT_SIZE","defaultEditor","createNewCanvas","initialViewModel","imageHistory","history","currentHistoryPosition","ObjectParams","Filter","updateFillColor","valueAsNumber","FilterIcon","fontWeight","fontSize","paper","marginTop","FilterMenu","anchorRef","event","contains","handleListKeyDown","key","preventDefault","prevOpen","focus","edge","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","onSelect","Grey","Red","Green","Blue","Brightness","applyColorLevelFilter","src","dst","colorLevels","dataIndex","fab","marginLeft","slider","BrightnessSlider","onApply","setValue","Slider","step","valueLabelDisplay","newValue","Fab","PasteArtDialog","isOpen","onSaveSize","onChangeSize","UNDO_HISTORY","undoHistory","REDO_HISTORY","redoHistory","EDIT_CANVAS_SIZE","editCanvasSize","APPLY_FILTER","applyFilter","filter","CREATE_NEW_CANVAS","createMuiTheme","primary","deepPurple","purple","red","flexGrow","menuButton","marginRight","textAlign","App","timeout","isTimerStarted","setTimerStarted","ms","setTimeout","useTimeout","isBrightSliderShown","setBrightSliderShown","tempEditor","setTempEditor","isPasteArtDialogOpen","setPasteArtDialogOpen","pasteArt","setPasteArt","ThemeProvider","Box","AppBar","Toolbar","callback","input","click","onchange","inputElement","files","file","url","URL","createObjectURL","img","Image","onload","revokeObjectURL","remove","importObject","toBlob","blob","Blob","link","href","setAttribute","body","appendChild","exportObject","isPushToHistory","temp","brightEditor","brightnessFactor","applyBrightnessFilter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","newHistory","flatMap","pop","push","updateCanvas","minHeight","canvasDataIndex","updateEditor","updateObjectState","reducers","newImageHistory","mean","applyGreyFilter","updatedEditor","store","createStore","render","ReactDOM"],"mappings":"qdAee,SAASA,EAASC,GAC7B,OACI,sBAAKC,UAAU,iBAAf,UACI,uBACIA,UAAU,eACVC,GAAIF,EAAME,GACVC,KAAMH,EAAMG,KACZC,IAAKJ,EAAMI,IACXC,aAAcL,EAAMM,KACpBC,YAAaP,EAAMQ,SACnBC,QAAS,gBACiBC,IAAlBV,EAAMW,SACNX,EAAMW,WAGdA,QAAS,gBACiBD,IAAlBV,EAAMW,SACNX,EAAMW,WAGdC,SAAU,SAACC,GAAD,OAAOb,EAAMY,SAASC,MACpC,uBACIZ,UAAU,eACVa,QAAQ,WACRH,QAAS,gBACiBD,IAAlBV,EAAMW,SACNX,EAAMW,WALlB,SAOQX,EAAMe,W,IC3CdC,E,yGC4CNC,EAAcC,aA9BL,SAACC,GAAD,OACXC,YAAa,CACTC,KAAM,CACFC,OAAQ,EACRC,QAASJ,EAAMK,QAAQ,IAE3BC,YAAa,CACTC,SAAU,WACVC,MAAOR,EAAMK,QAAQ,GACrBI,IAAKT,EAAMK,QAAQ,GACnBK,MAAOV,EAAMW,QAAQC,KAAK,MAE9BhB,MAAO,CACHiB,WAAY,UACZH,MAAOV,EAAMW,QAAQG,UAAUC,UAgBvBhB,EAAmB,SAAClB,GAA6B,IACzDmC,EAAyCnC,EAAzCmC,SAAUC,EAA+BpC,EAA/BoC,QAASC,EAAsBrC,EAAtBqC,QAAYC,EADyB,YACftC,EADe,kCAEhE,OACI,eAAC,IAAD,yBAAgBuC,mBAAiB,EAACtC,UAAWmC,EAAQf,MAAUiB,GAA/D,cACI,cAACE,EAAA,EAAD,CAAYvC,UAAWmC,EAAQrB,MAAO0B,QAAQ,KAA9C,SAAoDN,IACnDE,EACG,cAACK,EAAA,EAAD,CAAYC,aAAW,QAAQ1C,UAAWmC,EAAQX,YAAad,QAAS0B,EAAxE,SACI,cAAC,IAAD,MAEJ,YAKVO,EAAaC,IAAMC,YAAW,SAChC9C,EACA+C,GAEA,OAAO,cAACC,EAAA,EAAD,aAAOC,UAAU,KAAKF,IAAKA,GAAS/C,OAGzCkD,EAAgBhC,aAAW,SAACC,GAAD,MAAmB,CAChDE,KAAM,CACFE,QAASJ,EAAMK,QAAQ,OAFTN,CAIlBiC,KAEEC,EAAgBlC,aAAW,SAACC,GAAD,MAAmB,CAChDE,KAAM,CACFC,OAAQ,EACRC,QAASJ,EAAMK,QAAQ,OAHTN,CAKlBmC,KAEW,SAASC,EAAiBtD,GACrC,IAAMuD,EAAWC,cADkD,EAE3CX,IAAMY,UAAS,GAF4B,mBAE5DC,EAF4D,KAEtDC,EAFsD,OAGpDF,mBAAkB,CAAEG,EAAG,IAAKC,EAAG,MAAvCC,EAH4D,oBAQ7DC,EAAc,WAChBJ,GAAQ,IASZ,OACI,gCACI,cAACjB,EAAA,EAAD,CACIb,MAAM,UACNlB,QAjBY,WACpBgD,GAAQ,IAcJ,SAGK3D,EAAMmC,WAEX,eAAC6B,EAAA,EAAD,CACIC,WAAY,CACRC,MAAO,CACHC,gBAAiB,cAGzBC,oBAAqBxB,EACrBP,QAAS0B,EACTM,kBAAgB,0BAChBX,KAAMA,EATV,UAUI,cAAC,EAAD,CAAaxD,GAAG,0BACZmC,QAAS0B,EADb,mGAIA,eAAC,EAAD,CAAeO,UAAQ,EAAvB,UACI,cAAC,EAAD,CAAUvD,MAAM,uCAASZ,KAAK,SAC1BK,SAAS,8FACTJ,IAAI,IACJE,KAAMwD,EAAKF,EAAI,GACfhD,SAAU,SAACC,GAAD,OAAOiD,EAAKF,EAAIW,SAAS1D,EAAE2D,OAAOC,UAChD,cAAC,EAAD,CAAU1D,MAAM,uCAASZ,KAAK,SAC1BK,SAAS,8FACTJ,IAAI,IACJE,KAAMwD,EAAKD,EAAI,GACfjD,SAAU,SAACC,GAAD,OAAOiD,EAAKD,EAAIU,SAAS1D,EAAE2D,OAAOC,aAEpD,cAAC,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,WAAS,EAAChE,QAxCL,WACzBoD,IACA/D,EAAM4E,OAAOH,MAAQX,EACrBP,EAASvD,EAAM4E,SAqC8C/C,MAAM,YAAvD,SACK7B,EAAM6E,oBCjIxB,SAASC,EAAYC,GAOxB,MANc,CACVC,EAAGT,SAASQ,EAAIE,OAAO,EAAG,GAAI,IAC9BC,EAAGX,SAASQ,EAAIE,OAAO,EAAG,GAAI,IAC9BE,EAAGZ,SAASQ,EAAIE,OAAO,EAAG,GAAI,IAC9BG,EAAGb,SAASQ,EAAIE,OAAO,EAAG,GAAI,IAAM,KAKrC,SAASI,EAAWxD,GACvB,OAAOyD,EAAOzD,GACR0D,EAAQC,KAAKC,MAAgB,IAAV5D,EAAMuD,IAGnC,SAASG,EAAQG,GACb,OAAOC,EAAUH,KAAKC,MAAMC,EAAM,KAAOC,EAAUD,EAAM,K,SFlBjD1E,O,aAAAA,I,yBAAAA,I,uBAAAA,I,mBAAAA,I,2BAAAA,I,gBAAAA,M,KEqBZ,IAAM+D,EAAM,CACR,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KACnB,SAASY,EAAUD,GACf,OAAOX,EAAIW,GAGR,SAASJ,EAAOzD,GACnB,MAAO,IAAM0D,EAAQ1D,EAAMmD,GACrBO,EAAQ1D,EAAMqD,GACdK,EAAQ1D,EAAMsD,GCxBjB,SAASS,EACZC,EACA/B,EACAgC,GAEA,IAAIC,EAEJ,OAAQD,EAAe3F,MACnB,KAAKa,EAAMgF,UACPD,EAAeE,EAAcJ,EAAS/B,EAAMgC,GAC5C,MACJ,KAAK9E,EAAMkF,SACPH,EA2CZ,SAAsBI,EAClBrC,EACAsC,GAEAD,EAAIE,YACJF,EAAIG,OAAOF,EAASG,GAAG3C,EAAGwC,EAASG,GAAG1C,GACtCsC,EAAIK,OAAOJ,EAASK,GAAG7C,EAAGwC,EAASK,GAAG5C,GACtCsC,EAAIK,OAAOJ,EAASM,GAAG9C,EAAGwC,EAASM,GAAG7C,GACtCsC,EAAIQ,YAEJR,EAAIS,YAAcR,EAASpG,MAAM6G,UAAUzB,EAC3Ce,EAAIW,UAAYxB,EAAOc,EAASpG,MAAM6G,WACtCV,EAAIY,OAEAX,EAASpG,MAAMgH,YAAc,IAC7Bb,EAAIc,UAAYb,EAASpG,MAAMgH,YAC/Bb,EAAIS,YAAcR,EAASpG,MAAMkH,YAAY9B,EAC7Ce,EAAIgB,YAAc7B,EAAOc,EAASpG,MAAMkH,aACxCf,EAAIiB,UAER,OAAOjB,EAAIkB,aAAa,EAAG,EAAGvD,EAAKF,EAAGE,EAAKD,GA/DpByD,CAAazB,EAAS/B,EAAMgC,GAC3C,MACJ,KAAK9E,EAAMuG,OACPxB,EA+DZ,SAAoBI,EAChBrC,EACA0D,GAEArB,EAAIE,YACJF,EAAIG,OAAOkB,EAAO9F,SAASkC,EAAI4D,EAAOC,OAAQD,EAAO9F,SAASmC,GAC9DsC,EAAIuB,IAAIF,EAAO9F,SAASkC,EAAG4D,EAAO9F,SAASmC,EAAG2D,EAAOC,OAAQ,EAAa,EAAVjC,KAAKmC,IACrExB,EAAIQ,YAEJR,EAAIS,YAAcY,EAAOxH,MAAM6G,UAAUzB,EACzCe,EAAIW,UAAYxB,EAAOkC,EAAOxH,MAAM6G,WACpCV,EAAIY,OAEAS,EAAOxH,MAAMgH,YAAc,IAC3Bb,EAAIc,UAAYO,EAAOxH,MAAMgH,YAC7Bb,EAAIS,YAAcY,EAAOxH,MAAMkH,YAAY9B,EAC3Ce,EAAIgB,YAAc7B,EAAOkC,EAAOxH,MAAMkH,aACtCf,EAAIiB,UAER,OAAOjB,EAAIkB,aAAa,EAAG,EAAGvD,EAAKF,EAAGE,EAAKD,GAlFpB+D,CAAW/B,EAAS/B,EAAMgC,GACzC,MACJ,KAAK9E,EAAM6G,IACP9B,EAkFZ,SAAiBI,EAA+BrC,EAAegE,GAC3D,IAAMC,EAAYC,SAASC,cAAc,UACzCF,EAAUG,MAAQJ,EAAIK,MAAMD,MAC5BH,EAAUK,OAASN,EAAIK,MAAMC,OAC7B,IAAMC,EAAWN,EAAUO,WAAW,MACtC,GAAiB,OAAbD,EACA,MAAM,IAAIE,MAEdF,EAASG,aAAaV,EAAIK,MAAO,EAAG,GACpC,IAAMM,EAAeT,SAASC,cAAc,UAC5CQ,EAAaP,MAAQ1C,KAAKkD,IAAI,EAAGZ,EAAIhE,KAAKF,GAC1C6E,EAAaL,OAAS5C,KAAKkD,IAAI,EAAGZ,EAAIhE,KAAKD,GAC3C,IAAM8E,EAAcF,EAAaH,WAAW,MAC5C,GAAoB,OAAhBK,EACA,MAAM,IAAIJ,MAKd,OAHAI,EAAYC,MAAMd,EAAIhE,KAAKF,EAAIkE,EAAIK,MAAMD,MAAOJ,EAAIhE,KAAKD,EAAIiE,EAAIK,MAAMC,QACvEO,EAAYE,UAAUd,EAAW,EAAG,GACpC5B,EAAI0C,UAAUJ,EAAcX,EAAIpG,SAASkC,EAAGkE,EAAIpG,SAASmC,GAClDsC,EAAIkB,aAAa,EAAG,EAAGvD,EAAKF,EAAGE,EAAKD,GArGpBiF,CAAQjD,EAAS/B,EAAMgC,GACtC,MACJ,KAAK9E,EAAM+H,WACPhD,EAqGZ,SAAkBI,EACdrC,EACAxD,GAOA,OANA6F,EAAI6C,KAAJ,UAAc1I,EAAK2I,SAAnB,gBACAhD,EAAcE,EAAKrC,EAAMxD,EAAK4I,WAC9B/C,EAAIS,YAActG,EAAK6I,UAAU/D,EACjCe,EAAIW,UAAYxB,EAAOhF,EAAK6I,WAC5BhD,EAAIiD,SAAS9I,EAAKA,KAAMA,EAAK4I,UAAUxH,SAASkC,EAAI,EAChDtD,EAAK4I,UAAUxH,SAASmC,EAAIvD,EAAK2I,UAC9B9C,EAAIkB,aAAa,EAAG,EAAGvD,EAAKF,EAAGE,EAAKD,GA9GpBwF,CAASxD,EAAS/B,EAAMgC,GAI/C,GADAD,EAAQe,YAAc,OACDlG,IAAjBqF,EACA,MAAM,IAAIwC,MAEd,OAAOxC,EAGX,SAASE,EAAcE,EACnBrC,EACAoF,GAmBA,OAjBA/C,EAAIE,YACJF,EAAIG,OAAO4C,EAAUxH,SAASkC,EAAGsF,EAAUxH,SAASmC,GACpDsC,EAAIK,OAAO0C,EAAUxH,SAASkC,EAAIsF,EAAUpF,KAAKF,EAAGsF,EAAUxH,SAASmC,GACvEsC,EAAIK,OAAO0C,EAAUxH,SAASkC,EAAIsF,EAAUpF,KAAKF,EAAGsF,EAAUxH,SAASmC,EAAIqF,EAAUpF,KAAKD,GAC1FsC,EAAIK,OAAO0C,EAAUxH,SAASkC,EAAGsF,EAAUxH,SAASmC,EAAIqF,EAAUpF,KAAKD,GACvEsC,EAAIQ,YAEJR,EAAIS,YAAcsC,EAAUlJ,MAAM6G,UAAUzB,EAC5Ce,EAAIW,UAAYxB,EAAO4D,EAAUlJ,MAAM6G,WACvCV,EAAIY,OAEAmC,EAAUlJ,MAAMgH,YAAc,IAC9Bb,EAAIc,UAAYiC,EAAUlJ,MAAMgH,YAChCb,EAAIS,YAAcsC,EAAUlJ,MAAMkH,YAAY9B,EAC9Ce,EAAIgB,YAAc7B,EAAO4D,EAAUlJ,MAAMkH,aACzCf,EAAIiB,UAEDjB,EAAIkB,aAAa,EAAG,EAAGvD,EAAKF,EAAGE,EAAKD,G,wDC5DhCyF,EADK,c,ICORC,E,iBAAAA,O,yBAAAA,I,uBAAAA,I,mBAAAA,I,eAAAA,I,gBAAAA,M,KAQZ,IAAMC,EAAYC,aAAW,SAACtI,GAAD,OACzBC,YAAa,CACTC,KAAM,CACF8C,gBAAiB,aAErBuF,KAAM,CACFC,SAAU,IACVzB,MAAO,OACPE,OAAQ,OACRwB,aAAc,OACdC,aAAc,SACdvI,OAAQ,QACRC,QAAS,IACT,UAAW,CACPuI,WAAY,cAGpBC,aAAc,CACVD,WAAY3I,EAAMW,QAAQG,UAAU+H,MAAQ,KAC5C,UAAW,CACPF,WAAY3I,EAAMW,QAAQG,UAAU+H,aAMrC,SAASC,EAAT,GAA4C,IAA3BC,EAA0B,EAA1BA,WACtB3G,EAAWC,cACX2G,EAAwBC,aAC1B,SAACC,GAAD,OAAsBA,EAAMF,eAE1BxJ,EAAU,SAAC2J,GACTA,IAASH,IACT5G,EC3CD,CACHpD,KAAMmJ,EACN7E,MDyCwB6F,IACpBJ,MAGF9H,EAAUoH,IAChB,OACI,eAACe,EAAA,EAAD,CAAOtK,UAAW,cAAgBmC,EAAQf,KAA1C,UACI,cAACmB,EAAA,EAAD,CACIvC,UAAU,cACVwC,QAAQ,YAAYZ,MAAM,UAF9B,gFAKA,eAAC2I,EAAA,EAAD,CAAMvK,UAAU,aAAawK,UAAU,MAAM9H,aAAW,qEAAxD,UACI,cAAC+H,EAAA,EAAD,CAAUC,QAAM,EACZhK,QAAS,kBAAMA,EAAQ4I,EAASvD,YAChC/F,UAAWmC,EAAQsH,KAAO,KAAOS,IAAgBZ,EAASvD,UAAY5D,EAAQ2H,aAAe,IAFjG,SAGI,cAACa,EAAA,EAAD,CAASC,QAAQ,YAAY3G,MAAO,CAAE5C,OAAQ,QAA9C,SACI,sBAAMsC,EAAE,IAAIC,EAAE,IAAIqE,MAAM,KAAKE,OAAO,KAChCrB,KAAMoD,IAAgBZ,EAASvD,UAAY,UAAY,gBAGnE,cAAC0E,EAAA,EAAD,CAAUC,QAAM,EACZhK,QAAS,kBAAMA,EAAQ4I,EAASrD,WAChCjG,UAAWmC,EAAQsH,KAAO,KAAOS,IAAgBZ,EAASrD,SAAW9D,EAAQ2H,aAAe,IAFhG,SAGI,cAACa,EAAA,EAAD,CAASC,QAAQ,YAAY3G,MAAO,CAAE5C,OAAQ,QAA9C,SACI,yBAASwJ,OAAO,kBACZ/D,KAAMoD,IAAgBZ,EAASrD,SAAW,UAAY,gBAGlE,cAACwE,EAAA,EAAD,CAAUC,QAAM,EACZhK,QAAS,kBAAMA,EAAQ4I,EAAShC,SAChCtH,UAAWmC,EAAQsH,KAAO,KAAOS,IAAgBZ,EAAShC,OAASnF,EAAQ2H,aAAe,IAF9F,SAGI,cAACa,EAAA,EAAD,CAASC,QAAQ,YAAY3G,MAAO,CAAE5C,OAAQ,QAA9C,SACI,wBAAQ0D,EAAE,KAAK+F,GAAG,KAAKC,GAAG,KACtBjE,KAAMoD,IAAgBZ,EAAShC,OAAS,UAAY,gBAIhE,cAACmD,EAAA,EAAD,CAAUC,QAAM,EACZhK,QAAS,kBAAMA,EAAQ4I,EAAS0B,OAChChL,UAAWmC,EAAQsH,KAAO,KAAOS,IAAgBZ,EAAS0B,KAAO7I,EAAQ2H,aAAe,IAF5F,SAGI,cAACa,EAAA,EAAD,CAASC,QAAQ,YAAY3G,MAAO,CAAE5C,OAAQ,QAA9C,SACI,sBAAM4J,EAAE,0BACJnE,KAAMoD,IAAgBZ,EAAS0B,KAAO,UAAY,gBAG9D,cAACP,EAAA,EAAD,CAAUC,QAAM,EACZhK,QAAS,kBAAMA,EAAQ4I,EAAS4B,OAChClL,UAAWmC,EAAQsH,KAAO,KAAOS,IAAgBZ,EAAS4B,KAAO/I,EAAQ2H,aAAe,IAF5F,SAGI,cAACa,EAAA,EAAD,CAASC,QAAQ,YAAY3G,MAAO,CAAE5C,OAAQ,QAA9C,SACI,sBAAM4J,EAAE,yFACJnE,KAAMoD,IAAgBZ,EAAS4B,KAAO,UAAY,sBEjGvE,SAASC,EAAOC,GACnB,OAAO7F,KAAKC,MAAMD,KAAK8F,KAAK9F,KAAK+F,IAAIF,EAAOzH,EAAG,GAAK4B,KAAK+F,IAAIF,EAAOxH,EAAG,KCMpE,SAAS2H,EAAgBC,EAAoBC,EAAkBC,GAClE,IAAMC,EAAiB,CACnBhI,EAAG4B,KAAKpF,IAAIqL,EAAU7H,EAAG8H,EAAQ9H,GACjCC,EAAG2B,KAAKpF,IAAIqL,EAAU5H,EAAG6H,EAAQ7H,IAE/BgI,EACCrG,KAAKkD,IAAI+C,EAAU7H,EAAG8H,EAAQ9H,GAD/BiI,EAECrG,KAAKkD,IAAI+C,EAAU5H,EAAG6H,EAAQ7H,GAErC,MAAO,CACH1D,KAAMa,EAAMgF,UACZtE,SAAUkK,EACV9H,KAAM,CACFF,EAAGiI,EAAQD,EAAMhI,EACjBC,EAAGgI,EAAQD,EAAM/H,GAErB7D,MAAO,CACH6G,UAAW8E,EAAY9E,UACvBK,YAAayE,EAAYzE,YACzBF,YAAa2E,EAAY3E,cA+D9B,SAAS8E,EAAWL,EAAoBC,EAAkBC,GAC7D,IAAMC,EAAiB,CACnBhI,EAAG4B,KAAKpF,IAAIqL,EAAU7H,EAAG8H,EAAQ9H,GACjCC,EAAG2B,KAAKpF,IAAIqL,EAAU5H,EAAG6H,EAAQ7H,IAE/BgI,EACCrG,KAAKkD,IAAI+C,EAAU7H,EAAG8H,EAAQ9H,GAD/BiI,EAECrG,KAAKkD,IAAI+C,EAAU5H,EAAG6H,EAAQ7H,GAErC,MAAO,CACH1D,KAAMa,EAAMmK,KACZzJ,SAAUkK,EACV9H,KAAM,CACFF,EAAGiI,EAAQD,EAAMhI,EACjBC,EAAGgI,EAAQD,EAAM/H,ICzG7B,IACekI,EADgB,yBCGhB,SAASC,IACpB,MAAO,CACH7L,KAAM4L,GCLd,IACeE,EADK,cCWLC,MAPf,SAAoBzH,GAChB,MAAO,CACHtE,KAAM8L,EACNxH,MAAOA,ICNA0H,EADW,oBCSXC,OANf,WACI,MAAO,CACHjM,KAAMgM,ICJCE,GADS,kBCUTC,OAPf,SAAuBC,GACnB,MAAO,CACHpM,KAAMkM,GACN5H,MAAO8H,ICLAC,GADiB,0BCejBC,OAPf,SAAqCC,GACjC,MAAO,CACHvM,KAAMqM,GACN/H,MAAOiI,ICLR,SAASC,GAAcJ,GAC7B,IAAMxG,EAA0B,IAAI6G,UACnCL,EAAUrE,MACVqE,EAAUnE,QAGX,OADArC,EAAa8G,KAAKC,IAAI,IAAIC,kBAAkBR,EAAUM,OAC/C9G,EAoCD,SAASqG,GAAgBY,GAM/B,MAJ0B,CACzBC,OAFeN,GAAeK,EAAOlH,eAAuBqC,OAG5DrC,eAAgB,MAKX,SAASoG,GAAWc,EAAgBE,GAQ1C,IAPA,IAAIpF,EAAW,CACd3H,KAAMa,EAAM6G,IACZM,MAAO,IAAIyE,UAAUM,EAAapJ,KAAKF,EAAGsJ,EAAapJ,KAAKD,GAC5DnC,SAAUwL,EAAaxL,SACvBoC,KAAMoJ,EAAapJ,MAEdqJ,EAAYR,GAAcK,EAAOC,QAC9BG,EAAI,EAAGA,EAAItF,EAAIhE,KAAKD,EAAGuJ,IAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAIvF,EAAIhE,KAAKF,EAAGyJ,IAAK,CAIpC,IAHA,IAAIC,EAAkC,GAAtBF,EAAItF,EAAIhE,KAAKF,EAAIyJ,GAC7BE,EAC6D,IAA9DH,EAAItF,EAAIpG,SAASmC,GAAKsJ,EAAUjF,MAAQmF,EAAIvF,EAAIpG,SAASkC,GACnD4J,EAAI,EAAGA,EAAI,EAAGA,IACtB1F,EAAIK,MAAM0E,KAAKS,EAAWE,GAAKR,EAAOC,OAAOJ,KAAKU,EAAWC,GAE9DL,EAAUN,KAAKU,EAAW,GAAK,EAQjC,OALuB,2BACnBP,GADmB,IAEtBlH,eAAgBgC,EAChBmF,OAAQE,ICtEH,SAASM,GACZT,EACAU,GAEA,IAAIC,EAAiB,2BACdX,GADc,IAEjBlH,eAAgB4H,IAEpB,GAA6B,MAAzBV,EAAOlH,eAAwB,CAC/B,IAAMmH,EAASjF,SAASC,cAAc,UAGtC,GAFAgF,EAAO/E,MAAQ8E,EAAOC,OAAO/E,MAC7B+E,EAAO7E,OAAS4E,EAAOC,OAAO7E,OAChB,MAAV6E,EAAgB,CAChB,IAAM9G,EAAM8G,EAAO3E,WAAW,MACnB,MAAPnC,IACAyH,QAAQC,IAAI1H,GACZA,EAAIqC,aAAawE,EAAOC,OAAQ,EAAG,GACnCU,EAAUV,OAASrH,EAAWO,EAC1B,CAAEvC,EAAGoJ,EAAOC,OAAO/E,MAAOrE,EAAGmJ,EAAOC,OAAO7E,QAC3C4E,EAAOlH,kBAIvB,OAAO6H,EAGJ,SAAS3B,GACZgB,GAKA,MAJwB,CACpBC,OAAQN,GAAcK,EAAOC,QAC7BnH,eAAgB,MCvCxB,IACegI,GADI,aCWJC,OAPf,SAAmBtJ,GACf,MAAO,CACHtE,KAAM2N,GACNrJ,MAAOA,ICoBA,SAASuJ,KAAU,IAAD,EACSvK,oBAAS,GADlB,mBACtBwK,EADsB,KACRC,EADQ,OAEOzK,mBAAiF,MAFxF,mBAEtB0K,EAFsB,KAEVC,EAFU,OAGK3K,mBAAyB,MAH9B,mBAGtB4K,EAHsB,KAGXC,EAHW,OAIH7K,mBAAkB,CAAEG,EAAG,EAAGC,EAAG,IAJ1B,mBAItB+H,EAJsB,KAIf2C,EAJe,KAMvBhL,EAAWC,cACXwJ,EAAiB5C,aACnB,SAACC,GAAD,OAAsBA,EAAM2C,SAC5BwB,KAEEjC,EAAYS,EAAOC,OACnBnH,EAAiBkH,EAAOlH,eACxBwE,EAAiBF,aACnB,SAACC,GAAD,OAAsBA,EAAMF,eAG1BwB,EAA2BvB,aAC7B,SAACC,GAAD,OAAsBA,EAAMsB,cAC5B6C,KAEJ,GAAsB,MAAlB1I,IACIA,EAAe3F,OAASa,EAAMgF,WAC9BF,EAAe3F,OAASa,EAAMkF,UAC9BJ,EAAe3F,OAASa,EAAMuG,QAC9BzB,EAAe3F,OAASa,EAAM+H,YAAY,CAC1C,IAAI0F,EACJ,GAAI3I,EAAe3F,OAASa,EAAM+H,WAAY,CAC1C,IAAM2F,EAAa5I,EACnB4I,EAAWpO,KAAOqL,EAAYrL,KAC9BoO,EAAWzF,SAAW0C,EAAY1C,SAClCyF,EAAWvF,UAAYwC,EAAYxC,UACnCsF,EAAYC,EAAWxF,UAAUlJ,WAEjCyO,EAAY3I,EAAe9F,MAE/ByO,EAAU5H,UAAY8E,EAAY9E,UAClC4H,EAAUvH,YAAcyE,EAAYzE,YACpCuH,EAAUzH,YAAc2E,EAAY3E,YAI5C,IAAM2H,EAAgBC,iBAA0B,MAChDC,qBAAU,WACuB,MAAzBF,EAAcG,SACdC,GAAaJ,EAAcG,QAASvC,EAAWzG,EAAgBqI,KAEpE,CAAC5B,EAAWzG,EAAgBqI,IAC/BU,qBAAU,WACN,IAAMG,EAAW,SAACnO,GACd,GAAIA,EAAEoO,QACF,GAAe,SAAXpO,EAAEqO,MACF,GAAkB,MAAdf,GAAsBA,EAAWhO,OAASa,EAAMmK,KAAM,CACtD5H,EAAS2I,EAAWiC,IAEpB,IAAIgB,EAAgBnC,EAAOC,OAC3B1J,EAAS6I,MACT7I,EAAS+I,GAAc6C,IAEvBf,EAAc,MACd7K,EAASyI,UAEK,SAAXnL,EAAEqO,MACTd,EAActC,EAAW,CAAElI,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG2I,EAAUrE,MAAOrE,EAAG0I,EAAUnE,eAGhF,OAAQvH,EAAEqO,MACN,IAAK,SACDd,EAAc,MACd,IAAMT,EAAYF,GAAsBT,EAAQ,MAChDzJ,EAAS+I,GAAcqB,EAAUV,SACjC1J,EAASwK,GAAUJ,IACnB,MACJ,IAAK,SACD,GAAkB,MAAdQ,GAAsBA,EAAWhO,OAASa,EAAMmK,KAAM,CACtD5H,EAAS2I,EAAWiC,IACpB,IAAMgB,EAAgBnC,EAAOC,OAC7B1J,EAASyI,KACTzI,EAAS+I,GAAc6C,SAEvB5L,EAASyI,KAEboC,EAAc,MACd,MACJ,IAAK,QACD,GAAkB,MAAdD,GAAsBA,EAAWhO,OAASa,EAAMmK,KAChD5H,EAAS2I,EAAWiC,QACjB,CACH,IAAMgB,EAAgBnC,EAAOC,OAC7B1J,EAASkJ,GAA4B,OACrClJ,EAAS+I,GAAc6C,IAE3Bf,EAAc,QAM9B,OADAgB,OAAOC,iBAAiB,UAAWL,GAC5B,WACHI,OAAOE,oBAAoB,UAAWN,OAG9C,IAAMO,EAAiB,SAAC3D,EAAgBF,GACpC,GAAIuC,EAAc,CACd,IAAIuB,EAAY,KAEhB,OADA5B,QAAQC,IAAIvD,GACJA,GACJ,KAAKf,EAASvD,UACVwJ,EAAYhE,EAAgBI,EAAOF,EAASC,GAC5C,MACJ,KAAKpC,EAASrD,SACVsJ,EfzGb,SAAwB/D,EAAoBC,EAAkBC,GACjE,IAAMC,EAAiB,CACnBhI,EAAG4B,KAAKpF,IAAIqL,EAAU7H,EAAG8H,EAAQ9H,GACjCC,EAAG4H,EAAU5H,GAEXgI,EAAM,CACRjI,EAAG4B,KAAKkD,IAAI+C,EAAU7H,EAAG8H,EAAQ9H,GACjCC,EAAG6H,EAAQ7H,GAEf,MAAO,CACH1D,KAAMa,EAAMkF,SACZK,GAAI,CACA3C,EAAGgI,EAAMhI,EACTC,EAAG+H,EAAM/H,GAEb4C,GAAI,CACA7C,EAAGiI,EAAIjI,EACPC,EAAG+H,EAAM/H,GAEb6C,GAAI,CACA9C,EAAGgI,EAAMhI,EAAI,EAAIiI,EAAIjI,EAAI,EACzBC,EAAGgI,EAAIhI,GAEX7D,MAAO,CACH6G,UAAW8E,EAAY9E,UACvBK,YAAayE,EAAYzE,YACzBF,YAAa2E,EAAY3E,ce+ELyI,CAAe7D,EAAOF,EAASC,GAC3C,MACJ,KAAKpC,EAAShC,OACViI,Ef7Eb,SAAsB/D,EAAoBC,EAAkBC,GAC/D,IAAM+D,EAAMlK,KAAK8F,KAAK9F,KAAK+F,IAAIG,EAAQ9H,EAAI6H,EAAU7H,EAAG,GAAK4B,KAAK+F,IAAIG,EAAQ7H,EAAI4H,EAAU5H,EAAG,IAC/F,MAAO,CACH1D,KAAMa,EAAMuG,OACZ7F,SAAU,CACNkC,EAAG6H,EAAU7H,EACbC,EAAG4H,EAAU5H,GAEjB4D,OAAQiI,EACR1P,MAAO,CACH6G,UAAW8E,EAAY9E,UACvBK,YAAayE,EAAYzE,YACzBF,YAAa2E,EAAY3E,ceiEL2I,CAAa/D,EAAOF,EAASC,GACzC,MACJ,KAAKpC,EAAS0B,KACVuE,Ef/Db,SAAoB/D,EAAoBC,EAAkBC,GAC7D,MAAO,CACHxL,KAAMa,EAAM+H,WACZG,UAAWsC,EAAgBC,EAAWC,EAASC,GAC/CrL,KAAMqL,EAAYrL,KAClB2I,SAAU0C,EAAY1C,SACtBE,UAAWwC,EAAYxC,WeyDCyG,CAAWhE,EAAOF,EAASC,GACvC,MACJ,KAAKpC,EAAS4B,KACVqE,EAAY1D,EAAWF,EAAOF,GAGtC0C,EAAcoB,KAGtB,OACI,qBAAKvP,UAAU,mBAAf,SACI,wBAAQC,GAAG,SACP6C,IAAK4L,EACL1O,UAAU,SACViI,MAAOqE,EAAUrE,MACjBE,OAAQmE,EAAUnE,OAClByH,YAAa,SAAChP,GACV,IAAMoM,EAAS0B,EAAcG,QAC7B,GAAe,OAAX7B,EAAJ,CAGA,GAA4B,YAAxBA,EAAO/I,MAAM4L,QACb,GAAsB,MAAlBhK,EAAwB,CAGxB,GAFAsI,EAActI,GAEH,MADCmH,EAAO3E,WAAW,MAE1B,OAEkB,MAAlBxC,GACAvC,EAASyI,KAEbuC,EAAS,CACL3K,EAAG/C,EAAEkP,QAAU9C,EAAO+C,WACtBnM,EAAGhD,EAAEoP,QAAUhD,EAAOiD,kBAG3B,GAA4B,SAAxBjD,EAAO/I,MAAM4L,QACE,MAAlBhK,GAA0C,OAAfqI,GAAuBA,EAAWhO,OAASa,EAAMmK,QAC5E8B,EAAO/I,MAAM4L,OAAS,WAEC,OAAnBhK,GAA0C,OAAfqI,GAAuBA,EAAWhO,OAASa,EAAMmK,MAC5EiD,EAActI,GAElBvC,EAASyI,KACTuC,EAAS,CACL3K,EAAG/C,EAAEkP,QAAU9C,EAAO+C,WACtBnM,EAAGhD,EAAEoP,QAAUhD,EAAOiD,iBAG3B,CACH,GAAsB,MAAlBpK,EAAwB,CACxB,IAAM6H,EAAYF,GAAsBT,EAAQ,MAChDzJ,EAAS+I,GAAcqB,EAAUV,SACjC1J,EAASwK,GAAUJ,IAEvBY,EAAS,CACL3K,EAAG/C,EAAEkP,QAAU9C,EAAO+C,WACtBnM,EAAGhD,EAAEoP,QAAUhD,EAAOiD,YAG9BhC,GAAc,KAElBiC,YAAa,SAACtP,GACV,IAAMoM,EAAS0B,EAAcG,QAC7B,GAAe,OAAX7B,EAAJ,CAGA,IhB7MImD,EAAgBC,EgB6Md3E,EAAmB,CACrB9H,EAAG/C,EAAEkP,QAAU9C,EAAO+C,WACtBnM,EAAGhD,EAAEoP,QAAUhD,EAAOiD,WAE1B,GAAIjC,EAAc,CACd,GAAsB,MAAlBnI,EAAwB,CACxB,IAAM6H,EAAYF,GAAsBT,EAAQ,MAChDzJ,EAAS+I,GAAcqB,EAAUV,SACjC1J,EAASwK,GAAUJ,IAEvB,IAAI2C,EAAS5E,EAAQ9H,EAAIgI,EAAMhI,EAC3B2M,EAAS7E,EAAQ7H,EAAI+H,EAAM/H,EAC/B,GAA4B,YAAxBoJ,EAAO/I,MAAM4L,OAAsB,CACnC,GAAmB,OAAf3B,GACkB,OAAdE,EACA,GAAIF,EAAWhO,OAASa,EAAMgF,WACvBmI,EAAWhO,OAASa,EAAM+H,YAC1BoF,EAAWhO,OAASa,EAAM6G,KAC1BsG,EAAWhO,OAASa,EAAMmK,KAAM,CACnC,IAAIqF,EAMJ,GAJIA,EADArC,EAAWhO,OAASa,EAAM+H,WACjBoF,EAA0BjF,UAE3BiF,EAERtN,EAAE4P,UAAYD,EAAMrQ,OAASa,EAAM6G,IAAK,CACxC,IAAM6I,EAAiB,CAAE9M,EAAG0M,EAAQzM,EAAG0M,GAEjCI,EAAWvF,EAAOsF,GAClBE,EAAaxF,EAAOoF,EAAM1M,MAGhCwM,EAASK,GAFGH,EAAM1M,KAAKF,EAAIgN,GAG3BL,EAASI,GAFGH,EAAM1M,KAAKD,EAAI+M,GAG3B,IAAMC,EAAMrL,KAAKsL,OhB/OrCV,EgB+OkDM,GhB9OxD9M,GADsByM,EgB+OyChC,GhB9OpDzK,EAAIwM,EAAMvM,EAAIwM,EAAOxM,IAAMuH,EAAOgF,GAAShF,EAAOiF,KgB+OnCG,EAAM9O,SAASkC,GAAK0M,EAAS9K,KAAKpF,IAAIiO,EAAUzK,EAAG,GAAKiN,EACxDL,EAAM9O,SAASmC,GAAK0M,EAAS/K,KAAKpF,IAAIiO,EAAUxK,EAAG,GAAKgN,EACxDL,EAAM1M,KAAKF,GAAK0M,EAASO,EACzBL,EAAM1M,KAAKD,GAAK0M,EAASM,OAErBxC,EAAUzK,EAAI,EACd4M,EAAM1M,KAAKF,GAAK0M,EACTjC,EAAUzK,EAAI,IACrB4M,EAAM9O,SAASkC,GAAK0M,EACpBE,EAAM1M,KAAKF,IAAM0M,GAEjBjC,EAAUxK,EAAI,EACd2M,EAAM1M,KAAKD,GAAK0M,EACTlC,EAAUxK,EAAI,IACrB2M,EAAM9O,SAASmC,GAAK0M,EACpBC,EAAM1M,KAAKD,IAAM0M,GAGJ,IAAjBC,EAAM1M,KAAKF,IACX4M,EAAM1M,KAAKF,GAAK,GAEC,IAAjB4M,EAAM1M,KAAKD,IACX2M,EAAM1M,KAAKD,GAAK,GAEhB2M,EAAM1M,KAAKF,EAAI,IACfyK,EAAUzK,IAAM,EAChB4M,EAAM1M,KAAKF,EAAI4B,KAAKuL,IAAIP,EAAM1M,KAAKF,GACnC4M,EAAM9O,SAASkC,GAAK4M,EAAM1M,KAAKF,GAE/B4M,EAAM1M,KAAKD,EAAI,IACfwK,EAAUxK,IAAM,EAChB2M,EAAM1M,KAAKD,EAAI2B,KAAKuL,IAAIP,EAAM1M,KAAKD,GACnC2M,EAAM9O,SAASmC,GAAK2M,EAAM1M,KAAKD,QAEhC,GAAIsK,EAAWhO,OAASa,EAAMkF,SACjCmI,EAAUzK,GAAK0M,EACfjC,EAAUxK,GAAK0M,OACZ,GAAIpC,EAAWhO,OAASa,EAAMuG,OAAQ,CACzC,IAAMC,EAAS2G,EACf3G,EAAOC,OAAS2D,EAAO,CACnBxH,EAAG8H,EAAQ9H,EAAI4D,EAAO9F,SAASkC,EAC/BC,EAAG6H,EAAQ7H,EAAI2D,EAAO9F,SAASmC,IAK/C0K,EAAS7C,GACoB,MAAzBiD,EAAcG,SACdC,GAAaJ,EAAcG,QAASvC,EAAW,KAAM4B,QAEtD,GAA4B,aAAxBlB,EAAO/I,MAAM4L,OAAuB,CAOnC,IAAIkB,EANZ,GAAkB,MAAd7C,EACA,GAAIA,EAAWhO,OAASa,EAAMgF,WACvBmI,EAAWhO,OAASa,EAAMuG,QAC1B4G,EAAWhO,OAASa,EAAM+H,YAC1BoF,EAAWhO,OAASa,EAAM6G,KAC1BsG,EAAWhO,OAASa,EAAMmK,MAGzB6F,EADA7C,EAAWhO,OAASa,EAAM+H,WAChBoF,EAA0BjF,UAE3BiF,GAENzM,SAASkC,GAAK0M,EACrBU,EAAOtP,SAASmC,GAAK0M,OAClB,GAAIpC,EAAWhO,OAASa,EAAMkF,SAAU,CAC3C,IAAME,EAAW+H,EACjB/H,EAASG,GAAG3C,GAAK0M,EACjBlK,EAASG,GAAG1C,GAAK0M,EACjBnK,EAASK,GAAG7C,GAAK0M,EACjBlK,EAASK,GAAG5C,GAAK0M,EACjBnK,EAASM,GAAG9C,GAAK0M,EACjBlK,EAASM,GAAG7C,GAAK0M,EAGzBhC,EAAS7C,GACoB,MAAzBiD,EAAcG,SACdC,GAAaJ,EAAcG,QAASvC,EAAW,KAAM4B,QAGzDoB,EAAe3D,EAAOF,QAGH,OAAnB5F,GAA0C,OAAfqI,GAAuBA,EAAWhO,OAASa,EAAMmK,KAC5E8F,GAAYhE,EAAQvB,EAASyC,EAAYG,GAEzC2C,GAAYhE,EAAQvB,EAAS5F,EAAgBwI,GAEjDC,EAAS7C,KAGjBwF,UAAW,SAACrQ,GACR,IAAMoM,EAAS0B,EAAcG,QAC7B,GAAe,OAAX7B,EAAJ,CAGA,IAAMvB,EAAmB,CACrB9H,EAAG/C,EAAEkP,QAAU9C,EAAO+C,WACtBnM,EAAGhD,EAAEoP,QAAUhD,EAAOiD,WAE1B,GAAkB,MAAd/B,EACA8C,GAAYhE,EAAQvB,EAASyC,EAAYG,GACrCH,EAAWhO,OAASa,EAAMmK,MAC1B5H,EAASkJ,GAA4B0B,IACrCC,EAAc,OACiB,YAAxBnB,EAAO/I,MAAM4L,QACpB1B,EAAc,WAEf,GAA4B,YAAxBnB,EAAO/I,MAAM4L,QAA0C,MAAlBhK,EAAwB,CACpEvC,EAAS+I,GAAcC,IACvB,IAAMoB,EAAYF,GAAsBT,EAAQ,MAChDzJ,EAASwK,GAAUJ,IAEvBO,GAAc,SAOlC,SAAS+C,GAAYhE,EACjBvB,GAEyB,IADzB5F,EACwB,uDADiE,KACzFwI,EAAwB,uCACxB,GAAsB,MAAlBxI,GACA,GAAIA,EAAe3F,OAASa,EAAMgF,WAC3BF,EAAe3F,OAASa,EAAM+H,YAC9BjD,EAAe3F,OAASa,EAAM6G,KAC9B/B,EAAe3F,OAASa,EAAMmK,KAAM,CACvC,IAAIqF,EAME9O,GAJF8O,EADA1K,EAAe3F,OAASa,EAAM+H,WACrBjD,EAA8BoD,UAE/BpD,GAEWpE,SACnBoC,EAAgB0M,EAAM1M,KAEpBgH,EAAS,CACX,CAAElH,EAAGlC,EAASkC,EAAGC,EAAGnC,EAASmC,GAC7B,CAAED,EAAGlC,EAASkC,EAAIE,EAAKF,EAAI,EAAGC,EAAGnC,EAASmC,GAC1C,CAAED,EAAGlC,EAASkC,EAAIE,EAAKF,EAAGC,EAAGnC,EAASmC,GACtC,CAAED,EAAGlC,EAASkC,EAAIE,EAAKF,EAAGC,EAAGnC,EAASmC,EAAIC,EAAKD,EAAI,GACnD,CAAED,EAAGlC,EAASkC,EAAIE,EAAKF,EAAGC,EAAGnC,EAASmC,EAAIC,EAAKD,GAC/C,CAAED,EAAGlC,EAASkC,EAAIE,EAAKF,EAAI,EAAGC,EAAGnC,EAASmC,EAAIC,EAAKD,GACnD,CAAED,EAAGlC,EAASkC,EAAGC,EAAGnC,EAASmC,EAAIC,EAAKD,GACtC,CAAED,EAAGlC,EAASkC,EAAGC,EAAGnC,EAASmC,EAAIC,EAAKD,EAAI,IAExCsN,EAAarG,EACdsG,KAAI,SAACC,GAAD,OAAOjG,EAAO,CAAExH,EAAGyN,EAAEzN,EAAI8H,EAAQ9H,EAAGC,EAAGwN,EAAExN,EAAI6H,EAAQ7H,KAAQ,MACjEyN,WAAU,SAAC7M,GAAD,OAAWA,KACtB0M,GAAc,GACd7C,EAAa,CACT1K,EAAG4B,KAAKsL,KAAKhG,EAAOqG,GAAYvN,GAAKlC,EAASkC,EAAIE,EAAKF,EAAI,IAC3DC,EAAG2B,KAAKsL,KAAKhG,EAAOqG,GAAYtN,GAAKnC,EAASmC,EAAIC,EAAKD,EAAI,MAE/DoJ,EAAO/I,MAAM4L,OAAS,WACfpE,EAAQ9H,GAAKlC,EAASkC,GAC1B8H,EAAQ9H,GAAKlC,EAASkC,EAAIE,EAAKF,GAC/B8H,EAAQ7H,GAAKnC,EAASmC,GACtB6H,EAAQ7H,GAAKnC,EAASmC,EAAIC,EAAKD,EAClCoJ,EAAO/I,MAAM4L,OAAS,OAEtB7C,EAAO/I,MAAM4L,OAAS,eAEvB,GAAIhK,EAAe3F,OAASa,EAAMkF,SAAU,CAC/C,IAAME,EAAWN,EACXgF,EAAS,CAAC1E,EAASG,GAAIH,EAASK,GAAIL,EAASM,IAC7CyK,EAAarG,EACdsG,KAAI,SAACC,GAAD,OAAOjG,EAAO,CAAExH,EAAGyN,EAAEzN,EAAI8H,EAAQ9H,EAAGC,EAAGwN,EAAExN,EAAI6H,EAAQ7H,KAAQ,MACjEyN,WAAU,SAAC7M,GAAD,OAAWA,KACtB0M,GAAc,GACd7C,EAAaxD,EAAOqG,IACpBlE,EAAO/I,MAAM4L,OAAS,WACfyB,GAAgB7F,EAAStF,EAASG,GAAIH,EAASK,GAAIL,EAASM,IACnEuG,EAAO/I,MAAM4L,OAAS,OAEtB7C,EAAO/I,MAAM4L,OAAS,eAEvB,GAAIhK,EAAe3F,OAASa,EAAMuG,OAAQ,CAC7C,IAAMC,EAAS1B,EACT6K,EAAWvF,EAAO,CAAExH,EAAG8H,EAAQ9H,EAAI4D,EAAO9F,SAASkC,EAAGC,EAAG6H,EAAQ7H,EAAI2D,EAAO9F,SAASmC,IACvF8M,GAAYnJ,EAAOC,OAAS,IAAMkJ,GAAYnJ,EAAOC,OAAS,GAC9DwF,EAAO/I,MAAM4L,OAAS,UACf1E,EAAO,CAAExH,EAAG8H,EAAQ9H,EAAI4D,EAAO9F,SAASkC,EAAGC,EAAG6H,EAAQ7H,EAAI2D,EAAO9F,SAASmC,IAAO2B,KAAKkD,IAAIlB,EAAOC,OAAS,GAAI,GACrHwF,EAAO/I,MAAM4L,OAAS,OAEtB7C,EAAO/I,MAAM4L,OAAS,gBAI9B7C,EAAO/I,MAAM4L,OAAS,UAI9B,SAASyB,GAAgBF,EAAY9K,EAAaE,EAAaC,GAC3D,IAAI8K,EAAKH,EAAEzN,EAAI8C,EAAG9C,EACd6N,EAAKJ,EAAExN,EAAI6C,EAAG7C,EACd6N,EAAOhL,EAAG9C,EAAI6C,EAAG7C,EACjB+N,EAAOlL,EAAG5C,EAAI6C,EAAG7C,EACjB+N,EAAID,GAAQpL,EAAG3C,EAAI8C,EAAG9C,GAAK8N,GAAQnL,EAAG1C,EAAI6C,EAAG7C,GAC7CgO,EAAIF,EAAOH,EAAKE,EAAOD,EACvBK,GAAKpL,EAAG7C,EAAI0C,EAAG1C,GAAK2N,GAAMjL,EAAG3C,EAAI8C,EAAG9C,GAAK6N,EAC7C,OAAIG,EAAI,EAAUC,GAAK,GAAKC,GAAK,GAAKD,EAAIC,GAAKF,EACxCC,GAAK,GAAKC,GAAK,GAAKD,EAAIC,GAAKF,EAGxC,SAAS7C,GAAa9B,EAA2BV,GAEqD,IADlGzG,EACiG,uDADvB,KAC1EiM,EAAiG,uDAAN,KAC3F,GAAc,MAAV9E,EAAJ,CAGA,IAAMpH,EAAUoH,EAAO3E,WAAW,MAClC,GAAe,MAAXzC,IACAA,EAAQ2C,aAAa+D,EAAW,EAAG,GACb,MAAlBzG,IACAD,EAAQ2C,aAAa5C,EAAWC,EAAS,CAAEjC,EAAG2I,EAAUrE,MAAOrE,EAAG0I,EAAUnE,QAAUtC,GAAiB,EAAG,GAC1GkM,GAAWlM,EAAgBD,IAEP,MAApBkM,GACA,GAAIA,EAAiB5R,OAASa,EAAMmK,KAAM,CACtC,IAAM8G,EAAWF,EACjBlM,EAAQ2C,aAAa5C,EAAWC,EAAS,CAAEjC,EAAG2I,EAAUrE,MAAOrE,EAAG0I,EAAUnE,QAAU6J,GAAW,EAAG,QAEpGD,GAAWD,EAAkClM,IAM7D,SAASqM,GAAe/L,EAA+BzE,EAAmBoC,GACtE,IAAMqO,EAAOhM,EAAIiM,qBAAqB1Q,EAASkC,EAAGlC,EAASmC,EAAGnC,EAASkC,EAAIE,EAAKF,EAAGlC,EAASmC,EAAIC,EAAKD,GAOrG,OANAsO,EAAKE,aAAa,EAAG,QACrBF,EAAKE,aAAa,GAAK,QACvBF,EAAKE,aAAa,GAAK,QACvBF,EAAKE,aAAa,GAAK,QACvBF,EAAKE,aAAa,GAAK,QACvBF,EAAKE,aAAa,EAAG,QACdF,EAGX,SAASH,GAAWtF,EAAsEvG,GAGtF,GAFAA,EAAIc,UAAY,EAEZyF,EAAIvM,OAASa,EAAMgF,WAChB0G,EAAIvM,OAASa,EAAM+H,YACnB2D,EAAIvM,OAASa,EAAM6G,KACnB6E,EAAIvM,OAASa,EAAMmK,KAAM,CAC5B,IAAIqF,EAEAA,EADA9D,EAAIvM,OAASa,EAAM+H,WACV2D,EAAmBxD,UAEpBwD,EAERA,EAAIvM,OAASa,EAAMmK,MACnBhF,EAAImM,YAAY,CAAC,EAAG,IAExB,IAAI5Q,EAAW8O,EAAM9O,SACjBoC,EAAO0M,EAAM1M,KACjBqC,EAAIE,YACJ,IAAMkM,EAAQ/M,KAAKpF,IAAIsB,EAASmC,EAAIC,EAAKD,EAAGnC,EAASmC,GACrDsC,EAAIG,OACA5E,EAASkC,EAAIuC,EAAIc,UACjBsL,EAAQpM,EAAIc,WAChBd,EAAIK,OACA9E,EAASkC,EAAIE,EAAKF,EAAIuC,EAAIc,UAC1BsL,EAAQpM,EAAIc,WAChBd,EAAIK,OACA9E,EAASkC,EAAIE,EAAKF,EAAIuC,EAAIc,UAC1BsL,EAAQ/M,KAAKuL,IAAIjN,EAAKD,GAAKsC,EAAIc,WACnCd,EAAIK,OACA9E,EAASkC,EAAIuC,EAAIc,UACjBsL,EAAQ/M,KAAKuL,IAAIjN,EAAKD,GAAKsC,EAAIc,WACnCd,EAAIK,OACA9E,EAASkC,EAAIuC,EAAIc,UACjBsL,EAAQpM,EAAIc,WAChBd,EAAIQ,YACJR,EAAIgB,YAAc+K,GAAe/L,EAAKzE,EAAU8O,EAAM1M,MACtDqC,EAAIW,UAAYX,EAAIgB,YACpBhB,EAAIiB,SAEJ,IAEMoL,EAAY,CACd,CAAE5O,EAAGlC,EAASkC,EAAGC,EAAGnC,EAASmC,GAC7B,CAAED,EAAGlC,EAASkC,EAAIE,EAAKF,EAAI,EAAGC,EAAGnC,EAASmC,GAC1C,CAAED,EAAGlC,EAASkC,EAAIE,EAAKF,EAAGC,EAAGnC,EAASmC,GACtC,CAAED,EAAGlC,EAASkC,EAAIE,EAAKF,EAAGC,EAAGnC,EAASmC,EAAIC,EAAKD,EAAI,GACnD,CAAED,EAAGlC,EAASkC,EAAIE,EAAKF,EAAGC,EAAGnC,EAASmC,EAAIC,EAAKD,GAC/C,CAAED,EAAGlC,EAASkC,EAAIE,EAAKF,EAAI,EAAGC,EAAGnC,EAASmC,EAAIC,EAAKD,GACnD,CAAED,EAAGlC,EAASkC,EAAGC,EAAGnC,EAASmC,EAAIC,EAAKD,GACtC,CAAED,EAAGlC,EAASkC,EAAGC,EAAGnC,EAASmC,EAAIC,EAAKD,EAAI,IAG1C6I,EAAIvM,OAASa,EAAMmK,MACnBhF,EAAImM,YAAY,IAGpBE,EAAUC,SAAQ,SAAC/I,GACfvD,EAAIE,YACJF,EAAIuB,IACAgC,EAAK9F,EACL8F,EAAK7F,EArBE,EAuBP,EACA,EAAI2B,KAAKmC,IACT,GAEJxB,EAAIY,OACJZ,EAAIgB,YAAc,UAClBhB,EAAIiB,SACJjB,EAAIQ,oBAEL,GAAI+F,EAAIvM,OAASa,EAAMkF,SAAU,CACpC,IAAME,EAAWsG,EACjBvG,EAAIE,YACJF,EAAIG,OAAOF,EAASG,GAAG3C,EAAGwC,EAASG,GAAG1C,GACtCsC,EAAIK,OAAOJ,EAASK,GAAG7C,EAAGwC,EAASK,GAAG5C,GACtCsC,EAAIK,OAAOJ,EAASM,GAAG9C,EAAGwC,EAASM,GAAG7C,GACtCsC,EAAIQ,YAGJ,IAAM6L,EAAY,CAACpM,EAASG,GAAIH,EAASK,GAAIL,EAASM,IAEhDtG,EAAM,CACRwD,EAAG4B,KAAKpF,IAAIgG,EAASG,GAAG3C,EAAGwC,EAASK,GAAG7C,EAAGwC,EAASM,GAAG9C,GACtDC,EAAG2B,KAAKpF,IAAIgG,EAASG,GAAG1C,EAAGuC,EAASK,GAAG5C,EAAGuC,EAASM,GAAG7C,IAGpD6E,EAAM,CACR9E,EAAG4B,KAAKkD,IAAItC,EAASG,GAAG3C,EAAGwC,EAASK,GAAG7C,EAAGwC,EAASM,GAAG9C,GACtDC,EAAG2B,KAAKkD,IAAItC,EAASG,GAAG1C,EAAGuC,EAASK,GAAG5C,EAAGuC,EAASM,GAAG7C,IAE1DsC,EAAIgB,YAAc+K,GAAe/L,EAAK/F,EAAK,CACvCwD,EAAG8E,EAAI9E,EAAIxD,EAAIwD,EACfC,EAAG6E,EAAI7E,EAAIzD,EAAIyD,IAEnBsC,EAAIW,UAAYX,EAAIgB,YACpBhB,EAAIiB,SAIJoL,EAAUC,SAAQ,SAAC/I,GACfvD,EAAIE,YACJF,EAAIuB,IACAgC,EAAK9F,EACL8F,EAAK7F,EANE,EAQP,EACA,EAAI2B,KAAKmC,IACT,GAEJxB,EAAIY,OACJZ,EAAIgB,YAAc,UAClBhB,EAAIiB,SACJjB,EAAIQ,oBAEL,GAAI+F,EAAIvM,OAASa,EAAMuG,OAAQ,CAClC,IAAMC,EAASkF,EACThL,EAAW8F,EAAO9F,SACxByE,EAAIE,YACJF,EAAIG,OACA5E,EAASkC,EAAI4D,EAAOC,OAAStB,EAAIc,UACjCvF,EAASmC,GACbsC,EAAIuB,IAAIhG,EAASkC,EAAGlC,EAASmC,EAAG2D,EAAOC,OAAStB,EAAIc,UAAW,EAAa,EAAVzB,KAAKmC,IACvExB,EAAIQ,YACJR,EAAIgB,YAAc+K,GAAe/L,EAAK,CAClCvC,EAAGlC,EAASkC,EAAI4D,EAAOC,OACvB5D,EAAGnC,EAASmC,EAAI2D,EAAOC,QACxB,CACC7D,EAAmB,EAAhB4D,EAAOC,OACV5D,EAAmB,EAAhB2D,EAAOC,SAEdtB,EAAIW,UAAYX,EAAIgB,YACpBhB,EAAIiB,U,cChmBG,SAASsL,GAAgB1S,GAA0B,IAAD,EACnCyD,mBAASzD,EAAM2S,cADoB,mBACtD9Q,EADsD,KAC/C+Q,EAD+C,OAETnP,oBAAS,GAFA,mBAEtDoP,EAFsD,KAElCC,EAFkC,KAGvDC,EAAe,SAACC,GAClB,QAAetS,IAAXsS,EAAsB,CACtB,IAAIC,EAAQD,EAAOE,IAAI9N,OACT1E,IAAVuS,IACAA,EAAQ,GAEZ,IAAME,EAAW,CAAEnO,EAAGgO,EAAOE,IAAIlO,EAAGE,EAAG8N,EAAOE,IAAIhO,EAAGC,EAAG6N,EAAOE,IAAI/N,EAAGC,EAAG6N,GACzEL,EAASO,GACRnL,SAASoL,eAAepT,EAAME,IAAyBuE,MAAxD,UAAmEY,EAAW8N,IAC9EnT,EAAMY,SAASuS,KAuBvB,OACI,8BACI,gCACKN,EAAqB,sBAAK3O,MAfR,CAC3BxC,SAAU,QACV2R,OAAQ,GAasB,UAClB,qBAAKnP,MAXQ,CACzBxC,SAAU,QACVE,IAAK,MACLD,MAAO,MACP2R,OAAQ,MACRC,KAAM,OAMyB5S,QAnBf,WAChBmS,GAAsB,MAmBV,qBAAK/P,IACD,SAAClC,GACa,OAANA,IACAA,EAAEqD,MAAMsP,UAAR,sBAAmC3S,EAAE4S,aAAe,EAApD,SAHZ,SAMI,cAAC,KAAD,CACI5R,MAAO,CAAEmD,EAAGnD,EAAMmD,EAAGE,EAAGrD,EAAMqD,EAAGC,EAAGtD,EAAMsD,EAAGC,EAAGvD,EAAMuD,GACtDsO,cAAc,EACdC,iBAAkBZ,EAClBnS,SAAUmS,SAGb,KACT,cAAC,EAAD,CACI7S,GAAIF,EAAME,GACVa,MAAOf,EAAMe,MACbT,KAAM+E,EAAWxD,GACjB1B,KAAK,OACLQ,QA3CI,WAChBmS,GAAuBD,IA2CXjS,SAAU,SAACC,GACNA,EAAE2D,OAA4BoP,QAAU,KACzC,IAAMT,EAAWrO,EAAYjE,EAAE2D,OAAOC,OACtCmO,EAASO,GACTnT,EAAMY,SAASuS,WC7EvC,IACeU,GADW,oBCA1B,IACeC,GADa,sBCA5B,IACeC,GADa,sBCA5B,IACeC,GADK,cCApB,IACeC,GADW,oBCA1B,IACeC,GADU,mBCKzB,IAAMC,GZUC,SAAyBnH,EAAgBlJ,GAC/C,IAAMqJ,EAAY,IAAIP,UAAU9I,EAAKF,EAAGE,EAAKD,GAO7C,OANAsJ,EAAUN,KAAK9F,KAAK,KACG,2BACnBiG,GADmB,IAEtBlH,eAAgB,KAChBmH,OAAQE,IYhBYiH,CAClB,CACItO,eAAgB,KAChBmH,OAAQ,IAAIL,UAAU,EAAG,IAE7B,CAAEhJ,EAAG,IAAKC,EAAG,MAmBFwQ,GAjBqB,CAChCrH,OAAQmH,GACRG,aAAc,CACVC,QAAS,CAACJ,GAAclH,QACxBuH,uBAAwB,GAE5BrK,YAAaZ,EAASvD,UACtB2F,YAAa,CACT9E,UAAW/B,EAAY,aACvBoC,YAAapC,EAAY,aACzBkC,YAAa,EACb1G,KAAM,GACN2I,SAAU,GACVE,UAAWrE,EAAY,e,OC0DhB2P,ICnFHC,GDmFGD,GApEf,WACI,IAAMlR,EAAWC,cACX8G,EAAiBF,aACnB,SAACC,GAAD,OAAsBA,EAAMF,eAEhC,OACI,sBAAKlK,UAAU,eAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAACyS,GAAD,CACIxS,GAAG,gBACHa,MAAM,sEACN4R,aAAc0B,GAAiB1I,YAAY9E,UAC3CjG,SAAU,SAACiB,GACP0B,EExBT,SAAyB1B,GACpC,MAAO,CACH1B,KAAM0T,GACNpP,MAAO5C,GFqBkB8S,CAAgB9S,OAEjC,cAAC6Q,GAAD,CACIxS,GAAG,kBACHa,MAAM,sEACN4R,aAAc0B,GAAiB1I,YAAYzE,YAC3CtG,SAAU,SAACiB,GACP0B,EG9Bb,CACHpD,KAAM2T,GACNrP,MH4B2C5C,OAEnC,cAAC,EAAD,CACI3B,GAAG,uBACHa,MAAM,wFACNT,KAAI,UAAK+T,GAAiB1I,YAAY3E,aACtC5G,IAAI,IACJD,KAAK,SACLS,SAAU,SAACC,GACP,IAAMmG,EAAcnG,EAAE2D,OAAOoQ,cAC7BrR,EIzCb,CACHpD,KAAM4T,GACNtP,MJuC2CuC,UAGvC,sBAAK/G,UAAU,aAAf,UACKqK,IAASf,EAAS0B,MACZ,0BACC/K,GAAG,gBACHa,MAAM,iCACNV,aAAcgU,GAAiB1I,YAAYrL,KAC3CM,SAAU,SAACC,GKnDpB,IAAoB4D,ELoDPlB,GKpDOkB,ELoDa5D,EAAE2D,OAAOC,MKnD9C,CACHtE,KAAM6T,GACNvP,MAAOA,QLoDE6F,IAASf,EAAS0B,MACZ,cAAC,EAAD,CACC/K,GAAG,oBACHa,MAAM,4EACNT,KAAI,UAAK+T,GAAiB1I,YAAY1C,UACtC7I,IAAI,IACJD,KAAK,SACLS,SAAU,SAACC,GM9DpB,IAAwB4D,EN+DXlB,GM/DWkB,EN+Da5D,EAAE2D,OAAOoQ,cM9DlD,CACHzU,KAAM+T,GACNzP,MAAOA,QN+DE6F,IAASf,EAAS0B,MACZ,cAACyH,GAAD,CACCxS,GAAG,qBACHa,MAAM,gEACN4R,aAAc0B,GAAiB1I,YAAYxC,UAC3CvI,SAAU,SAACiB,GACP0B,EOtEjB,CACHpD,KAAM8T,GACNxP,MPoE6C5C,c,4IC3EzC6S,O,eAAAA,I,aAAAA,I,iBAAAA,I,eAAAA,I,4BAAAA,Q,YOGG,SAASG,KACvB,OACC,eAACjK,EAAA,EAAD,CAASC,QAAQ,cAAc3G,MAAO,CAAEgE,MAAO,OAAQE,OAAQ,QAA/D,UACC,sBAAMlE,MAAO,CAAE6C,KAAM,WAAamE,EAAE,sYACpC,sBAAMhH,MAAO,CAAE6C,KAAM,WAAamE,EAAE,4YACpC,sBAAMhH,MAAO,CAAE6C,KAAM,WAAamE,EAAE,0NCCvC,IAAM1B,GAAYC,aAAW,SAACtI,GAAD,OACzBC,YAAa,CACTuJ,OAAQ,CACJxG,gBAAiB,UACjBtC,MAAO,UACPiT,WAAY,IACZ9S,WAAY,YACZ+S,SAAU,OACVzT,OAAQ,MACRC,QAAS,OACT2G,MAAO,OACPE,OAAQ,OACR,UAAW,CACPjE,gBAAiB,YAGzB6Q,MAAO,CACHC,UAAW,MACX9Q,gBAAiB,YACjBtC,MAAO,cASJ,SAASqT,GAAWlV,GAC/B,IAAMoC,EAAUoH,KADuC,EAE/B3G,IAAMY,UAAS,GAFgB,mBAEhDC,EAFgD,KAE1CC,EAF0C,KAGjDwR,EAAYtS,IAAM+L,OAA0B,MAM5C7K,EAAc,SAACqR,GACbD,EAAUrG,SAAWqG,EAAUrG,QAAQuG,SAASD,EAAM5Q,SAI1Db,GAAQ,IAGZ,SAAS2R,EAAkBF,GACL,QAAdA,EAAMG,MACNH,EAAMI,iBACN7R,GAAQ,IAIhB,IAAM8R,EAAW5S,IAAM+L,OAAOlL,GAO9B,OANAb,IAAMgM,WAAU,YACa,IAArB4G,EAAS3G,UAA6B,IAATpL,GAC7ByR,EAAUrG,QAAS4G,QAEvBD,EAAS3G,QAAUpL,IACpB,CAACA,IAEA,sBAAKzD,UAAU,mBAAf,UACI,cAACyC,EAAA,EAAD,CACIiT,KAAK,MACL1V,UAAWmC,EAAQuI,OACnB5H,IAAKoS,EACLxU,QAhCS,WACjBgD,GAAQ,SAAC8R,GAAD,OAAeA,MAgCf5T,MAAM,UALV,SAMI,cAACgT,GAAD,MAEJ,8BACI,cAACe,GAAA,EAAD,CAAQlS,KAAMA,EAAMmS,SAAUV,EAAUrG,QAASgH,UAAMpV,EAAWqV,YAAU,EAACC,eAAa,EAA1F,SACK,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACG,cAACC,GAAA,EAAD,2BACQF,GADR,IAEI/R,MAAO,CAAEkS,gBAA+B,WAAdF,EAAyB,aAAe,iBAFtE,SAII,cAAC3L,EAAA,EAAD,CAAOtK,UAAWmC,EAAQ4S,MAA1B,SACI,cAACqB,GAAA,EAAD,CAAmBC,YAAavS,EAAhC,SACI,eAACwS,GAAA,EAAD,CAAUC,cAAe9S,EAAMxD,GAAG,iBAAiBuW,UAAWnB,EAA9D,UACI,cAACoB,GAAA,EAAD,CAAU/V,QAAS,SAACE,GAAQb,EAAM2W,SAASjC,GAAOkC,MAAO7S,EAAYlD,IAArE,4CACA,cAAC6V,GAAA,EAAD,CAAU/V,QAAS,SAACE,GAAQb,EAAM2W,SAASjC,GAAOmC,KAAM9S,EAAYlD,IAApE,wDACA,cAAC6V,GAAA,EAAD,CAAU/V,QAAS,SAACE,GAAQb,EAAM2W,SAASjC,GAAOoC,OAAQ/S,EAAYlD,IAAtE,wDACA,cAAC6V,GAAA,EAAD,CAAU/V,QAAS,SAACE,GAAQb,EAAM2W,SAASjC,GAAOqC,MAAOhT,EAAYlD,IAArE,4CACA,cAAC6V,GAAA,EAAD,CAAU/V,QAAS,SAACE,GAAQb,EAAM2W,SAASjC,GAAOsC,YAAajT,EAAYlD,IAA3E,0ECjExC,SAASoW,GAAsBC,EAAgBC,EAAgBC,GAC9D,IAAK,IAAIhK,EAAI,EAAGA,EAAI+J,EAAI/O,OAAQgF,IAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAI8J,EAAIjP,MAAOmF,IAE9B,IADA,IAAIgK,EAAkC,GAArBjK,EAAI+J,EAAIjP,MAAQmF,GACxBG,EAAI,EAAGA,EAAI,EAAGA,IACtB2J,EAAItK,KAAKwK,EAAY7J,GAAK0J,EAAIrK,KAAKwK,EAAY7J,GAAK4J,EAAY5J,G,wBC5B9DhE,I,OAAYC,aAAW,SAACtI,GAAD,OACzBC,YAAa,CACTkW,IAAK,CACDC,WAAY,QAEhBC,OAAQ,CACJtP,MAAO,eAUJ,SAASuP,GAAT,GAAyE,IAA7CC,EAA4C,EAA5CA,QAAS9W,EAAmC,EAAnCA,SAC1CwB,EAAUoH,KADmE,EAEzD/F,mBAAiB,GAFwC,mBAE5EgB,EAF4E,KAErEkT,EAFqE,KAGnF,OACI,qBAAK1X,UAAU,6BAAf,SACI,sBAAKA,UAAU,0BAAf,UACI,cAAC2X,GAAA,EAAD,CACI3X,UAAWmC,EAAQoV,OACnBnX,aAAc,EACdgE,kBAAgB,yBAChBwT,KAAM,IACNzX,IAAK,EACLsI,IAAK,EACLoP,kBAAkB,OAClBlX,SAAQ,iHAAE,SAACC,EAAGkX,GACV,IAAMrS,EAAMqS,EACZJ,EAASjS,GACT9E,EAAS8E,QAGjB,cAACsS,GAAA,EAAD,CAAKnW,MAAM,UAAUc,aAAW,MAC5BmB,KAAK,QACL7D,UAAWmC,EAAQkV,IACnB3W,QAAS,SAACE,GAAD,OAAO6W,EAAQjT,IAH5B,SAII,cAACmG,EAAA,EAAD,UACI,sBAAMM,EAAE,+DCrChC,IAuBMjK,GAAcC,aAvBL,SAACC,GAAD,OACXC,YAAa,CACTC,KAAM,CACFC,OAAQ,EACRC,QAASJ,EAAMK,QAAQ,IAE3BC,YAAa,CACTC,SAAU,WACVC,MAAOR,EAAMK,QAAQ,GACrBI,IAAKT,EAAMK,QAAQ,GACnBK,MAAOV,EAAMW,QAAQC,KAAK,MAE9BhB,MAAO,CACHiB,WAAY,eAUJd,EAAmB,SAAClB,GAA6B,IACzDmC,EAAyCnC,EAAzCmC,SAAUC,EAA+BpC,EAA/BoC,QAASC,EAAsBrC,EAAtBqC,QAAYC,EADyB,YACftC,EADe,kCAEhE,OACI,eAAC,IAAD,yBAAgBuC,mBAAiB,EAACtC,UAAWmC,EAAQf,MAAUiB,GAA/D,cACI,cAACE,EAAA,EAAD,CAAYvC,UAAWmC,EAAQrB,MAAO0B,QAAQ,KAA9C,SAAoDN,IACnDE,EACG,cAACK,EAAA,EAAD,CAAYC,aAAW,QAAQ1C,UAAWmC,EAAQX,YAAad,QAAS0B,EAAxE,SACI,cAAC,IAAD,MAEJ,YAKVO,GAAaC,IAAMC,YAAW,SAChC9C,EACA+C,GAEA,OAAO,cAACC,EAAA,EAAD,aAAOC,UAAU,KAAKF,IAAKA,GAAS/C,OAGzCkD,GAAgBhC,aAAW,SAACC,GAAD,MAAmB,CAChDE,KAAM,CACFE,QAASJ,EAAMK,QAAQ,OAFTN,CAIlBiC,KASW,SAAS8U,GAAejY,GACnC,OACI,8BACI,eAACgE,EAAA,EAAD,CACII,oBAAqBxB,GACrBP,QAAS,kBAAMrC,EAAMqC,WACrBgC,kBAAgB,0BAChBX,KAAM1D,EAAMkY,OAJhB,UAKI,cAAC,GAAD,CAAahY,GAAG,0BACZmC,QAAS,kBAAMrC,EAAMqC,WADzB,+GAIA,eAAC,GAAD,CAAeiC,UAAQ,EAAvB,UACI,cAACI,EAAA,EAAD,CAAQC,WAAS,EAAChE,QAAS,WACvBX,EAAMmY,aACNnY,EAAMqC,WACPR,MAAM,UAHT,oJAMA,cAAC6C,EAAA,EAAD,CAAQC,WAAS,EAAChE,QAAS,WACvBX,EAAMoY,eACNpY,EAAMqC,WACPR,MAAM,UAHT,8IAMA,cAAC6C,EAAA,EAAD,CAAQC,WAAS,EAAChE,QAAS,kBAAMX,EAAMqC,WAAWR,MAAM,UAAxD,0DC1FpB,IACewW,GADM,eCSNC,OANf,WACI,MAAO,CACHnY,KAAMkY,KCJCE,GADM,eCSNC,OANf,WACI,MAAO,CACHrY,KAAMoY,KCJCE,GADU,mBCWVC,OAPf,SAAwB5U,GACpB,MAAO,CACH3D,KAAMsY,GACNhU,MAAOX,ICNA6U,GADM,eCWNC,OAPf,SAAqBC,GACjB,MAAO,CACH1Y,KAAMwY,GACNlU,MAAOoU,ICNAC,GADW,oBCWX1E,OAPf,SAAyBtQ,GACrB,MAAO,CACH3D,KAAM2Y,GACNrU,MAAOX,I,mBC2BT3C,GAAQ4X,aAAe,CACzBjX,QAAS,CACLkX,QAAS,CACL9W,KAAM+W,KAAU,MAEpBhX,UAAW,CACPC,KAAMgX,KAAM,KACZlP,MAAOmP,KAAG,SAKhB3P,GAAYC,aAAW,SAACtI,GAAD,OACzBC,YAAa,CACTC,KAAM,CACF+X,SAAU,EACVlR,MAAO,QAEXmR,WAAY,CACRC,YAAanY,EAAMK,QAAQ,IAE/BT,MAAO,CACHqY,SAAU,EACVG,UAAW,QACXvX,WAAY,gBA4KTwX,OAvKf,WACI,IAAMC,EC9DH,WAAuB,IAAD,EACiBhW,oBAAkB,GADnC,mBAClBiW,EADkB,KACFC,EADE,KAEzB,OAAO,SAACC,EAAYhV,GACX8U,IACDC,GAAgB,GAChBE,YAAW,WACPjV,IACA+U,GAAgB,KACjBC,KDsDKE,GACVvW,EAAWC,cACXwJ,EAAiB5C,aACnB,SAACC,GAAD,OAAsBA,EAAM2C,SAC5BwB,KAEErE,EAAwBC,aAC1B,SAACC,GAAD,OAAsBA,EAAMF,eARrB,EAUyC1G,oBAAS,GAVlD,mBAUJsW,EAVI,KAUiBC,EAVjB,OAWyBvW,mBAAwB,MAXjD,mBAWJwW,EAXI,KAWQC,EAXR,KAYL9X,EAAUoH,KAZL,EAc2C/F,oBAAS,GAdpD,mBAcJ0W,EAdI,KAckBC,EAdlB,OAeqB3W,mBAAqB,MAf1C,mBAeJ4W,EAfI,KAeMC,EAfN,KAgCX,OAfAzL,qBAAU,WACN,IAAMG,EAAW,SAACnO,GACVA,EAAEoO,UACa,SAAXpO,EAAEqO,KACF3L,EAAS+U,MACS,SAAXzX,EAAEqO,MACT3L,EAASiV,QAKrB,OADApJ,OAAOC,iBAAiB,UAAWL,GAC5B,WACHI,OAAOE,oBAAoB,UAAWN,OAI1C,qBAAK/O,UAAU,MACXC,GAAG,MADP,SAEI,eAACqa,GAAA,EAAD,CAAepZ,MAAOA,GAAtB,UACI,cAAC,GAAD,IACA,eAACqZ,GAAA,EAAD,CAAK9Y,SAAS,QAAQzB,UAAWmC,EAAQf,KAAzC,UACI,cAACoZ,GAAA,EAAD,CAAQ/Y,SAAS,SAASwC,MAAO,CAAE4F,WAAY,WAA/C,SACI,eAAC4Q,GAAA,EAAD,WACI,cAAClY,EAAA,EAAD,CAAYC,QAAQ,KAAKZ,MAAM,UAAU5B,UAAWmC,EAAQrB,MAA5D,mCAGA,cAAC,EAAD,CACI8D,UAAU,6CACVD,OAAQwP,GAAgB,CAAExQ,EAAG,EAAGC,EAAG,IAFvC,SAGI,eAAC+G,EAAA,EAAD,WACI,sBAAMM,EAAE,gBAAgBnE,KAAK,SAC7B,sBAAMmE,EAAE,6CAGhB,cAAC,EAAD,CACIrG,UAAU,mDACVD,OAAQ8T,GAAe,CAAE9U,EAAG,EAAGC,EAAG,IAFtC,SAGI,eAAC+G,EAAA,EAAD,WACI,sBAAMM,EAAE,gBAAgBnE,KAAK,SAC7B,sBAAMmE,EAAE,+JAGhB,cAACxI,EAAA,EAAD,CAAYC,aAAW,yDACnBd,MAAM,UACNlB,QAAS,YpCxClC,SAAsBga,GAC5B,GAAiB,OAAb3S,SAAmB,CACtB,IAAM4S,EAAQ5S,SAASC,cAAc,SACrC2S,EAAMza,KAAO,OACbya,EAAMC,QACQ,OAAVD,IACHA,EAAME,SAAW,SAAUja,GAC1B,IAAMka,EAAela,EAAE2D,OACvB,GAA0B,MAAtBuW,EAAaC,MAAe,CAC/B,IAAIC,EAAOF,EAAaC,MAAM,GACxBE,EAAMC,IAAIC,gBAAgBH,GAC/BI,EAAM,IAAIC,MAEXD,EAAIE,OAAS,WACZJ,IAAIK,gBAAgBH,EAAInE,KACxB,IAAMjK,EAASjF,SAASC,cAAc,UACtCgF,EAAO/E,MAAQmT,EAAInT,MACnB+E,EAAO7E,OAASiT,EAAIjT,OACpB,IAAMjC,EAAM8G,EAAO3E,WAAW,MAC9B,GAAY,OAARnC,EAAc,CACjBA,EAAI0C,UAAUwS,EAAK,EAAG,GACtB,IAAMvT,EAAW,CAChB3H,KAAMa,EAAM6G,IACZM,MAAOhC,EAAIkB,aAAa,EAAG,EAAGgU,EAAInT,MAAOmT,EAAIjT,QAC7C1G,SAAU,CACTkC,EAAG,EACHC,EAAG,GAEJC,KAAM,CACLF,EAAGyX,EAAInT,MACPrE,EAAGwX,EAAIjT,SAGTuS,EAAS7S,GAEVmF,EAAOwO,UAERJ,EAAInE,IAAMgE,MoCIqBQ,EAAa,SAAC5T,GACVwS,EAAYxS,GACZsS,GAAsB,OALlC,SAQI,eAACxP,EAAA,EAAD,WACI,sBAAMM,EAAE,gBAAgBnE,KAAK,SAC7B,sBAAMmE,EAAE,qHAGhB,cAACxI,EAAA,EAAD,CAAYC,aAAW,yDACnBd,MAAM,UACN8T,KAAK,MACLhV,QAAS,WACLuZ,EAAclN,GACdzJ,EAASkJ,GAA4B,OpCZlE,WACN,IAAIQ,EAASjF,SAASoL,eAAe,UACvB,MAAVnG,GAGJA,EAAO0O,QACN,SAAUC,GACT,GAAY,MAARA,EAAJ,CAGA,IAAMV,EAAM9L,OAAO+L,IAAIC,gBAAgB,IAAIS,KAAK,CAACD,KAC3CE,EAAO9T,SAASC,cAAc,KACpC6T,EAAKC,KAAOb,EACZY,EAAKE,aAAa,WAAY,aAC9BhU,SAASiU,KAAKC,YAAYJ,GAC1BA,EAAKjB,QACLiB,EAAKL,YAEN,YACA,IoCNkCU,GACA5Y,EAASwK,GAAUf,KAP3B,SASI,eAACpC,EAAA,EAAD,WACI,sBAAMM,EAAE,gBAAgBnE,KAAK,SAC7B,sBAAMmE,EAAE,4HAGfiP,GAAwB,cAAClC,GAAD,CACrBC,OAAQiC,EACRhC,WAAY,WACR,IAAMiE,EAA4C,OAA1BpP,EAAOlH,eACzBqJ,EAAgBnC,EAAOC,OAC7B1J,EAASkJ,GAA4B4N,IACjC+B,GACA7Y,EAAS+I,GAAc6C,KAG/BiJ,aAAc,WACV,IAAMgE,EAA4C,OAA1BpP,EAAOlH,eACzBqJ,EAAgBnC,EAAOC,OAC7B,GAAiB,OAAboN,EACA,MAAM,IAAI9R,MAEdhF,EAASmV,GAAe2B,EAASvW,OACjCP,EAASkJ,GAA4B4N,IACjC+B,GACA7Y,EAAS+I,GAAc6C,KAG/B9M,QAAS,WACL+X,GAAsB,GACtBE,EAAY,cAI5B,cAAC,EAAD,CAAOpQ,WAAY,WACf,GAAI6P,EAAqB,CACrB,GAAmB,OAAfE,EACA,MAAM,IAAI1R,MAEdhF,EAASwK,GAAUkM,IACnBD,GAAqB,OAG7B,cAAC,GAAD,CACIrD,SAAU,SAACkC,GACP,IAAIwD,EAAOrP,EACX,GAA6B,MAAzBA,EAAOlH,eAAwB,CAC/B,IAAM6H,EAAYF,GAAsBT,EAAQ,MAChDzJ,EAAS+I,GAAcqB,EAAUV,SACjC1J,EAASwK,GAAUJ,IACnB0O,EAAO1O,EAEPkL,IAAWnE,GAAOsC,WAClBzT,EAASqV,GAAYC,KAErBqB,EAAcmC,GACdrC,GAAqB,UAIpC7P,IAAgBZ,EAAS4B,MAAQ,cAAC,GAAD,IACjC4O,GACM,cAAC,GAAD,CACCnZ,SAAU,SAAC6D,GACY,OAAfwV,GAGJR,EAAQ,IAAI,WACR,IAAM6C,Eb/J/B,SAA+BtP,EAAgBuP,GAGrD,IAFG,IAAMpF,EAAM,IAAIvK,UAAUI,EAAOC,OAAO/E,MAAO8E,EAAOC,OAAO7E,QAC1D8O,EAAMlK,EAAOC,OACVG,EAAI,EAAGA,EAAI+J,EAAI/O,OAAQgF,IAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAI8J,EAAIjP,MAAOmF,IAAK,CAEnC,IADA,IAAIgK,EAAkC,GAArBjK,EAAI+J,EAAIjP,MAAQmF,GACxBG,EAAI,EAAGA,EAAI,EAAGA,IACtB2J,EAAItK,KAAKwK,EAAY7J,GAAK0J,EAAIrK,KAAKwK,EAAY7J,GAAK+O,EAE5CpF,EAAItK,KAAKwK,EAAY,GAAKH,EAAIrK,KAAKwK,EAAY,GAO1D,MAJ6B,CAC5BvR,eAAgB,KAChBmH,OAAQkK,GaiJ2CqF,CAAsBvC,EAAYxV,GACvDlB,EAASwK,GAAUuO,QAG3B5E,QAAS,SAACjT,GAEN,GADAuV,GAAqB,GACP,IAAVvV,EAAJ,CAGA,IAAMkJ,EAAYF,GAAsBT,EAAQ,MAChDzJ,EAAS+I,GAAcqB,EAAUV,SACjC1J,EAASwK,GAAUJ,cEhNhC8O,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,UCHP,SAASpQ,GAAcgI,EAA4BrH,GAOtD,IANA,IAEMiQ,EAAa,CACf3I,QAHoBD,EAAaC,QAAQ4I,SAAQ,SAAC5Q,GAAD,OAAeI,GAAcJ,MAI9EiI,uBAAwBF,EAAaE,wBAElC0I,EAAW1I,uBAAyB0I,EAAW3I,QAAQnJ,OAAS,GACnE8R,EAAW3I,QAAQ6I,MAMvB,OAJIF,EAAW1I,yBAA2B0I,EAAW3I,QAAQnJ,OAAS,GAClE8R,EAAW1I,yBAEf0I,EAAW3I,QAAQ8I,KAAK1Q,GAAcM,IAC/BiQ,ECdX,IA4BeI,GA5ByC,SAACrQ,EAAQrI,GAC7D,IAAMd,EAAOc,EAAOH,MACpB,OAAQG,EAAOzE,MACX,KAAK2Y,GACD,IAAM3L,EAAY,IAAIP,UAAUhI,EAAOH,MAAMb,EAAGgB,EAAOH,MAAMZ,GAE7D,OADAsJ,EAAUN,KAAK9F,KAAK,KACboG,EACX,KAAKsL,GACD,IAAIlM,EAAY,IAAIK,UAAU9I,EAAKF,EAAGE,EAAKD,GAC3C0I,EAAUM,KAAK9F,KAAK,KAIpB,IAHA,IAAI4C,EAAWnE,KAAKpF,IAAI0D,EAAKF,EAAGqJ,EAAO/E,OACnCqV,EAAY/X,KAAKpF,IAAI0D,EAAKD,EAAGoJ,EAAO7E,QAE/BgF,EAAI,EAAGA,EAAImQ,EAAWnQ,IAC3B,IAAK,IAAIC,EAAI,EAAGA,EAAI1D,EAAU0D,IAG1B,IAFA,IAAIgK,EAA+B,GAAlBjK,EAAItJ,EAAKF,EAAIyJ,GAC1BmQ,EAA2C,GAAxBpQ,EAAIH,EAAO/E,MAAQmF,GACjCG,EAAI,EAAGA,EAAI,EAAGA,IACnBjB,EAAUM,KAAKwK,EAAY7J,GAAKP,EAAOJ,KAAK2Q,EAAkBhQ,GAI1E,OAAOjB,EACX,QACI,OAAOI,GAAcM,KCXlBwQ,GAbyE,SAACzQ,EAAQpI,GAC7F,YAAelE,IAAXsM,EACOA,GAEHpI,EAAOzE,KAEA,CACH8M,OAAQqQ,GAAatQ,EAAOC,OAAQrI,GACpCkB,eAAgBkH,EAAOlH,kBCwCxB4X,GAxCX,SAACrT,EAAOzF,GACJ,QAAclE,IAAV2J,EACA,MAAM,IAAI9B,MAEd,OAAQ3D,EAAOzE,MACX,KAAK0T,GACD,OAAO,2BACAxJ,GADP,IAEIxD,UAAWjC,EAAOH,QAE1B,KAAKqP,GACD,OAAO,2BACAzJ,GADP,IAEInD,YAAatC,EAAOH,QAE5B,KAAKsP,GACD,OAAO,2BACA1J,GADP,IAEIrD,YAAapC,EAAOH,QAE5B,KAAKuP,GACD,OAAO,2BACA3J,GADP,IAEI/J,KAAMsE,EAAOH,QAErB,KAAKyP,GACD,OAAO,2BACA7J,GADP,IAEIpB,SAAUrE,EAAOH,QAEzB,KAAKwP,GACD,OAAO,2BACA5J,GADP,IAEIlB,UAAWvE,EAAOH,QAE1B,QACI,OAAO4F,ICoERsT,GA/EX,SAACtT,EAAOzF,GACJ,QAAclE,IAAV2J,EACA,MAAM,IAAI9B,MAEd,IAAMyE,EAAS3C,EAAM2C,OACjBW,EAAY,CACZV,OAAQD,EAAOC,OACfnH,eAAgBkH,EAAOlH,gBAEvBwO,EAAejK,EAAMiK,aACzB,OAAQ1P,EAAOzE,MACX,KAAK2N,GACD,OAAO,2BACAzD,GADP,IAEI2C,OAASpI,EAAwBH,QAEzC,KAAK4T,GACD,OJjCT,SAAqBhO,GACxB,IAAI2C,EAAiB,CACjBlH,eAAgBuE,EAAM2C,OAAOlH,eAC7BmH,OAAQ5C,EAAM2C,OAAOC,QAErBqH,EAA6BjK,EAAMiK,aACvC,GAAIA,EAAaC,QAAQnJ,OAAS,IAC1BkJ,EAAaE,uBAAyB,GAA8B,MAAzBxH,EAAOlH,gBAAwB,CAC1E,GAA6B,MAAzBkH,EAAOlH,eACPwO,EAAaE,6BACV,CAIH,GADAF,EAAehI,GAAcgI,EADP3H,IADtBK,EAASS,GAAsBT,EAAQ,OACIC,cAE7BvM,IAAV2J,EACA,MAAM,IAAI9B,MAEd+L,EAAaE,yBAEjBxH,EAAOC,OAASN,GACZ2H,EAAaC,QAAQD,EAAaE,yBAI9C,OAAO,2BACAnK,GADP,IAEIiK,aAAcA,EACdtH,OAAQA,IIMOsL,CAAYjO,GACvB,KAAKkO,GACD,OJJT,SAAqBlO,GACxB,IAAI2C,EAAiB,CACjBlH,eAAgBuE,EAAM2C,OAAOlH,eAC7BmH,OAAQ5C,EAAM2C,OAAOC,QAErBqH,EAA6BjK,EAAMiK,aASvC,OARIA,EAAaC,QAAQnJ,OAAS,GAC1BkJ,EAAaE,uBAAyBF,EAAaC,QAAQnJ,OAAS,IACpEkJ,EAAaE,yBACbxH,EAAOC,OAASN,GACZ2H,EAAaC,QAAQD,EAAaE,0BAIvC,2BACAnK,GADP,IAEI2C,OAAQA,EACRsH,aAAcA,IIbCkE,CAAYnO,GACvB,KAAKgC,GACD,OAAO,2BACAhC,GADP,IAEIiK,aAAchI,GAAcgI,EAAe1P,EAA2BH,SAE9E,KAAK6E,EACD,OAAO,2BACAe,GADP,IAEIF,YAAcvF,EAA0BH,QAEhD,KAAKkU,GACD,IAAIiF,EAIJ,OAHkBtR,GAAcgI,EAAc3G,EAAUV,QAExD2Q,EAAkBtR,GAAcgI,GADhC3G,EpBrET,SAAqBX,EAAgB6L,GAC3C,IAAM9S,EAAe,IAAI6G,UAAUI,EAAOC,OAAO/E,MAAO8E,EAAOC,OAAO7E,QACtE,OAAQyQ,GACP,KAAKnE,GAAOmC,IACXI,GAAsBjK,EAAOC,OAAQlH,EAAc,CAAC,EAAG,EAAG,EAAG,IAC7D,MACD,KAAK2O,GAAOoC,MACXG,GAAsBjK,EAAOC,OAAQlH,EAAc,CAAC,EAAG,EAAG,EAAG,IAC7D,MACD,KAAK2O,GAAOqC,KACXE,GAAsBjK,EAAOC,OAAQlH,EAAc,CAAC,EAAG,EAAG,EAAG,IAC7D,MACD,KAAK2O,GAAOkC,MAuBd,SAAyBM,EAAgBC,GACxC,IAAK,IAAI/J,EAAI,EAAGA,EAAI+J,EAAI/O,OAAQgF,IAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAI8J,EAAIjP,MAAOmF,IAAK,CAGnC,IAFA,IAAIgK,EAAkC,GAArBjK,EAAI+J,EAAIjP,MAAQmF,GAC7BwQ,GAAQ3G,EAAIrK,KAAKwK,GAAaH,EAAIrK,KAAKwK,EAAY,GAAKH,EAAIrK,KAAKwK,EAAY,IAAM,EAC9E7J,EAAI,EAAGA,EAAI,EAAGA,IACtB2J,EAAItK,KAAKwK,EAAY7J,GAAKqQ,EAElB1G,EAAItK,KAAKwK,EAAY,GAAKH,EAAIrK,KAAKwK,EAAY,IA9BxDyG,CAAgB9Q,EAAOC,OAAQlH,GAQjC,OAJuB,2BACnBiH,GADmB,IAEtBC,OAAQlH,IoBkDkB6S,CAAYjL,EAAY/I,EAAwBH,QACJwI,QACjD,2BACA5C,GADP,IAEIiK,aAAcsJ,EACd5Q,OAAQW,IAEhB,KAAK1B,EACD,OAAO,2BACA5B,GADP,IAEI2C,OAAQd,GAAWc,EAASpI,EAA8BH,SAElE,KAAK0H,EACD,OAAO,2BACA9B,GADP,IAEI2C,OAAQZ,GAAgBY,KAEhC,KAAKR,GAED,OADAmB,EAAYF,GAAsBT,EAASpI,EAAgCH,OACpE,2BACA4F,GADP,IAEI2C,OAAQW,IAEhB,KAAK5B,EACD,OAAO,2BACA1B,GADP,IAEI2C,OAAQhB,GAAqBgB,KAErC,QACI,IAAM+Q,EAAgBN,GAAapT,EAAM2C,OAAQpI,GACjD,QAAsBlE,IAAlBqd,EACA,MAAM,IAAIxV,MAEd,IAAMoD,EAAc+R,GAAkBrT,EAAMsB,YAAc/G,GAC1D,QAAoBlE,IAAhBiL,EACA,MAAM,IAAIpD,MAEd,MAAO,CACHyE,OAAQ+Q,EACRzJ,aAAcjK,EAAMiK,aACpBnK,YAAaE,EAAMF,YACnBwB,YAAaA,KC3GlBqS,GAFDC,aAAYN,GAAUtJ,I,oBCI7B,SAAS6J,KACZC,KAASD,OACL,cAAC,IAAD,CAAUF,MAAOA,GAAjB,SACI,cAAC,GAAD,MAEJhW,SAASoL,eAAe,SANhC8K,KAUAzB,O","file":"static/js/main.68eec4ba.chunk.js","sourcesContent":["import React from 'react';\nimport { ChangeEvent } from \"react\";\nimport './EditText.css';\n\ninterface EditTextProps {\n    id?: string,\n    title: string,\n    text: string,\n    min?: string,\n    hintText?: string,\n    type: string,\n    onChange(e: ChangeEvent<HTMLInputElement>): void\n    onClick?: Function\n}\n\nexport default function EditText(props: EditTextProps) {\n    return (\n        <div className=\"EditText-input\">\n            <input\n                className=\"Number-input\"\n                id={props.id}\n                type={props.type}\n                min={props.min}\n                defaultValue={props.text}\n                placeholder={props.hintText}\n                onFocus={() => {\n                    if (props.onClick !== undefined) {\n                        props.onClick();\n                    }\n                }}\n                onClick={() => {\n                    if (props.onClick !== undefined) {\n                        props.onClick();\n                    }\n                }}\n                onChange={(e) => props.onChange(e)}></input>\n            <label\n                className=\"Number-label\"\n                htmlFor=\"newWidth\"\n                onClick={() => {\n                    if (props.onClick !== undefined) {\n                        props.onClick();\n                    }\n                }}>{props.title}</label>\n        </div>\n    );\n}","export enum Types {\n    Art, Rectangle, Triangle, Circle, TextObject, Area\n}","import React, { useState } from 'react';\nimport './SelectSizeDialog.css';\nimport '../../index.css';\nimport { Vector2 } from '../../structures/Vector2';\nimport EditText from '../../edittext/EditText';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Button, createStyles, Dialog, IconButton, Slide, Theme, Typography, withStyles, WithStyles } from '@material-ui/core';\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\nimport { useDispatch } from 'react-redux';\nimport Vector2Action from '../../store/actions/types/Vector2Action';\n\nconst styles = (theme: Theme) =>\n    createStyles({\n        root: {\n            margin: 0,\n            padding: theme.spacing(2),\n        },\n        closeButton: {\n            position: 'absolute',\n            right: theme.spacing(1),\n            top: theme.spacing(1),\n            color: theme.palette.grey[300],\n        },\n        title: {\n            fontFamily: \"cursive\",\n            color: theme.palette.secondary.main\n        }\n    });\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n    id: string;\n    children: React.ReactNode;\n    onClose: () => void;\n}\n\ninterface SelectSizeDialogProps {\n    applyText: string,\n    action: Vector2Action,\n    children: JSX.Element\n}\n\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography className={classes.title} variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\n    ref: React.Ref<unknown>,\n) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst DialogContent = withStyles((theme: Theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme: Theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\nexport default function SelectSizeDialog(props: SelectSizeDialogProps) {\n    const dispatch = useDispatch();\n    const [open, setOpen] = React.useState(false);\n    const [size] = useState<Vector2>({ x: 800, y: 600 });\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleCloseAndCreate = () => {\n        handleClose();\n        props.action.value = size;\n        dispatch(props.action);\n    };\n\n    return (\n        <div>\n            <IconButton\n                color=\"inherit\"\n                onClick={handleClickOpen}>\n                {props.children}\n            </IconButton>\n            <Dialog\n                PaperProps={{\n                    style: {\n                        backgroundColor: \"#FFFFFFa0\"\n                    }\n                }}\n                TransitionComponent={Transition}\n                onClose={handleClose}\n                aria-labelledby=\"customized-dialog-title\"\n                open={open}>\n                <DialogTitle id=\"customized-dialog-title\"\n                    onClose={handleClose}>\n                    Выберите размер\n                </DialogTitle>\n                <DialogContent dividers>\n                    <EditText title=\"Ширина\" type=\"number\"\n                        hintText=\"Введите значение\"\n                        min=\"1\"\n                        text={size.x + \"\"}\n                        onChange={(e) => size.x = parseInt(e.target.value)}></EditText>\n                    <EditText title=\"Высота\" type=\"number\"\n                        hintText=\"Введите значение\"\n                        min=\"1\"\n                        text={size.y + \"\"}\n                        onChange={(e) => size.y = parseInt(e.target.value)}></EditText>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={handleCloseAndCreate} color=\"secondary\">\n                        {props.applyText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import { RGBAColor } from \"../structures/RGBAColor\"\r\n\r\nexport function toRGBAColor(hex: string): RGBAColor {\r\n    const color = {\r\n        r: parseInt(hex.substr(1, 2), 16),\r\n        g: parseInt(hex.substr(3, 2), 16),\r\n        b: parseInt(hex.substr(5, 2), 16),\r\n        a: parseInt(hex.substr(7, 2), 16) / 255,\r\n    };\r\n    return color;\r\n}\r\n\r\nexport function toHexColor(color: RGBAColor): string {\r\n    return getRGB(color)\r\n        + to2dHex(Math.floor(color.a * 255))\r\n}\r\n\r\nfunction to2dHex(num: number): string {\r\n    return getAnalog(Math.floor(num / 16)) + getAnalog(num % 16);\r\n}\r\n\r\nconst hex = [\r\n    '0', '1', '2', '3',\r\n    '4', '5', '6', '7',\r\n    '8', '9', 'A', 'B',\r\n    'C', 'D', 'E', 'F']\r\nfunction getAnalog(num: number) {\r\n    return hex[num];\r\n}\r\n\r\nexport function getRGB(color: RGBAColor): string {\r\n    return '#' + to2dHex(color.r)\r\n        + to2dHex(color.g)\r\n        + to2dHex(color.b)\r\n}\r\n","import { Art } from \"../structures/Art\";\r\nimport { Circle } from \"../structures/Circle\";\r\nimport { Rectangle } from \"../structures/Rectangle\";\r\nimport { TextObject } from \"../structures/TextObject\";\r\nimport { Triangle } from \"../structures/Triangle\";\r\nimport { Types } from \"../structures/Type\";\r\nimport { Vector2 } from \"../structures/Vector2\";\r\nimport { getRGB } from \"./ColorHelper\";\r\n\r\nexport function drawObject(\r\n    context: CanvasRenderingContext2D,\r\n    size: Vector2,\r\n    selectedObject: TextObject | Rectangle | Triangle | Circle | Art\r\n) {\r\n    let newImageData: ImageData | undefined;\r\n\r\n    switch (selectedObject.type) {\r\n        case Types.Rectangle:\r\n            newImageData = drawRectangle(context, size, selectedObject as Rectangle);\r\n            break;\r\n        case Types.Triangle:\r\n            newImageData = drawTriangle(context, size, selectedObject as Triangle);\r\n            break;\r\n        case Types.Circle:\r\n            newImageData = drawCircle(context, size, selectedObject as Circle);\r\n            break;\r\n        case Types.Art:\r\n            newImageData = drawArt(context, size, selectedObject as Art);\r\n            break;\r\n        case Types.TextObject:\r\n            newImageData = drawText(context, size, selectedObject as TextObject);\r\n            break;\r\n    };\r\n    context.globalAlpha = 1;\r\n    if (newImageData === undefined) {\r\n        throw new Error();\r\n    }\r\n    return newImageData;\r\n}\r\n\r\nfunction drawRectangle(ctx: CanvasRenderingContext2D,\r\n    size: Vector2,\r\n    rectangle: Rectangle\r\n): ImageData | undefined {\r\n    ctx.beginPath();\r\n    ctx.moveTo(rectangle.position.x, rectangle.position.y);\r\n    ctx.lineTo(rectangle.position.x + rectangle.size.x, rectangle.position.y);\r\n    ctx.lineTo(rectangle.position.x + rectangle.size.x, rectangle.position.y + rectangle.size.y);\r\n    ctx.lineTo(rectangle.position.x, rectangle.position.y + rectangle.size.y);\r\n    ctx.closePath();\r\n\r\n    ctx.globalAlpha = rectangle.props.fillColor.a;\r\n    ctx.fillStyle = getRGB(rectangle.props.fillColor);\r\n    ctx.fill();\r\n\r\n    if (rectangle.props.strokeWidth > 0) {\r\n        ctx.lineWidth = rectangle.props.strokeWidth;\r\n        ctx.globalAlpha = rectangle.props.strokeColor.a;\r\n        ctx.strokeStyle = getRGB(rectangle.props.strokeColor);\r\n        ctx.stroke();\r\n    }\r\n    return ctx.getImageData(0, 0, size.x, size.y);\r\n}\r\n\r\nfunction drawTriangle(ctx: CanvasRenderingContext2D,\r\n    size: Vector2,\r\n    triangle: Triangle\r\n): ImageData | undefined {\r\n    ctx.beginPath();\r\n    ctx.moveTo(triangle.p0.x, triangle.p0.y);\r\n    ctx.lineTo(triangle.p1.x, triangle.p1.y);\r\n    ctx.lineTo(triangle.p2.x, triangle.p2.y);\r\n    ctx.closePath();\r\n\r\n    ctx.globalAlpha = triangle.props.fillColor.a;\r\n    ctx.fillStyle = getRGB(triangle.props.fillColor);\r\n    ctx.fill();\r\n\r\n    if (triangle.props.strokeWidth > 0) {\r\n        ctx.lineWidth = triangle.props.strokeWidth;\r\n        ctx.globalAlpha = triangle.props.strokeColor.a;\r\n        ctx.strokeStyle = getRGB(triangle.props.strokeColor);\r\n        ctx.stroke();\r\n    }\r\n    return ctx.getImageData(0, 0, size.x, size.y);\r\n}\r\n\r\nfunction drawCircle(ctx: CanvasRenderingContext2D,\r\n    size: Vector2,\r\n    circle: Circle\r\n): ImageData | undefined {\r\n    ctx.beginPath();\r\n    ctx.moveTo(circle.position.x + circle.radius, circle.position.y);\r\n    ctx.arc(circle.position.x, circle.position.y, circle.radius, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n\r\n    ctx.globalAlpha = circle.props.fillColor.a;\r\n    ctx.fillStyle = getRGB(circle.props.fillColor);\r\n    ctx.fill();\r\n\r\n    if (circle.props.strokeWidth > 0) {\r\n        ctx.lineWidth = circle.props.strokeWidth;\r\n        ctx.globalAlpha = circle.props.strokeColor.a;\r\n        ctx.strokeStyle = getRGB(circle.props.strokeColor);\r\n        ctx.stroke();\r\n    }\r\n    return ctx.getImageData(0, 0, size.x, size.y);\r\n}\r\n\r\nfunction drawArt(ctx: CanvasRenderingContext2D, size: Vector2, art: Art) {\r\n    const canvasCtx = document.createElement(\"canvas\");\r\n    canvasCtx.width = art.image.width;\r\n    canvasCtx.height = art.image.height;\r\n    const imageCtx = canvasCtx.getContext(\"2d\");\r\n    if (imageCtx === null) {\r\n        throw new Error();\r\n    }\r\n    imageCtx.putImageData(art.image, 0, 0);\r\n    const canvasScaled = document.createElement(\"canvas\");\r\n    canvasScaled.width = Math.max(1, art.size.x);\r\n    canvasScaled.height = Math.max(1, art.size.y);\r\n    const imageScaled = canvasScaled.getContext(\"2d\");\r\n    if (imageScaled === null) {\r\n        throw new Error();\r\n    }\r\n    imageScaled.scale(art.size.x / art.image.width, art.size.y / art.image.height);\r\n    imageScaled.drawImage(canvasCtx, 0, 0);\r\n    ctx.drawImage(canvasScaled, art.position.x, art.position.y);\r\n    return ctx.getImageData(0, 0, size.x, size.y);\r\n}\r\n\r\nfunction drawText(ctx: CanvasRenderingContext2D,\r\n    size: Vector2,\r\n    text: TextObject) {\r\n    ctx.font = `${text.textSize}px monospace`;\r\n    drawRectangle(ctx, size, text.rectangle);\r\n    ctx.globalAlpha = text.textColor.a;\r\n    ctx.fillStyle = getRGB(text.textColor);\r\n    ctx.fillText(text.text, text.rectangle.position.x + 2,\r\n        text.rectangle.position.y + text.textSize);\r\n    return ctx.getImageData(0, 0, size.x, size.y);\r\n}\r\n","const UPDATE_TOOL = \"UPDATE_TOOL\";\r\nexport default UPDATE_TOOL;","import { createStyles, List, ListItem, makeStyles, Paper, SvgIcon, Theme, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport updateTool from '../../store/actionCreators/updateTool';\nimport { ViewModel } from '../../viewmodel/ViewModel';\nimport './Tools.css';\n\nexport enum ToolType {\n    Rectangle = 0, Triangle = 1, Circle = 2, Text = 3, Area = 4\n}\n\ninterface ToolsProps {\n    onSelected(): void\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            backgroundColor: \"#FFFFFF8a\",\n        },\n        item: {\n            minWidth: \"0\",\n            width: \"48px\",\n            height: \"48px\",\n            borderRadius: \"24px\",\n            alignContent: \"center\",\n            margin: \"0 4px\",\n            padding: \"0\",\n            '&:hover': {\n                background: \"#42424242\",\n            },\n        },\n        selectedItem: {\n            background: theme.palette.secondary.light + \"CC\",\n            '&:hover': {\n                background: theme.palette.secondary.light,\n            },\n        }\n    }),\n);\n\nexport default function Tools({ onSelected }: ToolsProps) {\n    const dispatch = useDispatch();\n    const currentTool: ToolType = useSelector(\n        (state: ViewModel) => state.currentTool\n    )\n    const onClick = (tool: ToolType) => {\n        if (tool !== currentTool) {\n            dispatch(updateTool(tool));\n            onSelected();\n        }\n    };\n    const classes = useStyles();\n    return (\n        <Paper className={\"Tools-root \" + classes.root}>\n            <Typography\n                className=\"Tools-title\"\n                variant=\"subtitle1\" color=\"inherit\">\n                Инструменты\n            </Typography>\n            <List className=\"Tools-list\" component=\"nav\" aria-label=\"Инструменты\">\n                <ListItem button\n                    onClick={() => onClick(ToolType.Rectangle)}\n                    className={classes.item + \" \" + (currentTool === ToolType.Rectangle ? classes.selectedItem : \"\")}>\n                    <SvgIcon viewBox=\"0 0 32 32\" style={{ margin: \"auto\" }}>\n                        <rect x=\"0\" y=\"0\" width=\"32\" height=\"32\"\n                            fill={currentTool === ToolType.Rectangle ? \"#FFFFFF\" : \"#424242\"} />\n                    </SvgIcon>\n                </ListItem>\n                <ListItem button\n                    onClick={() => onClick(ToolType.Triangle)}\n                    className={classes.item + \" \" + (currentTool === ToolType.Triangle ? classes.selectedItem : \"\")}>\n                    <SvgIcon viewBox=\"0 0 32 32\" style={{ margin: \"auto\" }}>\n                        <polygon points=\"0,32 32,32 16,0\"\n                            fill={currentTool === ToolType.Triangle ? \"#FFFFFF\" : \"#424242\"} />\n                    </SvgIcon>\n                </ListItem>\n                <ListItem button\n                    onClick={() => onClick(ToolType.Circle)}\n                    className={classes.item + \" \" + (currentTool === ToolType.Circle ? classes.selectedItem : \"\")}>\n                    <SvgIcon viewBox=\"0 0 32 32\" style={{ margin: \"auto\" }}>\n                        <circle r=\"16\" cx=\"16\" cy=\"16\"\n                            fill={currentTool === ToolType.Circle ? \"#FFFFFF\" : \"#424242\"}\n                        />\n                    </SvgIcon>\n                </ListItem>\n                <ListItem button\n                    onClick={() => onClick(ToolType.Text)}\n                    className={classes.item + \" \" + (currentTool === ToolType.Text ? classes.selectedItem : \"\")}>\n                    <SvgIcon viewBox=\"0 0 24 24\" style={{ margin: \"auto\" }}>\n                        <path d=\"M5 4v3h5.5v12h3V7H19V4z\"\n                            fill={currentTool === ToolType.Text ? \"#FFFFFF\" : \"#424242\"} />\n                    </SvgIcon>\n                </ListItem>\n                <ListItem button\n                    onClick={() => onClick(ToolType.Area)}\n                    className={classes.item + \" \" + (currentTool === ToolType.Area ? classes.selectedItem : \"\")}>\n                    <SvgIcon viewBox=\"0 0 24 24\" style={{ margin: \"auto\" }}>\n                        <path d=\"M17 15h2V7c0-1.1-.9-2-2-2H9v2h8v8zM7 17V1H5v4H1v2h4v10c0 1.1.9 2 2 2h10v4h2v-4h4v-2H7z\"\n                            fill={currentTool === ToolType.Area ? \"#FFFFFF\" : \"#424242\"} />\n                    </SvgIcon>\n                </ListItem>\n            </List>\n        </Paper>\n    );\n}\n","import { ToolType } from \"../../components/tool/Tools\";\r\nimport ToolTypeAction from \"../actions/types/ToolTypeAction\";\r\nimport UPDATE_TOOL from \"../actions/updateTool\";\r\n\r\nexport default function updateTool(value: ToolType): ToolTypeAction {\r\n    return { \r\n        type: UPDATE_TOOL,\r\n        value: value\r\n    };\r\n}","import { Vector2 } from \"../structures/Vector2\";\r\n\r\nexport function length(vector: Vector2) {\r\n    return Math.floor(Math.sqrt(Math.pow(vector.x, 2) + Math.pow(vector.y, 2)));\r\n}\r\n\r\nexport function cosinus(first: Vector2, second: Vector2) {\r\n    return (first.x * second.x + first.y * second.y) / (length(first) * length(second));\r\n}","import { Vector2 } from '../structures/Vector2';\r\nimport { Rectangle } from '../structures/Rectangle';\r\nimport { Triangle } from '../structures/Triangle';\r\nimport { Circle } from '../structures/Circle';\r\nimport { SelectedArea } from '../structures/SelectedArea';\r\nimport { Types } from '../structures/Type';\r\nimport { TextObject } from '../structures/TextObject';\r\nimport { ObjectState } from '../viewmodel/ObjectState';\r\n\r\nexport function createRectangle(downStart: Vector2, moveEnd: Vector2, objectState: ObjectState): Rectangle {\r\n    const start: Vector2 = {\r\n        x: Math.min(downStart.x, moveEnd.x),\r\n        y: Math.min(downStart.y, moveEnd.y)\r\n    };\r\n    const end = {\r\n        x: Math.max(downStart.x, moveEnd.x),\r\n        y: Math.max(downStart.y, moveEnd.y)\r\n    };\r\n    return {\r\n        type: Types.Rectangle,\r\n        position: start,\r\n        size: {\r\n            x: end.x - start.x,\r\n            y: end.y - start.y\r\n        },\r\n        props: {\r\n            fillColor: objectState.fillColor,\r\n            strokeColor: objectState.strokeColor,\r\n            strokeWidth: objectState.strokeWidth\r\n        }\r\n    }\r\n}\r\n\r\nexport function createTriangle(downStart: Vector2, moveEnd: Vector2, objectState: ObjectState): Triangle {\r\n    const start: Vector2 = {\r\n        x: Math.min(downStart.x, moveEnd.x),\r\n        y: downStart.y\r\n    };\r\n    const end = {\r\n        x: Math.max(downStart.x, moveEnd.x),\r\n        y: moveEnd.y\r\n    };\r\n    return {\r\n        type: Types.Triangle,\r\n        p0: {\r\n            x: start.x,\r\n            y: start.y,\r\n        },\r\n        p1: {\r\n            x: end.x,\r\n            y: start.y,\r\n        },\r\n        p2: {\r\n            x: start.x / 2 + end.x / 2,\r\n            y: end.y,\r\n        },\r\n        props: {\r\n            fillColor: objectState.fillColor,\r\n            strokeColor: objectState.strokeColor,\r\n            strokeWidth: objectState.strokeWidth\r\n        }\r\n    }\r\n}\r\n\r\nexport function createCircle(downStart: Vector2, moveEnd: Vector2, objectState: ObjectState): Circle {\r\n    const len = Math.sqrt(Math.pow(moveEnd.x - downStart.x, 2) + Math.pow(moveEnd.y - downStart.y, 2));\r\n    return {\r\n        type: Types.Circle,\r\n        position: {\r\n            x: downStart.x,\r\n            y: downStart.y\r\n        },\r\n        radius: len,\r\n        props: {\r\n            fillColor: objectState.fillColor,\r\n            strokeColor: objectState.strokeColor,\r\n            strokeWidth: objectState.strokeWidth\r\n        }\r\n    }\r\n}\r\n\r\nexport function createText(downStart: Vector2, moveEnd: Vector2, objectState: ObjectState): TextObject {\r\n    return {\r\n        type: Types.TextObject,\r\n        rectangle: createRectangle(downStart, moveEnd, objectState),\r\n        text: objectState.text,\r\n        textSize: objectState.textSize,\r\n        textColor: objectState.textColor\r\n    }\r\n}\r\n\r\nexport function createArea(downStart: Vector2, moveEnd: Vector2, objectState: ObjectState): SelectedArea {\r\n    const start: Vector2 = {\r\n        x: Math.min(downStart.x, moveEnd.x),\r\n        y: Math.min(downStart.y, moveEnd.y)\r\n    };\r\n    const end = {\r\n        x: Math.max(downStart.x, moveEnd.x),\r\n        y: Math.max(downStart.y, moveEnd.y)\r\n    };\r\n    return {\r\n        type: Types.Area,\r\n        position: start,\r\n        size: {\r\n            x: end.x - start.x,\r\n            y: end.y - start.y\r\n        },\r\n    }\r\n}","const REMOVE_SELECTED_OBJECT = \"REMOVE_SELECTED_OBJECT\";\r\nexport default REMOVE_SELECTED_OBJECT;\r\n","import { Action } from \"redux\";\r\nimport REMOVE_SELECTED_OBJECT from \"../actions/removeSelectedObject\";\r\n\r\nexport default function removeSelectedObject(): Action {\r\n    return {\r\n        type: REMOVE_SELECTED_OBJECT\r\n    };\r\n}","const SELECT_AREA = \"SELECT_AREA\";\r\nexport default SELECT_AREA;\r\n","import { SelectedArea } from \"../../structures/SelectedArea\";\r\nimport SELECT_AREA from \"../actions/selectArea\";\r\nimport SelectedAreaAction from \"../actions/types/SelectedAreaAction\";\r\n\r\nfunction selectArea(value: SelectedArea): SelectedAreaAction {\r\n    return {\r\n        type: SELECT_AREA,\r\n        value: value\r\n    };\r\n}\r\n\r\nexport default selectArea;","const CUT_SELECTED_AREA = \"CUT_SELECTED_AREA\";\r\nexport default CUT_SELECTED_AREA;\r\n","import { Action } from \"redux\";\r\nimport CUT_SELECTED_AREA from \"../actions/cutSelectedArea\";\r\n\r\nfunction cutSelectedArea(): Action {\r\n    return {\r\n        type: CUT_SELECTED_AREA,\r\n    };\r\n}\r\n\r\nexport default cutSelectedArea;","const PUSH_TO_HISTORY = \"PUSH_TO_HISTORY\";\r\nexport default PUSH_TO_HISTORY;","import PUSH_TO_HISTORY from \"../actions/pushToHistory\";\r\nimport ImageDataAction from \"../actions/types/ImageDataAction\";\r\n\r\nfunction pushToHistory(imageData: ImageData): ImageDataAction {\r\n    return {\r\n        type: PUSH_TO_HISTORY,\r\n        value: imageData\r\n    };\r\n}\r\n\r\nexport default pushToHistory;","const REPLACE_SELECTED_OBJECT = \"REPLACE_SELECTED_OBJECT\";\r\nexport default REPLACE_SELECTED_OBJECT;\r\n","import { Art } from \"../../structures/Art\";\r\nimport { Circle } from \"../../structures/Circle\";\r\nimport { Rectangle } from \"../../structures/Rectangle\";\r\nimport { TextObject } from \"../../structures/TextObject\";\r\nimport { Triangle } from \"../../structures/Triangle\";\r\nimport REPLACE_SELECTED_OBJECT from \"../actions/actionReplaceSelectedObject\";\r\nimport SelectedObjectAction from \"../actions/types/SelectedObjectAction\";\r\n\r\nfunction actionReplaceSelectedObject(obj: TextObject | Rectangle | Triangle | Circle | Art | null): SelectedObjectAction {\r\n    return {\r\n        type: REPLACE_SELECTED_OBJECT,\r\n        value: obj\r\n    };\r\n}\r\n\r\nexport default actionReplaceSelectedObject;\r\n","import { Art } from '../structures/Art';\nimport { Editor } from '../structures/Editor'\nimport { SelectedArea } from '../structures/SelectedArea';\nimport { Types } from '../structures/Type';\nimport { Vector2 } from '../structures/Vector2'\n\nexport function copyImageData(imageData: ImageData) {\n\tconst newImageData: ImageData = new ImageData(\n\t\timageData.width,\n\t\timageData.height\n\t);\n\tnewImageData.data.set(new Uint8ClampedArray(imageData.data));\n\treturn newImageData;\n}\n\nexport function createNewCanvas(editor: Editor, size: Vector2): Editor {\n\tconst newCanvas = new ImageData(size.x, size.y);\n\tnewCanvas.data.fill(255);\n\tconst newEditor: Editor = {\n\t\t...editor,\n\t\tselectedObject: null,\n\t\tcanvas: newCanvas,\n\t};\n\treturn newEditor;\n}\n\nexport function editCanvasSize(editor: Editor, size: Vector2): Editor {\n\tlet imageData = new ImageData(size.x, size.y);\n\timageData.data.fill(255);\n\tlet minWidth = Math.min(size.x, editor.canvas.width);\n\tlet minHeight = Math.min(size.y, editor.canvas.height);\n\n\tfor (let i = 0; i < minHeight; i++) {\n\t\tfor (let j = 0; j < minWidth; j++) {\n\t\t\tlet dataIndex = (i * size.x + j) * 4;\n\t\t\tlet canvasDataIndex = (i * editor.canvas.width + j) * 4;\n\t\t\tfor (let k = 0; k < 4; k++) {\n\t\t\t\timageData.data[dataIndex + k] = editor.canvas.data[canvasDataIndex + k];\n\t\t\t}\n\t\t}\n\t}\n\tconst newEditor: Editor = {\n\t\t...editor,\n\t\tcanvas: imageData,\n\t};\n\treturn newEditor;\n}\n\nexport function cutSelectedArea(editor: Editor) {\n\tvar newCanvas = copyImageData((editor.selectedObject as Art).image);\n\tconst newEditor: Editor = {\n\t\tcanvas: newCanvas,\n\t\tselectedObject: null,\n\t};\n\treturn newEditor;\n}\n\nexport function selectArea(editor: Editor, selectedArea: SelectedArea): Editor {\n\tlet art: Art = {\n\t\ttype: Types.Art,\n\t\timage: new ImageData(selectedArea.size.x, selectedArea.size.y),\n\t\tposition: selectedArea.position,\n\t\tsize: selectedArea.size,\n\t};\n\tconst newCanvas = copyImageData(editor.canvas);\n\tfor (let i = 0; i < art.size.y; i++) {\n\t\tfor (let j = 0; j < art.size.x; j++) {\n\t\t\tlet dstIndex = (i * art.size.x + j) * 4;\n\t\t\tlet srcIndex =\n\t\t\t\t((i + art.position.y) * newCanvas.width + j + art.position.x) * 4;\n\t\t\tfor (let k = 0; k < 4; k++) {\n\t\t\t\tart.image.data[dstIndex + k] = editor.canvas.data[srcIndex + k];\n\t\t\t}\n\t\t\tnewCanvas.data[srcIndex + 3] = 0;\n\t\t}\n\t}\n\tconst newEditor: Editor = {\n\t\t...editor,\n\t\tselectedObject: art,\n\t\tcanvas: newCanvas,\n\t};\n\treturn newEditor;\n}\n\nexport function importObject(callback: Function): void {\n\tif (document !== null) {\n\t\tconst input = document.createElement(\"input\") as HTMLInputElement;\n\t\tinput.type = \"file\";\n\t\tinput.click();\n\t\tif (input !== null) {\n\t\t\tinput.onchange = function (e: Event) {\n\t\t\t\tconst inputElement = e.target as HTMLInputElement;\n\t\t\t\tif (inputElement.files != null) {\n\t\t\t\t\tvar file = inputElement.files[0];\n\t\t\t\t\tconst url = URL.createObjectURL(file),\n\t\t\t\t\t\timg = new Image();\n\n\t\t\t\t\timg.onload = function () {\n\t\t\t\t\t\tURL.revokeObjectURL(img.src);\n\t\t\t\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\t\t\t\tcanvas.width = img.width;\n\t\t\t\t\t\tcanvas.height = img.height;\n\t\t\t\t\t\tconst ctx = canvas.getContext(\"2d\");\n\t\t\t\t\t\tif (ctx !== null) {\n\t\t\t\t\t\t\tctx.drawImage(img, 0, 0);\n\t\t\t\t\t\t\tconst art: Art = {\n\t\t\t\t\t\t\t\ttype: Types.Art,\n\t\t\t\t\t\t\t\timage: ctx.getImageData(0, 0, img.width, img.height),\n\t\t\t\t\t\t\t\tposition: {\n\t\t\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\t\t\ty: 0\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tsize: {\n\t\t\t\t\t\t\t\t\tx: img.width,\n\t\t\t\t\t\t\t\t\ty: img.height\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcallback(art);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcanvas.remove();\n\t\t\t\t\t};\n\t\t\t\t\timg.src = url;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport function exportObject() {\n\tvar canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n\tif (canvas == null) {\n\t\treturn;\n\t}\n\tcanvas.toBlob(\n\t\tfunction (blob) {\n\t\t\tif (blob == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst url = window.URL.createObjectURL(new Blob([blob]));\n\t\t\tconst link = document.createElement(\"a\");\n\t\t\tlink.href = url;\n\t\t\tlink.setAttribute(\"download\", \"image.png\");\n\t\t\tdocument.body.appendChild(link);\n\t\t\tlink.click();\n\t\t\tlink.remove();\n\t\t},\n\t\t\"image/png\",\n\t\t0.9\n\t);\n}\n","import { Art } from \"../structures/Art\";\r\nimport { Circle } from \"../structures/Circle\";\r\nimport { Editor } from \"../structures/Editor\";\r\nimport { Rectangle } from \"../structures/Rectangle\";\r\nimport { TextObject } from \"../structures/TextObject\";\r\nimport { Triangle } from \"../structures/Triangle\";\r\nimport { copyImageData } from \"./CanvasHelper\";\r\nimport { drawObject } from \"./DrawHelper\";\r\n\r\nexport function replaceSelectedObject(\r\n    editor: Editor,\r\n    newSelectedObject: Rectangle | Triangle | Circle | TextObject | Art | null\r\n) {\r\n    let newEditor: Editor = {\r\n        ...editor,\r\n        selectedObject: newSelectedObject,\r\n    };\r\n    if (editor.selectedObject != null) {\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = editor.canvas.width;\r\n        canvas.height = editor.canvas.height;\r\n        if (canvas != null) {\r\n            const ctx = canvas.getContext(\"2d\");\r\n            if (ctx != null) {\r\n                console.log(ctx);\r\n                ctx.putImageData(editor.canvas, 0, 0);\r\n                newEditor.canvas = drawObject(ctx,\r\n                    { x: editor.canvas.width, y: editor.canvas.height },\r\n                    editor.selectedObject);\r\n            }\r\n        }\r\n    }\r\n    return newEditor;\r\n}\r\n\r\nexport function removeSelectedObject(\r\n    editor: Editor) {\r\n    let newEditor: Editor = {\r\n        canvas: copyImageData(editor.canvas),\r\n        selectedObject: null\r\n    };\r\n    return newEditor;\r\n}\r\n","const SET_EDITOR = \"SET_EDITOR\";\r\nexport default SET_EDITOR;\r\n","import { Editor } from \"../../structures/Editor\";\r\nimport SET_EDITOR from \"../actions/setEditor\";\r\nimport EditorAction from \"../actions/types/EditorAction\";\r\n\r\nfunction setEditor(value: Editor): EditorAction {\r\n    return {\r\n        type: SET_EDITOR,\r\n        value: value\r\n    };\r\n}\r\n\r\nexport default setEditor;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { drawObject } from '../../helper/DrawHelper';\r\nimport './Canvas.css';\r\nimport { Types } from '../../structures/Type';\r\nimport { Vector2 } from '../../structures/Vector2';\r\nimport { ToolType } from '../tool/Tools';\r\nimport { Art } from '../../structures/Art';\r\nimport { TextObject } from '../../structures/TextObject';\r\nimport { length, cosinus } from '../../helper/VectorHelper';\r\nimport { Rectangle } from '../../structures/Rectangle';\r\nimport { Triangle } from '../../structures/Triangle';\r\nimport { Circle } from '../../structures/Circle';\r\nimport { SelectedArea } from '../../structures/SelectedArea';\r\nimport { createArea, createCircle, createRectangle, createText, createTriangle } from '../../helper/ObjectCreateHelper';\r\nimport removeSelectedObject from '../../store/actionCreators/removeSelectedObject';\r\nimport selectArea from '../../store/actionCreators/selectArea';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { Editor } from '../../structures/Editor';\r\nimport { ViewModel } from '../../viewmodel/ViewModel';\r\nimport cutSelectedArea from '../../store/actionCreators/cutSelectedArea';\r\nimport pushToHistory from '../../store/actionCreators/pushToHistory';\r\nimport { ObjectState } from '../../viewmodel/ObjectState';\r\nimport actionReplaceSelectedObject from '../../store/actionCreators/actionReplaceSelectedObject';\r\nimport { DrawProps } from '../../structures/DrawProps';\r\nimport { replaceSelectedObject } from '../../helper/EditorHelper';\r\nimport setEditor from '../../store/actionCreators/setEditor';\r\n\r\nexport default function Canvas() {\r\n    const [isCanvasDown, setCanvasDown] = useState(false);\r\n    const [tempObject, setTempObject] = useState<Rectangle | Triangle | Circle | TextObject | Art | SelectedArea | null>(null);\r\n    const [tempPoint, setTempPoint] = useState<Vector2 | null>(null);\r\n    const [start, setStart] = useState<Vector2>({ x: 0, y: 0 });\r\n\r\n    const dispatch = useDispatch();\r\n    const editor: Editor = useSelector(\r\n        (state: ViewModel) => state.editor,\r\n        shallowEqual\r\n    )\r\n    const imageData = editor.canvas;\r\n    const selectedObject = editor.selectedObject;\r\n    const tool: ToolType = useSelector(\r\n        (state: ViewModel) => state.currentTool\r\n    )\r\n\r\n    const objectState: ObjectState = useSelector(\r\n        (state: ViewModel) => state.objectState,\r\n        shallowEqual\r\n    )\r\n    if (selectedObject != null) {\r\n        if (selectedObject.type === Types.Rectangle ||\r\n            selectedObject.type === Types.Triangle ||\r\n            selectedObject.type === Types.Circle ||\r\n            selectedObject.type === Types.TextObject) {\r\n            let drawProps: DrawProps;\r\n            if (selectedObject.type === Types.TextObject) {\r\n                const textObject = selectedObject as TextObject;\r\n                textObject.text = objectState.text;\r\n                textObject.textSize = objectState.textSize;\r\n                textObject.textColor = objectState.textColor;\r\n                drawProps = textObject.rectangle.props;\r\n            } else {\r\n                drawProps = selectedObject.props;\r\n            }\r\n            drawProps.fillColor = objectState.fillColor;\r\n            drawProps.strokeColor = objectState.strokeColor;\r\n            drawProps.strokeWidth = objectState.strokeWidth;\r\n        }\r\n    }\r\n\r\n    const canvasElement = useRef<HTMLCanvasElement>(null);\r\n    useEffect(() => {\r\n        if (canvasElement.current != null) {\r\n            renderCanvas(canvasElement.current, imageData, selectedObject, tempObject);\r\n        }\r\n    }, [imageData, selectedObject, tempObject]);\r\n    useEffect(() => {\r\n        const listener = (e: KeyboardEvent) => {\r\n            if (e.ctrlKey) {\r\n                if (e.code === \"KeyX\") {\r\n                    if (tempObject != null && tempObject.type === Types.Area) {\r\n                        dispatch(selectArea(tempObject as SelectedArea));\r\n\r\n                        let historyCanvas = editor.canvas;\r\n                        dispatch(cutSelectedArea());\r\n                        dispatch(pushToHistory(historyCanvas));\r\n\r\n                        setTempObject(null);\r\n                        dispatch(removeSelectedObject());\r\n                    }\r\n                } else if (e.code === \"KeyA\") {\r\n                    setTempObject(createArea({ x: 0, y: 0 }, { x: imageData.width, y: imageData.height }, objectState));\r\n                }\r\n            } else {\r\n                switch (e.code) {\r\n                    case \"Escape\":\r\n                        setTempObject(null);\r\n                        const newEditor = replaceSelectedObject(editor, null);\r\n                        dispatch(pushToHistory(newEditor.canvas));\r\n                        dispatch(setEditor(newEditor));\r\n                        break;\r\n                    case \"Delete\":\r\n                        if (tempObject != null && tempObject.type === Types.Area) {\r\n                            dispatch(selectArea(tempObject as SelectedArea));\r\n                            const historyCanvas = editor.canvas;\r\n                            dispatch(removeSelectedObject());\r\n                            dispatch(pushToHistory(historyCanvas));\r\n                        } else {\r\n                            dispatch(removeSelectedObject());\r\n                        }\r\n                        setTempObject(null);\r\n                        break;\r\n                    case \"Enter\":\r\n                        if (tempObject != null && tempObject.type === Types.Area) {\r\n                            dispatch(selectArea(tempObject as SelectedArea));\r\n                        } else {\r\n                            const historyCanvas = editor.canvas;\r\n                            dispatch(actionReplaceSelectedObject(null));\r\n                            dispatch(pushToHistory(historyCanvas));\r\n                        }\r\n                        setTempObject(null);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener(\"keydown\", listener)\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", listener)\r\n        }\r\n    })\r\n    const onCreateObject = (start: Vector2, moveEnd: Vector2) => {\r\n        if (isCanvasDown) {\r\n            let newObject = null;\r\n            console.log(tool)\r\n            switch (tool) {\r\n                case ToolType.Rectangle:\r\n                    newObject = createRectangle(start, moveEnd, objectState);\r\n                    break;\r\n                case ToolType.Triangle:\r\n                    newObject = createTriangle(start, moveEnd, objectState);\r\n                    break;\r\n                case ToolType.Circle:\r\n                    newObject = createCircle(start, moveEnd, objectState);\r\n                    break;\r\n                case ToolType.Text:\r\n                    newObject = createText(start, moveEnd, objectState);\r\n                    break;\r\n                case ToolType.Area:\r\n                    newObject = createArea(start, moveEnd, objectState);\r\n                    break;\r\n            }\r\n            setTempObject(newObject);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"Canvas-container\">\r\n            <canvas id=\"canvas\"\r\n                ref={canvasElement}\r\n                className=\"Canvas\"\r\n                width={imageData.width}\r\n                height={imageData.height}\r\n                onMouseDown={(e) => {\r\n                    const canvas = canvasElement.current;\r\n                    if (canvas === null) {\r\n                        return;\r\n                    }\r\n                    if (canvas.style.cursor === \"pointer\") {\r\n                        if (selectedObject != null) {\r\n                            setTempObject(selectedObject);\r\n                            const ctx = canvas.getContext(\"2d\");\r\n                            if (ctx == null) {\r\n                                return\r\n                            }\r\n                            if (selectedObject != null) {\r\n                                dispatch(removeSelectedObject());\r\n                            }\r\n                            setStart({\r\n                                x: e.clientX - canvas.offsetLeft,\r\n                                y: e.clientY - canvas.offsetTop\r\n                            });\r\n                        }\r\n                    } else if (canvas.style.cursor === \"grab\") {\r\n                        if (selectedObject != null || (tempObject !== null && tempObject.type === Types.Area)) {\r\n                            canvas.style.cursor = \"grabbing\";\r\n\r\n                            if (selectedObject !== null || tempObject === null || tempObject.type !== Types.Area) {\r\n                                setTempObject(selectedObject);\r\n                            }\r\n                            dispatch(removeSelectedObject());\r\n                            setStart({\r\n                                x: e.clientX - canvas.offsetLeft,\r\n                                y: e.clientY - canvas.offsetTop\r\n                            });\r\n                        }\r\n                    } else {\r\n                        if (selectedObject != null) {\r\n                            const newEditor = replaceSelectedObject(editor, null);\r\n                            dispatch(pushToHistory(newEditor.canvas));\r\n                            dispatch(setEditor(newEditor));\r\n                        }\r\n                        setStart({\r\n                            x: e.clientX - canvas.offsetLeft,\r\n                            y: e.clientY - canvas.offsetTop\r\n                        });\r\n                    }\r\n                    setCanvasDown(true);\r\n                }}\r\n                onMouseMove={(e) => {\r\n                    const canvas = canvasElement.current;\r\n                    if (canvas === null) {\r\n                        return;\r\n                    }\r\n                    const moveEnd: Vector2 = {\r\n                        x: e.clientX - canvas.offsetLeft,\r\n                        y: e.clientY - canvas.offsetTop\r\n                    };\r\n                    if (isCanvasDown) {\r\n                        if (selectedObject != null) {\r\n                            const newEditor = replaceSelectedObject(editor, null);\r\n                            dispatch(pushToHistory(newEditor.canvas));\r\n                            dispatch(setEditor(newEditor));\r\n                        }\r\n                        let deltaX = moveEnd.x - start.x;\r\n                        let deltaY = moveEnd.y - start.y;\r\n                        if (canvas.style.cursor === \"pointer\") {\r\n                            if (tempObject !== null) {\r\n                                if (tempPoint !== null) {\r\n                                    if (tempObject.type === Types.Rectangle\r\n                                        || tempObject.type === Types.TextObject\r\n                                        || tempObject.type === Types.Art\r\n                                        || tempObject.type === Types.Area) {\r\n                                        let objRA: Rectangle | Art | SelectedArea;\r\n                                        if (tempObject.type === Types.TextObject) {\r\n                                            objRA = (tempObject as TextObject).rectangle;\r\n                                        } else {\r\n                                            objRA = tempObject as Rectangle | Art | SelectedArea;\r\n                                        }\r\n                                        if (e.shiftKey && objRA.type === Types.Art) {\r\n                                            const delta: Vector2 = { x: deltaX, y: deltaY };\r\n\r\n                                            const distance = length(delta);\r\n                                            const sizeLength = length(objRA.size);\r\n                                            const cos = objRA.size.x / sizeLength;\r\n                                            const sin = objRA.size.y / sizeLength;\r\n                                            deltaX = distance * cos;\r\n                                            deltaY = distance * sin;\r\n                                            const dir = Math.sign(cosinus(delta, tempPoint));\r\n                                            objRA.position.x += deltaX * Math.min(tempPoint.x, 0) * dir;\r\n                                            objRA.position.y += deltaY * Math.min(tempPoint.y, 0) * dir;\r\n                                            objRA.size.x += deltaX * dir;\r\n                                            objRA.size.y += deltaY * dir;\r\n                                        } else {\r\n                                            if (tempPoint.x > 0) {\r\n                                                objRA.size.x += deltaX;\r\n                                            } else if (tempPoint.x < 0) {\r\n                                                objRA.position.x += deltaX;\r\n                                                objRA.size.x += -deltaX;\r\n                                            }\r\n                                            if (tempPoint.y > 0) {\r\n                                                objRA.size.y += deltaY;\r\n                                            } else if (tempPoint.y < 0) {\r\n                                                objRA.position.y += deltaY;\r\n                                                objRA.size.y += -deltaY;\r\n                                            }\r\n                                        }\r\n                                        if (objRA.size.x === 0) {\r\n                                            objRA.size.x = -1;\r\n                                        }\r\n                                        if (objRA.size.y === 0) {\r\n                                            objRA.size.y = -1;\r\n                                        }\r\n                                        if (objRA.size.x < 0) {\r\n                                            tempPoint.x *= -1;\r\n                                            objRA.size.x = Math.abs(objRA.size.x);\r\n                                            objRA.position.x -= objRA.size.x;\r\n                                        }\r\n                                        if (objRA.size.y < 0) {\r\n                                            tempPoint.y *= -1;\r\n                                            objRA.size.y = Math.abs(objRA.size.y);\r\n                                            objRA.position.y -= objRA.size.y;\r\n                                        }\r\n                                    } else if (tempObject.type === Types.Triangle) {\r\n                                        tempPoint.x += deltaX;\r\n                                        tempPoint.y += deltaY;\r\n                                    } else if (tempObject.type === Types.Circle) {\r\n                                        const circle = tempObject as Circle;\r\n                                        circle.radius = length({\r\n                                            x: moveEnd.x - circle.position.x,\r\n                                            y: moveEnd.y - circle.position.y\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }\r\n                            setStart(moveEnd)\r\n                            if (canvasElement.current != null) {\r\n                                renderCanvas(canvasElement.current, imageData, null, tempObject);\r\n                            }\r\n                        } else if (canvas.style.cursor === \"grabbing\") {\r\n                            if (tempObject != null) {\r\n                                if (tempObject.type === Types.Rectangle\r\n                                    || tempObject.type === Types.Circle\r\n                                    || tempObject.type === Types.TextObject\r\n                                    || tempObject.type === Types.Art\r\n                                    || tempObject.type === Types.Area) {\r\n                                    let objRCA: Rectangle | Circle | Art | SelectedArea;\r\n                                    if (tempObject.type === Types.TextObject) {\r\n                                        objRCA = (tempObject as TextObject).rectangle;\r\n                                    } else {\r\n                                        objRCA = tempObject as Rectangle | Circle | Art | SelectedArea;\r\n                                    }\r\n                                    objRCA.position.x += deltaX;\r\n                                    objRCA.position.y += deltaY;\r\n                                } else if (tempObject.type === Types.Triangle) {\r\n                                    const triangle = tempObject as Triangle;\r\n                                    triangle.p0.x += deltaX;\r\n                                    triangle.p0.y += deltaY;\r\n                                    triangle.p1.x += deltaX;\r\n                                    triangle.p1.y += deltaY;\r\n                                    triangle.p2.x += deltaX;\r\n                                    triangle.p2.y += deltaY;\r\n                                }\r\n                            }\r\n                            setStart(moveEnd)\r\n                            if (canvasElement.current != null) {\r\n                                renderCanvas(canvasElement.current, imageData, null, tempObject);\r\n                            }\r\n                        } else {\r\n                            onCreateObject(start, moveEnd);\r\n                        }\r\n                    } else {\r\n                        if (selectedObject === null && tempObject !== null && tempObject.type === Types.Area) {\r\n                            setupCursor(canvas, moveEnd, tempObject, setTempPoint);\r\n                        } else {\r\n                            setupCursor(canvas, moveEnd, selectedObject, setTempPoint);\r\n                        }\r\n                        setStart(moveEnd)\r\n                    }\r\n                }}\r\n                onMouseUp={(e) => {\r\n                    const canvas = canvasElement.current;\r\n                    if (canvas === null) {\r\n                        return;\r\n                    }\r\n                    const moveEnd: Vector2 = {\r\n                        x: e.clientX - canvas.offsetLeft,\r\n                        y: e.clientY - canvas.offsetTop\r\n                    };\r\n                    if (tempObject != null) {\r\n                        setupCursor(canvas, moveEnd, tempObject, setTempPoint);\r\n                        if (tempObject.type !== Types.Area) {\r\n                            dispatch(actionReplaceSelectedObject(tempObject as TextObject | Rectangle | Triangle | Circle | Art));\r\n                            setTempObject(null);\r\n                        } else if (canvas.style.cursor === \"default\") {\r\n                            setTempObject(null);\r\n                        }\r\n                    } else if (canvas.style.cursor === \"default\" && selectedObject != null) {\r\n                        dispatch(pushToHistory(imageData))\r\n                        const newEditor = replaceSelectedObject(editor, null);\r\n                        dispatch(setEditor(newEditor));\r\n                    }\r\n                    setCanvasDown(false);\r\n                }}>\r\n            </canvas>\r\n        </div >\r\n    );\r\n}\r\n\r\nfunction setupCursor(canvas: HTMLCanvasElement,\r\n    moveEnd: Vector2,\r\n    selectedObject: Rectangle | Triangle | Circle | TextObject | Art | SelectedArea | null = null,\r\n    setTempPoint: Function) {\r\n    if (selectedObject != null) {\r\n        if (selectedObject.type === Types.Rectangle\r\n            || selectedObject.type === Types.TextObject\r\n            || selectedObject.type === Types.Art\r\n            || selectedObject.type === Types.Area) {\r\n            let objRA: Rectangle | Art | SelectedArea;\r\n            if (selectedObject.type === Types.TextObject) {\r\n                objRA = (selectedObject as TextObject).rectangle;\r\n            } else {\r\n                objRA = selectedObject as Rectangle | Art | SelectedArea;\r\n            }\r\n            const position = objRA.position;\r\n            let size: Vector2 = objRA.size;\r\n\r\n            const points = [\r\n                { x: position.x, y: position.y }, // Left Top\r\n                { x: position.x + size.x / 2, y: position.y }, // Top\r\n                { x: position.x + size.x, y: position.y }, // Top Right\r\n                { x: position.x + size.x, y: position.y + size.y / 2 }, // Right\r\n                { x: position.x + size.x, y: position.y + size.y }, // Bottom Right\r\n                { x: position.x + size.x / 2, y: position.y + size.y }, // Bottom\r\n                { x: position.x, y: position.y + size.y }, // Bottom Left\r\n                { x: position.x, y: position.y + size.y / 2 } // Left\r\n            ];\r\n            const pointIndex = points\r\n                .map((p) => length({ x: p.x - moveEnd.x, y: p.y - moveEnd.y }) <= 12)\r\n                .findIndex((value) => value);\r\n            if (pointIndex > -1) {\r\n                setTempPoint({\r\n                    x: Math.sign(points[pointIndex].x - (position.x + size.x / 2)),\r\n                    y: Math.sign(points[pointIndex].y - (position.y + size.y / 2))\r\n                });\r\n                canvas.style.cursor = \"pointer\";\r\n            } else if (moveEnd.x >= position.x\r\n                && moveEnd.x <= position.x + size.x\r\n                && moveEnd.y >= position.y\r\n                && moveEnd.y <= position.y + size.y) {\r\n                canvas.style.cursor = \"grab\";\r\n            } else {\r\n                canvas.style.cursor = \"default\";\r\n            }\r\n        } else if (selectedObject.type === Types.Triangle) {\r\n            const triangle = selectedObject as Triangle;\r\n            const points = [triangle.p0, triangle.p1, triangle.p2];\r\n            const pointIndex = points\r\n                .map((p) => length({ x: p.x - moveEnd.x, y: p.y - moveEnd.y }) <= 12)\r\n                .findIndex((value) => value);\r\n            if (pointIndex > -1) {\r\n                setTempPoint(points[pointIndex]);\r\n                canvas.style.cursor = \"pointer\";\r\n            } else if (pointInTriangle(moveEnd, triangle.p0, triangle.p1, triangle.p2)) {\r\n                canvas.style.cursor = \"grab\";\r\n            } else {\r\n                canvas.style.cursor = \"default\";\r\n            }\r\n        } else if (selectedObject.type === Types.Circle) {\r\n            const circle = selectedObject as Circle;\r\n            const distance = length({ x: moveEnd.x - circle.position.x, y: moveEnd.y - circle.position.y });\r\n            if (distance >= circle.radius - 12 && distance <= circle.radius + 12) {\r\n                canvas.style.cursor = \"pointer\";\r\n            } else if (length({ x: moveEnd.x - circle.position.x, y: moveEnd.y - circle.position.y }) < Math.max(circle.radius - 12, 0)) {\r\n                canvas.style.cursor = \"grab\";\r\n            } else {\r\n                canvas.style.cursor = \"default\";\r\n            }\r\n        }\r\n    } else {\r\n        canvas.style.cursor = \"default\";\r\n    }\r\n}\r\n\r\nfunction pointInTriangle(p: Vector2, p0: Vector2, p1: Vector2, p2: Vector2) {\r\n    var dX = p.x - p2.x;\r\n    var dY = p.y - p2.y;\r\n    var dX21 = p2.x - p1.x;\r\n    var dY12 = p1.y - p2.y;\r\n    var D = dY12 * (p0.x - p2.x) + dX21 * (p0.y - p2.y);\r\n    var s = dY12 * dX + dX21 * dY;\r\n    var t = (p2.y - p0.y) * dX + (p0.x - p2.x) * dY;\r\n    if (D < 0) return s <= 0 && t <= 0 && s + t >= D;\r\n    return s >= 0 && t >= 0 && s + t <= D;\r\n}\r\n\r\nfunction renderCanvas(canvas: HTMLCanvasElement, imageData: ImageData,\r\n    selectedObject: Rectangle | Triangle | Circle | TextObject | Art | null = null,\r\n    tempCanvasObject: Rectangle | Triangle | Circle | TextObject | Art | SelectedArea | null = null) {\r\n    if (canvas == null) {\r\n        return;\r\n    }\r\n    const context = canvas.getContext(\"2d\");\r\n    if (context != null) {\r\n        context.putImageData(imageData, 0, 0);\r\n        if (selectedObject != null) {\r\n            context.putImageData(drawObject(context, { x: imageData.width, y: imageData.height }, selectedObject), 0, 0);\r\n            drawBorder(selectedObject, context);\r\n        }\r\n        if (tempCanvasObject != null) {\r\n            if (tempCanvasObject.type !== Types.Area) {\r\n                const objRTCTA = tempCanvasObject as Rectangle | Triangle | Circle | TextObject | Art;\r\n                context.putImageData(drawObject(context, { x: imageData.width, y: imageData.height }, objRTCTA), 0, 0);\r\n            } else {\r\n                drawBorder(tempCanvasObject as SelectedArea, context);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction createGradient(ctx: CanvasRenderingContext2D, position: Vector2, size: Vector2) {\r\n    const grad = ctx.createLinearGradient(position.x, position.y, position.x + size.x, position.y + size.y);\r\n    grad.addColorStop(0, \"#F00\");\r\n    grad.addColorStop(0.2, \"#FF0\");\r\n    grad.addColorStop(0.4, \"#0F0\");\r\n    grad.addColorStop(0.6, \"#0FF\");\r\n    grad.addColorStop(0.8, \"#00F\");\r\n    grad.addColorStop(1, \"#F0F\");\r\n    return grad;\r\n}\r\n\r\nfunction drawBorder(obj: Rectangle | Triangle | Circle | TextObject | Art | SelectedArea, ctx: CanvasRenderingContext2D) {\r\n    ctx.lineWidth = 2;\r\n\r\n    if (obj.type === Types.Rectangle\r\n        || obj.type === Types.TextObject\r\n        || obj.type === Types.Art\r\n        || obj.type === Types.Area) {\r\n        let objRA: Rectangle | Art | SelectedArea;\r\n        if (obj.type === Types.TextObject) {\r\n            objRA = (obj as TextObject).rectangle;\r\n        } else {\r\n            objRA = obj as Rectangle | Art | SelectedArea;\r\n        }\r\n        if (obj.type === Types.Area) {\r\n            ctx.setLineDash([3, 4]);\r\n        }\r\n        let position = objRA.position;\r\n        let size = objRA.size;\r\n        ctx.beginPath();\r\n        const normY = Math.min(position.y + size.y, position.y);\r\n        ctx.moveTo(\r\n            position.x - ctx.lineWidth,\r\n            normY - ctx.lineWidth);\r\n        ctx.lineTo(\r\n            position.x + size.x + ctx.lineWidth,\r\n            normY - ctx.lineWidth);\r\n        ctx.lineTo(\r\n            position.x + size.x + ctx.lineWidth,\r\n            normY + Math.abs(size.y) + ctx.lineWidth);\r\n        ctx.lineTo(\r\n            position.x - ctx.lineWidth,\r\n            normY + Math.abs(size.y) + ctx.lineWidth);\r\n        ctx.lineTo(\r\n            position.x - ctx.lineWidth,\r\n            normY - ctx.lineWidth);\r\n        ctx.closePath();\r\n        ctx.strokeStyle = createGradient(ctx, position, objRA.size);\r\n        ctx.fillStyle = ctx.strokeStyle;\r\n        ctx.stroke();\r\n\r\n        const radius = 8;\r\n\r\n        const positions = [\r\n            { x: position.x, y: position.y }, //Left Top\r\n            { x: position.x + size.x / 2, y: position.y }, // Top\r\n            { x: position.x + size.x, y: position.y }, // Right Top\r\n            { x: position.x + size.x, y: position.y + size.y / 2 }, // Right\r\n            { x: position.x + size.x, y: position.y + size.y }, // Right Bottom\r\n            { x: position.x + size.x / 2, y: position.y + size.y }, // Bottom\r\n            { x: position.x, y: position.y + size.y }, // Left Bottom\r\n            { x: position.x, y: position.y + size.y / 2 }, // Left\r\n        ];\r\n\r\n        if (obj.type === Types.Area) {\r\n            ctx.setLineDash([]);\r\n        }\r\n\r\n        positions.forEach((item) => {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                item.x,\r\n                item.y,\r\n                radius,\r\n                0,\r\n                2 * Math.PI,\r\n                false\r\n            );\r\n            ctx.fill();\r\n            ctx.strokeStyle = \"#424242\"\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n        });\r\n    } else if (obj.type === Types.Triangle) {\r\n        const triangle = obj as Triangle;\r\n        ctx.beginPath();\r\n        ctx.moveTo(triangle.p0.x, triangle.p0.y);\r\n        ctx.lineTo(triangle.p1.x, triangle.p1.y);\r\n        ctx.lineTo(triangle.p2.x, triangle.p2.y);\r\n        ctx.closePath();\r\n\r\n\r\n        const positions = [triangle.p0, triangle.p1, triangle.p2];\r\n\r\n        const min = {\r\n            x: Math.min(triangle.p0.x, triangle.p1.x, triangle.p2.x),\r\n            y: Math.min(triangle.p0.y, triangle.p1.y, triangle.p2.y),\r\n        }\r\n\r\n        const max = {\r\n            x: Math.max(triangle.p0.x, triangle.p1.x, triangle.p2.x),\r\n            y: Math.max(triangle.p0.y, triangle.p1.y, triangle.p2.y),\r\n        }\r\n        ctx.strokeStyle = createGradient(ctx, min, {\r\n            x: max.x - min.x,\r\n            y: max.y - min.y\r\n        });\r\n        ctx.fillStyle = ctx.strokeStyle;\r\n        ctx.stroke();\r\n\r\n        const radius = 8;\r\n\r\n        positions.forEach((item) => {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                item.x,\r\n                item.y,\r\n                radius,\r\n                0,\r\n                2 * Math.PI,\r\n                false\r\n            );\r\n            ctx.fill();\r\n            ctx.strokeStyle = \"#424242\"\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n        });\r\n    } else if (obj.type === Types.Circle) {\r\n        const circle = obj as Circle;\r\n        const position = circle.position;\r\n        ctx.beginPath();\r\n        ctx.moveTo(\r\n            position.x + circle.radius + ctx.lineWidth,\r\n            position.y);\r\n        ctx.arc(position.x, position.y, circle.radius + ctx.lineWidth, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.strokeStyle = createGradient(ctx, {\r\n            x: position.x - circle.radius,\r\n            y: position.y - circle.radius\r\n        }, {\r\n            x: circle.radius * 2,\r\n            y: circle.radius * 2\r\n        });\r\n        ctx.fillStyle = ctx.strokeStyle;\r\n        ctx.stroke();\r\n    }\r\n}\r\n","import React, { CSSProperties, useState } from 'react';\r\nimport { ChromePicker, ColorResult } from 'react-color';\r\nimport EditText from '../../edittext/EditText';\r\nimport { toHexColor, toRGBAColor } from '../../helper/ColorHelper';\r\nimport { RGBAColor } from '../../structures/RGBAColor';\r\n\r\ninterface ColorPickerProps {\r\n    id: string,\r\n    title: string,\r\n    defaultColor: RGBAColor,\r\n    onChange(color: RGBAColor): void\r\n}\r\n\r\nexport default function TextColorPicker(props: ColorPickerProps) {\r\n    const [color, setColor] = useState(props.defaultColor)\r\n    const [displayColorPicker, setDisplayColorPicker] = useState(false)\r\n    const handleChange = (result: ColorResult) => {\r\n        if (result !== undefined) {\r\n            let alpha = result.rgb.a;\r\n            if (alpha === undefined) {\r\n                alpha = 1;\r\n            }\r\n            const newColor = { r: result.rgb.r, g: result.rgb.g, b: result.rgb.b, a: alpha };\r\n            setColor(newColor);\r\n            (document.getElementById(props.id) as HTMLInputElement).value = `${toHexColor(newColor)}`\r\n            props.onChange(newColor);\r\n        }\r\n    };\r\n\r\n    const handleClick = () => {\r\n        setDisplayColorPicker(!displayColorPicker)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setDisplayColorPicker(false)\r\n    };\r\n    const popover: CSSProperties = {\r\n        position: 'fixed',\r\n        zIndex: 4\r\n    }\r\n\r\n    const cover: CSSProperties = {\r\n        position: 'fixed',\r\n        top: '0px',\r\n        right: '0px',\r\n        bottom: '0px',\r\n        left: '0px',\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                {displayColorPicker ? <div style={popover}>\r\n                    <div style={cover} onClick={handleClose} />\r\n                    <div ref={\r\n                        (e) => {\r\n                            if (e !== null) {\r\n                                e.style.transform = `translateY(${-e.clientHeight - 8}px)`;\r\n                            }\r\n                        }}>\r\n                        <ChromePicker\r\n                            color={{ r: color.r, g: color.g, b: color.b, a: color.a }}\r\n                            disableAlpha={false}\r\n                            onChangeComplete={handleChange}\r\n                            onChange={handleChange}>\r\n                        </ChromePicker>\r\n                    </div>\r\n                </div> : null}\r\n                <EditText\r\n                    id={props.id}\r\n                    title={props.title}\r\n                    text={toHexColor(color)}\r\n                    type=\"text\"\r\n                    onClick={handleClick}\r\n                    onChange={(e) => {\r\n                        (e.target as HTMLInputElement).oninput = null;\r\n                        const newColor = toRGBAColor(e.target.value);\r\n                        setColor(newColor);\r\n                        props.onChange(newColor);\r\n                    }}></EditText>\r\n            </div>\r\n        </div >\r\n    );\r\n}","const UPDATE_FILL_COLOR = \"UPDATE_FILL_COLOR\";\r\nexport default UPDATE_FILL_COLOR;","const UPDATE_STROKE_COLOR = \"UPDATE_STROKE_COLOR\";\r\nexport default UPDATE_STROKE_COLOR;","const UPDATE_STROKE_WIDTH = \"UPDATE_STROKE_WIDTH\";\r\nexport default UPDATE_STROKE_WIDTH;","const UPDATE_TEXT = \"UPDATE_TEXT\";\r\nexport default UPDATE_TEXT;","const UPDATE_TEXT_COLOR = \"UPDATE_TEXT_COLOR\";\r\nexport default UPDATE_TEXT_COLOR;","const UPDATE_TEXT_SIZE = \"UPDATE_TEXT_SIZE\";\r\nexport default UPDATE_TEXT_SIZE;","import { ToolType } from \"../components/tool/Tools\";\r\nimport { createNewCanvas } from \"../helper/CanvasHelper\";\r\nimport { toRGBAColor } from \"../helper/ColorHelper\";\r\nimport { ViewModel } from \"../viewmodel/ViewModel\";\r\n\r\nconst defaultEditor = createNewCanvas(\r\n    {\r\n        selectedObject: null,\r\n        canvas: new ImageData(1, 1)\r\n    },\r\n    { x: 800, y: 600 });\r\n\r\nconst initialViewModel: ViewModel = {\r\n    editor: defaultEditor,\r\n    imageHistory: {\r\n        history: [defaultEditor.canvas],\r\n        currentHistoryPosition: 0\r\n    },\r\n    currentTool: ToolType.Rectangle,\r\n    objectState: {\r\n        fillColor: toRGBAColor(\"#FF00CCCC\"),\r\n        strokeColor: toRGBAColor(\"#FFCC0000\"),\r\n        strokeWidth: 4,\r\n        text: \"\",\r\n        textSize: 24,\r\n        textColor: toRGBAColor(\"#FF424242\")\r\n    }\r\n}\r\n\r\nexport default initialViewModel;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport TextColorPicker from '../components/colopicker/TextColorPicker';\r\nimport { ToolType } from '../components/tool/Tools';\r\nimport EditText from '../edittext/EditText';\r\nimport updateFillColor from '../store/actionCreators/updateFillColor';\r\nimport updateStrokeColor from '../store/actionCreators/updateStrokeColor';\r\nimport updateStrokeWidth from '../store/actionCreators/updateStrokeWidth';\r\nimport updateText from '../store/actionCreators/updateText';\r\nimport updateTextColor from '../store/actionCreators/updateTextColor';\r\nimport updateTextSize from '../store/actionCreators/updateTextSize';\r\nimport initialViewModel from '../store/initialState';\r\nimport { ViewModel } from '../viewmodel/ViewModel';\r\nimport './ObjectParams.css';\r\n\r\nfunction ObjectParams() {\r\n    const dispatch = useDispatch();\r\n    const tool: ToolType = useSelector(\r\n        (state: ViewModel) => state.currentTool\r\n    )\r\n    return (\r\n        <div className=\"ObjectParams\">\r\n            <div className=\"ParamsList\">\r\n                <TextColorPicker\r\n                    id=\"EditText-fill\"\r\n                    title=\"Цвет заливки\"\r\n                    defaultColor={initialViewModel.objectState.fillColor}\r\n                    onChange={(color) => {\r\n                        dispatch(updateFillColor(color));\r\n                    }}></TextColorPicker>\r\n                <TextColorPicker\r\n                    id=\"EditText-stroke\"\r\n                    title=\"Цвет контура\"\r\n                    defaultColor={initialViewModel.objectState.strokeColor}\r\n                    onChange={(color) => {\r\n                        dispatch(updateStrokeColor(color))\r\n                    }}></TextColorPicker>\r\n                <EditText\r\n                    id=\"EditText-strokeWidth\"\r\n                    title=\"Толщина контура\"\r\n                    text={`${initialViewModel.objectState.strokeWidth}`}\r\n                    min=\"0\"\r\n                    type=\"number\"\r\n                    onChange={(e) => {\r\n                        const strokeWidth = e.target.valueAsNumber;\r\n                        dispatch(updateStrokeWidth(strokeWidth))\r\n                    }}></EditText>\r\n            </div>\r\n            <div className=\"ParamsList\">\r\n                {tool === ToolType.Text\r\n                    && <textarea\r\n                        id=\"EditText-text\"\r\n                        title=\"Текст\"\r\n                        defaultValue={initialViewModel.objectState.text}\r\n                        onChange={(e) => {\r\n                            dispatch(updateText(e.target.value))\r\n                        }}></textarea>\r\n                }\r\n                {tool === ToolType.Text\r\n                    && <EditText\r\n                        id=\"EditText-textSize\"\r\n                        title=\"Размер текста\"\r\n                        text={`${initialViewModel.objectState.textSize}`}\r\n                        min=\"1\"\r\n                        type=\"number\"\r\n                        onChange={(e) => {\r\n                            dispatch(updateTextSize(e.target.valueAsNumber))\r\n                        }}></EditText>\r\n                }\r\n                {tool === ToolType.Text\r\n                    && <TextColorPicker\r\n                        id=\"EditText-textColor\"\r\n                        title=\"Цвет текста\"\r\n                        defaultColor={initialViewModel.objectState.textColor}\r\n                        onChange={(color) => {\r\n                            dispatch(updateTextColor(color));\r\n                        }}></TextColorPicker>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ObjectParams;\r\n","export enum Filter {\r\n    Grey, Red, Green, Blue, Brightness\r\n}","import { RGBAColor } from \"../../structures/RGBAColor\";\r\nimport RGBAColorAction from \"../actions/types/RGBAColorAction\";\r\nimport UPDATE_FILL_COLOR from \"../actions/updateFillColor\";\r\n\r\nexport default function updateFillColor(color: RGBAColor): RGBAColorAction {\r\n    return { \r\n        type: UPDATE_FILL_COLOR,\r\n        value: color\r\n    };\r\n}","import { RGBAColor } from \"../../structures/RGBAColor\";\r\nimport RGBAColorAction from \"../actions/types/RGBAColorAction\";\r\nimport UPDATE_STROKE_COLOR from \"../actions/updateStrokeColor\";\r\n\r\nexport default function updateStrokeColor(value: RGBAColor): RGBAColorAction {\r\n    return { \r\n        type: UPDATE_STROKE_COLOR,\r\n        value: value\r\n    };\r\n}","import NumberAction from \"../actions/types/NumberAction\";\r\nimport UPDATE_STROKE_WIDTH from \"../actions/updateStrokeWidth\";\r\n\r\nexport default function updateStrokeWidth(value: number): NumberAction {\r\n    return { \r\n        type: UPDATE_STROKE_WIDTH,\r\n        value: value\r\n    };\r\n}","import StringAction from \"../actions/types/StringAction\";\r\nimport UPDATE_TEXT from \"../actions/updateText\";\r\n\r\nexport default function updateText(value: string): StringAction {\r\n    return { \r\n        type: UPDATE_TEXT,\r\n        value: value\r\n    };\r\n}","import NumberAction from \"../actions/types/NumberAction\";\r\nimport UPDATE_TEXT_SIZE from \"../actions/updateTextSize\";\r\n\r\nexport default function updateTextSize(value: number): NumberAction {\r\n    return { \r\n        type: UPDATE_TEXT_SIZE,\r\n        value: value\r\n    };\r\n}","import { RGBAColor } from \"../../structures/RGBAColor\";\r\nimport RGBAColorAction from \"../actions/types/RGBAColorAction\";\r\nimport UPDATE_TEXT_COLOR from \"../actions/updateTextColor\";\r\n\r\nexport default function updateTextColor(value: RGBAColor): RGBAColorAction {\r\n    return { \r\n        type: UPDATE_TEXT_COLOR,\r\n        value: value\r\n    };\r\n}","import { SvgIcon } from \"@material-ui/core\";\r\nimport React from 'react';\r\n\r\nexport default function FilterIcon() {\r\n\treturn (\r\n\t\t<SvgIcon viewBox=\"0 0 512 512\" style={{ width: \"100%\", height: \"100%\" }}>\r\n\t\t\t<path style={{ fill: \"#FFE17D\" }} d=\"M214.71,306.106v197.626c0,6.139,6.46,10.132,11.951,7.386l61.5-30.75  c5.595-2.798,9.13-8.517,9.13-14.772v-159.49c0-5.702,1.967-11.229,5.568-15.649L473.4,81.157c3.602-4.42,5.568-9.947,5.568-15.649  V16.516C478.968,7.395,471.573,0,462.452,0H49.548c-9.122,0-16.516,7.395-16.516,16.516v48.991c0,5.702,1.967,11.229,5.568,15.649  l170.541,209.3C212.743,294.877,214.71,300.404,214.71,306.106z\" />\r\n\t\t\t<path style={{ fill: \"#FFD164\" }} d=\"M404.355,66.065H198.194c-4.561,0-8.258-3.697-8.258-8.258V0H49.548  c-9.122,0-16.516,7.395-16.516,16.516v48.991c0,5.702,1.967,11.229,5.568,15.649l170.541,209.3c3.602,4.42,5.569,9.948,5.569,15.65  v197.625c0,6.139,6.46,10.132,11.951,7.386l17.105-8.552V305.548c0-4.561,3.697-8.258,8.258-8.258h11.74  c5.474,0,10.593-2.712,13.667-7.242L415.346,86.804C421.33,77.985,415.013,66.065,404.355,66.065z\" />\r\n\t\t\t<path style={{ fill: \"#FFC350\" }} d=\"M123.502,66.065H33.08c0.126,5.502,2.037,10.817,5.52,15.091l170.541,209.3  c1.681,2.064,2.968,4.383,3.903,6.835h6.065c5.821,0,9.814-5.86,7.686-11.278L146.561,81.78  C142.836,72.299,133.688,66.065,123.502,66.065z\" />\r\n\t\t</SvgIcon >\r\n\t);\r\n}\r\n","import {\r\n    ClickAwayListener, createStyles, Grow, IconButton, makeStyles, MenuItem,\r\n    MenuList, Paper, Popper, Theme\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Filter } from '../../structures/Filter';\r\nimport './FilterMenu.css';\r\nimport FilterIcon from './FIltersIcon';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            backgroundColor: \"#9d46ff\",\r\n            color: \"#FFFFFF\",\r\n            fontWeight: 600,\r\n            fontFamily: \"monospace\",\r\n            fontSize: \"16px\",\r\n            margin: \"8px\",\r\n            padding: \"16px\",\r\n            width: \"56px\",\r\n            height: \"56px\",\r\n            '&:hover': {\r\n                backgroundColor: \"#7200ca\"\r\n            }\r\n        },\r\n        paper: {\r\n            marginTop: \"4px\",\r\n            backgroundColor: \"#8eacbbbe\",\r\n            color: \"white\",\r\n        }\r\n    }),\r\n);\r\n\r\ninterface FilterMenuProps {\r\n    onSelect(filter: Filter): void\r\n}\r\n\r\nexport default function FilterMenu(props: FilterMenuProps) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event: React.MouseEvent<EventTarget>) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    function handleListKeyDown(event: React.KeyboardEvent) {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault();\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current!.focus();\r\n        }\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n    return (\r\n        <div className=\"FiltersContainer\">\r\n            <IconButton\r\n                edge=\"end\"\r\n                className={classes.button}\r\n                ref={anchorRef}\r\n                onClick={handleToggle}\r\n                color=\"primary\">\r\n                <FilterIcon></FilterIcon>\r\n            </IconButton>\r\n            <div>\r\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                    {({ TransitionProps, placement }) => (\r\n                        <Grow\r\n                            {...TransitionProps}\r\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                        >\r\n                            <Paper className={classes.paper}>\r\n                                <ClickAwayListener onClickAway={handleClose}>\r\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                                        <MenuItem onClick={(e) => { props.onSelect(Filter.Grey); handleClose(e) }}>Серый</MenuItem>\r\n                                        <MenuItem onClick={(e) => { props.onSelect(Filter.Red); handleClose(e) }}>Красный</MenuItem>\r\n                                        <MenuItem onClick={(e) => { props.onSelect(Filter.Green); handleClose(e) }}>Зелёный</MenuItem>\r\n                                        <MenuItem onClick={(e) => { props.onSelect(Filter.Blue); handleClose(e) }}>Синий</MenuItem>\r\n                                        <MenuItem onClick={(e) => { props.onSelect(Filter.Brightness); handleClose(e) }}>Яркость</MenuItem>\r\n                                    </MenuList>\r\n                                </ClickAwayListener>\r\n                            </Paper>\r\n                        </Grow>\r\n                    )}\r\n                </Popper>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { Editor } from \"../structures/Editor\";\r\nimport { Filter } from \"../structures/Filter\";\r\n\r\nexport function applyFilter(editor: Editor, filter: Filter) {\r\n\tconst newImageData = new ImageData(editor.canvas.width, editor.canvas.height);\r\n\tswitch (filter) {\r\n\t\tcase Filter.Red:\r\n\t\t\tapplyColorLevelFilter(editor.canvas, newImageData, [1, 0, 0, 1]);\r\n\t\t\tbreak;\r\n\t\tcase Filter.Green:\r\n\t\t\tapplyColorLevelFilter(editor.canvas, newImageData, [0, 1, 0, 1]);\r\n\t\t\tbreak\r\n\t\tcase Filter.Blue:\r\n\t\t\tapplyColorLevelFilter(editor.canvas, newImageData, [0, 0, 1, 1]);\r\n\t\t\tbreak\r\n\t\tcase Filter.Grey:\r\n\t\t\tapplyGreyFilter(editor.canvas, newImageData);\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tconst newEditor: Editor = {\r\n\t\t...editor,\r\n\t\tcanvas: newImageData,\r\n\t};\r\n\treturn newEditor;\r\n}\r\n\r\nfunction applyColorLevelFilter(src: ImageData, dst: ImageData, colorLevels: Array<number>) {\r\n\tfor (var i = 0; i < dst.height; i++) {\r\n\t\tfor (var j = 0; j < dst.width; j++) {\r\n\t\t\tvar dataIndex = (i * dst.width + j) * 4;\r\n\t\t\tfor (var k = 0; k < 4; k++) {\r\n\t\t\t\tdst.data[dataIndex + k] = src.data[dataIndex + k] * colorLevels[k];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyGreyFilter(src: ImageData, dst: ImageData) {\r\n\tfor (var i = 0; i < dst.height; i++) {\r\n\t\tfor (var j = 0; j < dst.width; j++) {\r\n\t\t\tvar dataIndex = (i * dst.width + j) * 4;\r\n\t\t\tvar mean = (src.data[dataIndex] + src.data[dataIndex + 1] + src.data[dataIndex + 2]) / 3;\r\n\t\t\tfor (var k = 0; k < 3; k++) {\r\n\t\t\t\tdst.data[dataIndex + k] = mean;\r\n            }\r\n            dst.data[dataIndex + 3] = src.data[dataIndex + 3];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport function applyBrightnessFilter(editor: Editor, brightnessFactor: number): Editor {\r\n    const dst = new ImageData(editor.canvas.width, editor.canvas.height);\r\n\tconst src = editor.canvas;\r\n\tfor (var i = 0; i < dst.height; i++) {\r\n\t\tfor (var j = 0; j < dst.width; j++) {\r\n\t\t\tvar dataIndex = (i * dst.width + j) * 4;\r\n\t\t\tfor (var k = 0; k < 3; k++) {\r\n\t\t\t\tdst.data[dataIndex + k] = src.data[dataIndex + k] * brightnessFactor;\r\n            }\r\n            dst.data[dataIndex + 3] = src.data[dataIndex + 3];\r\n\t\t}\r\n    }\r\n    const newEditor: Editor = {\r\n\t\tselectedObject: null,\r\n\t\tcanvas: dst,\r\n\t};\r\n\treturn newEditor;\r\n}\r\n","import { createStyles, Fab, makeStyles, Slider, SvgIcon, Theme } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport './BrightnessSlider.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        fab: {\r\n            marginLeft: \"24px\",\r\n        },\r\n        slider: {\r\n            width: \"350px\"\r\n        }\r\n    }),\r\n);\r\n\r\ninterface BrightnessSliderProps {\r\n    onChange(value: number): void,\r\n    onApply(value: number): void\r\n}\r\n\r\nexport default function BrightnessSlider({ onApply, onChange }: BrightnessSliderProps) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState<number>(1)\r\n    return (\r\n        <div className='BrightnessSlider-container'>\r\n            <div className='BrightnessSlider-center'>\r\n                <Slider\r\n                    className={classes.slider}\r\n                    defaultValue={1}\r\n                    aria-labelledby=\"discrete-slider-custom\"\r\n                    step={0.01}\r\n                    min={0}\r\n                    max={4}\r\n                    valueLabelDisplay=\"auto\"\r\n                    onChange={(e, newValue) => {\r\n                        const num = newValue as number;\r\n                        setValue(num);\r\n                        onChange(num)\r\n                    }}\r\n                />\r\n                <Fab color=\"primary\" aria-label=\"add\"\r\n                    size=\"small\"\r\n                    className={classes.fab}\r\n                    onClick={(e) => onApply(value)}>\r\n                    <SvgIcon>\r\n                        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\r\n                    </SvgIcon>\r\n                </Fab>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport '../../index.css';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button, createStyles, Dialog, IconButton, Slide, Theme, Typography, withStyles, WithStyles } from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            margin: 0,\r\n            padding: theme.spacing(2),\r\n        },\r\n        closeButton: {\r\n            position: 'absolute',\r\n            right: theme.spacing(1),\r\n            top: theme.spacing(1),\r\n            color: theme.palette.grey[500],\r\n        },\r\n        title: {\r\n            fontFamily: \"cursive\"\r\n        }\r\n    });\r\n\r\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\r\n    id: string;\r\n    children: React.ReactNode;\r\n    onClose: () => void;\r\n}\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography className={classes.title} variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n    ref: React.Ref<unknown>,\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\ninterface PasteArtDialogProps {\r\n    isOpen: boolean,\r\n    onSaveSize: Function,\r\n    onChangeSize: Function,\r\n    onClose: Function\r\n}\r\n\r\nexport default function PasteArtDialog(props: PasteArtDialogProps) {\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                TransitionComponent={Transition}\r\n                onClose={() => props.onClose()}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={props.isOpen}>\r\n                <DialogTitle id=\"customized-dialog-title\"\r\n                    onClose={() => props.onClose()}>\r\n                    Выберите действие\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Button autoFocus onClick={() => {\r\n                        props.onSaveSize();\r\n                        props.onClose()\r\n                    }} color=\"primary\">\r\n                        Сохранить размер полотна\r\n                    </Button>\r\n                    <Button autoFocus onClick={() => {\r\n                        props.onChangeSize();\r\n                        props.onClose();\r\n                    }} color=\"primary\">\r\n                        Изменить размер полотна\r\n                    </Button>\r\n                    <Button autoFocus onClick={() => props.onClose()} color=\"primary\">\r\n                        Отмена\r\n                    </Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","const UNDO_HISTORY = \"UNDO_HISTORY\";\r\nexport default UNDO_HISTORY;","import { Action } from \"redux\";\r\nimport UNDO_HISTORY from \"../actions/undoHistory\";\r\n\r\nfunction undoHistory(): Action {\r\n    return {\r\n        type: UNDO_HISTORY,\r\n    };\r\n}\r\n\r\nexport default undoHistory;","const REDO_HISTORY = \"REDO_HISTORY\";\r\nexport default REDO_HISTORY;","import { Action } from \"redux\";\r\nimport REDO_HISTORY from \"../actions/redoHistory\";\r\n\r\nfunction redoHistory(): Action {\r\n    return {\r\n        type: REDO_HISTORY,\r\n    };\r\n}\r\n\r\nexport default redoHistory;","const EDIT_CANVAS_SIZE = \"EDIT_CANVAS_SIZE\";\r\nexport default EDIT_CANVAS_SIZE;","import { Vector2 } from \"../../structures/Vector2\";\r\nimport EDIT_CANVAS_SIZE from \"../actions/editCanvasSize\";\r\nimport Vector2Action from \"../actions/types/Vector2Action\";\r\n\r\nfunction editCanvasSize(size: Vector2): Vector2Action {\r\n    return {\r\n        type: EDIT_CANVAS_SIZE,\r\n        value: size\r\n    };\r\n}\r\n\r\nexport default editCanvasSize;","const APPLY_FILTER = \"APPLY_FILTER\";\r\nexport default APPLY_FILTER;\r\n","import { Filter } from \"../../structures/Filter\";\r\nimport APPLY_FILTER from \"../actions/applyFilter\";\r\nimport FilterAction from \"../actions/types/FilterAction\";\r\n\r\nfunction applyFilter(filter: Filter): FilterAction {\r\n    return {\r\n        type: APPLY_FILTER,\r\n        value: filter\r\n    };\r\n}\r\n\r\nexport default applyFilter;","const CREATE_NEW_CANVAS = \"CREATE_NEW_CANVAS\";\r\nexport default CREATE_NEW_CANVAS;\r\n","import { Vector2 } from \"../../structures/Vector2\";\r\nimport CREATE_NEW_CANVAS from \"../actions/createNewCanvas\";\r\nimport Vector2Action from \"../actions/types/Vector2Action\";\r\n\r\nfunction createNewCanvas(size: Vector2): Vector2Action {\r\n    return {\r\n        type: CREATE_NEW_CANVAS,\r\n        value: size\r\n    };\r\n}\r\n\r\nexport default createNewCanvas;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport SelectSizePopup from './components/selectsizepopup/SelectSizeDialog';\r\nimport Canvas from './components/canvas/Canvas';\r\nimport ObjectParams from './objectparams/ObjectParams';\r\nimport { exportObject, importObject } from './helper/CanvasHelper';\r\nimport './structures/Vector2';\r\nimport Tools, { ToolType } from './components/tool/Tools';\r\nimport { Editor } from './structures/Editor';\r\nimport { AppBar, Box, IconButton, SvgIcon, Toolbar, Typography } from '@material-ui/core';\r\nimport { createStyles, makeStyles, Theme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport { Art } from './structures/Art';\r\nimport FilterMenu from './components/filtermenu/FilterMenu';\r\nimport { applyBrightnessFilter } from './helper/FilterHelper';\r\nimport { Filter } from './structures/Filter';\r\nimport BrightnessSlider from './components/brightslider/BrightnessSlider';\r\nimport { useTimeout } from './components/timeout/Timeout';\r\nimport PasteArtDialog from './components/pasteartdialog/PasteArtDialog';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { ViewModel } from './viewmodel/ViewModel';\r\nimport undoHistory from './store/actionCreators/undoHistory';\r\nimport redoHistory from './store/actionCreators/redoHistory';\r\nimport actionReplaceSelectedObject from './store/actionCreators/actionReplaceSelectedObject';\r\nimport setEditor from './store/actionCreators/setEditor';\r\nimport pushToHistory from './store/actionCreators/pushToHistory';\r\nimport editCanvasSize from './store/actionCreators/editCanvasSize';\r\nimport applyFilter from './store/actionCreators/applyFilter';\r\nimport createNewCanvas from './store/actionCreators/createNewCanvas';\r\nimport { replaceSelectedObject } from './helper/EditorHelper';\r\nimport { purple, red } from '@material-ui/core/colors';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: deepPurple[\"A700\"],\r\n        },\r\n        secondary: {\r\n            main: purple[\"A700\"],\r\n            light: red[\"A400\"],\r\n        },\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n            width: \"100%\"\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n            textAlign: \"start\",\r\n            fontFamily: \"cursive\"\r\n        },\r\n    }),\r\n);\r\n\r\nfunction App() {\r\n    const timeout = useTimeout();\r\n    const dispatch = useDispatch();\r\n    const editor: Editor = useSelector(\r\n        (state: ViewModel) => state.editor,\r\n        shallowEqual\r\n    )\r\n    const currentTool: ToolType = useSelector(\r\n        (state: ViewModel) => state.currentTool\r\n    )\r\n    const [isBrightSliderShown, setBrightSliderShown] = useState(false);\r\n    const [tempEditor, setTempEditor] = useState<Editor | null>(null);\r\n    const classes = useStyles();\r\n\r\n    const [isPasteArtDialogOpen, setPasteArtDialogOpen] = useState(false);\r\n    const [pasteArt, setPasteArt] = useState<Art | null>(null);\r\n\r\n    useEffect(() => {\r\n        const listener = (e: KeyboardEvent) => {\r\n            if (e.ctrlKey) {\r\n                if (e.code === \"KeyZ\") {\r\n                    dispatch(undoHistory());\r\n                } else if (e.code === \"KeyY\") {\r\n                    dispatch(redoHistory());\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener(\"keydown\", listener)\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", listener);\r\n        }\r\n    })\r\n    return (\r\n        <div className=\"App\"\r\n            id=\"App\">\r\n            <ThemeProvider theme={theme}>\r\n                <Canvas></Canvas>\r\n                <Box position=\"fixed\" className={classes.root}>\r\n                    <AppBar position=\"static\" style={{ background: \"#6200ea\" }}>\r\n                        <Toolbar>\r\n                            <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\r\n                                Reactive Photo Editor\r\n                        </Typography>\r\n                            <SelectSizePopup\r\n                                applyText=\"Создать\"\r\n                                action={createNewCanvas({ x: 0, y: 0 })}>\r\n                                <SvgIcon>\r\n                                    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                                    <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\r\n                                </SvgIcon>\r\n                            </SelectSizePopup>\r\n                            <SelectSizePopup\r\n                                applyText=\"Изменить\"\r\n                                action={editCanvasSize({ x: 0, y: 0 })}>\r\n                                <SvgIcon>\r\n                                    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                                    <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" />\r\n                                </SvgIcon>\r\n                            </SelectSizePopup>\r\n                            <IconButton aria-label=\"Загрузить\"\r\n                                color=\"inherit\"\r\n                                onClick={() => {\r\n                                    importObject((art: Art) => {\r\n                                        setPasteArt(art);\r\n                                        setPasteArtDialogOpen(true);\r\n                                    })\r\n                                }}>\r\n                                <SvgIcon>\r\n                                    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                                    <path d=\"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z\" />\r\n                                </SvgIcon>\r\n                            </IconButton>\r\n                            <IconButton aria-label=\"Сохранить\"\r\n                                color=\"inherit\"\r\n                                edge=\"end\"\r\n                                onClick={() => {\r\n                                    setTempEditor(editor);\r\n                                    dispatch(actionReplaceSelectedObject(null));\r\n                                    exportObject();\r\n                                    dispatch(setEditor(editor));\r\n                                }}>\r\n                                <SvgIcon>\r\n                                    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                                    <path d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\" />\r\n                                </SvgIcon>\r\n                            </IconButton>\r\n                            {isPasteArtDialogOpen && <PasteArtDialog\r\n                                isOpen={isPasteArtDialogOpen}\r\n                                onSaveSize={() => {\r\n                                    const isPushToHistory = editor.selectedObject !== null;\r\n                                    const historyCanvas = editor.canvas;\r\n                                    dispatch(actionReplaceSelectedObject(pasteArt));\r\n                                    if (isPushToHistory) {\r\n                                        dispatch(pushToHistory(historyCanvas));\r\n                                    }\r\n                                }}\r\n                                onChangeSize={() => {\r\n                                    const isPushToHistory = editor.selectedObject !== null;\r\n                                    const historyCanvas = editor.canvas;\r\n                                    if (pasteArt === null) {\r\n                                        throw new Error();\r\n                                    }\r\n                                    dispatch(editCanvasSize(pasteArt.size));\r\n                                    dispatch(actionReplaceSelectedObject(pasteArt));\r\n                                    if (isPushToHistory) {\r\n                                        dispatch(pushToHistory(historyCanvas));\r\n                                    }\r\n                                }}\r\n                                onClose={() => {\r\n                                    setPasteArtDialogOpen(false);\r\n                                    setPasteArt(null);\r\n                                }}></PasteArtDialog>}\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Tools onSelected={() => {\r\n                        if (isBrightSliderShown) {\r\n                            if (tempEditor === null) {\r\n                                throw new Error();\r\n                            }\r\n                            dispatch(setEditor(tempEditor))\r\n                            setBrightSliderShown(false);\r\n                        }\r\n                    }}></Tools>\r\n                    <FilterMenu\r\n                        onSelect={(filter) => {\r\n                            let temp = editor;\r\n                            if (editor.selectedObject != null) {\r\n                                const newEditor = replaceSelectedObject(editor, null);\r\n                                dispatch(pushToHistory(newEditor.canvas));\r\n                                dispatch(setEditor(newEditor));\r\n                                temp = newEditor;\r\n                            }\r\n                            if (filter !== Filter.Brightness) {\r\n                                dispatch(applyFilter(filter));\r\n                            } else {\r\n                                setTempEditor(temp);\r\n                                setBrightSliderShown(true);\r\n                            }\r\n                        }}></FilterMenu>\r\n                </Box>\r\n                {currentTool !== ToolType.Area && <ObjectParams />}\r\n                {isBrightSliderShown\r\n                    && <BrightnessSlider\r\n                        onChange={(value) => {\r\n                            if (tempEditor === null) {\r\n                                return;\r\n                            }\r\n                            timeout(16, () => {\r\n                                const brightEditor = applyBrightnessFilter(tempEditor, value);\r\n                                dispatch(setEditor(brightEditor))\r\n                            });\r\n                        }}\r\n                        onApply={(value) => {\r\n                            setBrightSliderShown(false);\r\n                            if (value === 1) {\r\n                                return;\r\n                            }\r\n                            const newEditor = replaceSelectedObject(editor, null);\r\n                            dispatch(pushToHistory(newEditor.canvas));\r\n                            dispatch(setEditor(newEditor));\r\n                        }}\r\n                    ></BrightnessSlider>}\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useState } from \"react\";\r\n\r\nexport function useTimeout() {\r\n    const [isTimerStarted, setTimerStarted] = useState<Boolean>(false);\r\n    return (ms: number, action: Function) => {\r\n        if (!isTimerStarted) {\r\n            setTimerStarted(true);\r\n            setTimeout(() => {\r\n                action();\r\n                setTimerStarted(false);\r\n            }, ms);\r\n        }\r\n    }\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { Editor } from \"../structures/Editor\";\r\nimport { ImageHistory } from \"../structures/ImageHistory\";\r\nimport { ViewModel } from \"../viewmodel/ViewModel\";\r\nimport { copyImageData } from \"./CanvasHelper\";\r\nimport { replaceSelectedObject } from \"./EditorHelper\";\r\n\r\nexport function pushToHistory(imageHistory: ImageHistory, canvas: ImageData): ImageHistory {\r\n    const newArrayHistory = imageHistory.history.flatMap((imageData) => copyImageData(imageData));\r\n\r\n    const newHistory = {\r\n        history: newArrayHistory,\r\n        currentHistoryPosition: imageHistory.currentHistoryPosition\r\n    }\r\n    while (newHistory.currentHistoryPosition < newHistory.history.length - 1) {\r\n        newHistory.history.pop();\r\n    }\r\n    if (newHistory.currentHistoryPosition === newHistory.history.length - 1) {\r\n        newHistory.currentHistoryPosition++;\r\n    }\r\n    newHistory.history.push(copyImageData(canvas));\r\n    return newHistory;\r\n}\r\n\r\nexport function undoHistory(state: ViewModel): ViewModel {\r\n    let editor: Editor = {\r\n        selectedObject: state.editor.selectedObject,\r\n        canvas: state.editor.canvas\r\n    };\r\n    let imageHistory: ImageHistory = state.imageHistory;\r\n    if (imageHistory.history.length > 0) {\r\n        if (imageHistory.currentHistoryPosition > 0 || editor.selectedObject != null) {\r\n            if (editor.selectedObject == null) {\r\n                imageHistory.currentHistoryPosition--;\r\n            } else {\r\n                editor = replaceSelectedObject(editor, null);\r\n                const historyCanvas = copyImageData(editor.canvas);\r\n                imageHistory = pushToHistory(imageHistory, historyCanvas);\r\n                if (state === undefined) {\r\n                    throw new Error();\r\n                }\r\n                imageHistory.currentHistoryPosition--;\r\n            }\r\n            editor.canvas = copyImageData(\r\n                imageHistory.history[imageHistory.currentHistoryPosition]\r\n            );\r\n        }\r\n    }\r\n    return {\r\n        ...state,\r\n        imageHistory: imageHistory,\r\n        editor: editor\r\n    }\r\n}\r\n\r\nexport function redoHistory(state: ViewModel): ViewModel {\r\n    let editor: Editor = {\r\n        selectedObject: state.editor.selectedObject,\r\n        canvas: state.editor.canvas\r\n    };\r\n    let imageHistory: ImageHistory = state.imageHistory;\r\n    if (imageHistory.history.length > 0) {\r\n        if (imageHistory.currentHistoryPosition < imageHistory.history.length - 1) {\r\n            imageHistory.currentHistoryPosition++;\r\n            editor.canvas = copyImageData(\r\n                imageHistory.history[imageHistory.currentHistoryPosition]\r\n            );\r\n        }\r\n    }\r\n    return {\r\n        ...state,\r\n        editor: editor,\r\n        imageHistory: imageHistory\r\n    }\r\n}\r\n","import { Reducer } from \"react\";\r\nimport { copyImageData } from \"../../helper/CanvasHelper\";\r\nimport CREATE_NEW_CANVAS from \"../actions/createNewCanvas\";\r\nimport EDIT_CANVAS_SIZE from \"../actions/editCanvasSize\";\r\nimport Vector2Action from \"../actions/types/Vector2Action\";\r\n\r\nconst updateCanvas: Reducer<ImageData, Vector2Action> = (canvas, action) => {\r\n    const size = action.value;\r\n    switch (action.type) {\r\n        case CREATE_NEW_CANVAS:\r\n            const newCanvas = new ImageData(action.value.x, action.value.y);\r\n            newCanvas.data.fill(255);\r\n            return newCanvas;\r\n        case EDIT_CANVAS_SIZE:\r\n            let imageData = new ImageData(size.x, size.y);\r\n            imageData.data.fill(255);\r\n            let minWidth = Math.min(size.x, canvas.width);\r\n            let minHeight = Math.min(size.y, canvas.height);\r\n\r\n            for (let i = 0; i < minHeight; i++) {\r\n                for (let j = 0; j < minWidth; j++) {\r\n                    let dataIndex = (i * size.x + j) * 4;\r\n                    let canvasDataIndex = (i * canvas.width + j) * 4;\r\n                    for (let k = 0; k < 4; k++) {\r\n                        imageData.data[dataIndex + k] = canvas.data[canvasDataIndex + k];\r\n                    }\r\n                }\r\n            }\r\n            return imageData;\r\n        default:\r\n            return copyImageData(canvas);\r\n    }\r\n}\r\n\r\nexport default updateCanvas;\r\n","import { Reducer } from \"react\";\r\nimport { Editor } from \"../../structures/Editor\";\r\nimport SelectedObjectAction from \"../actions/types/SelectedObjectAction\";\r\nimport Vector2Action from \"../actions/types/Vector2Action\";\r\nimport updateCanvas from \"./updateCanvas\";\r\n\r\nconst updateEditor: Reducer<Editor | undefined, SelectedObjectAction | Vector2Action> = (editor, action) => {\r\n    if (editor === undefined) {\r\n        return editor;\r\n    }\r\n    switch (action.type) {\r\n        default:\r\n            return {\r\n                canvas: updateCanvas(editor.canvas, action as Vector2Action),\r\n                selectedObject: editor.selectedObject\r\n            }\r\n    }\r\n}\r\n\r\nexport default updateEditor;","import { Reducer } from \"redux\";\r\nimport { RGBAColor } from \"../../structures/RGBAColor\";\r\nimport { ObjectState } from \"../../viewmodel/ObjectState\";\r\nimport NumberAction from \"../actions/types/NumberAction\";\r\nimport RGBAColorAction from \"../actions/types/RGBAColorAction\";\r\nimport StringAction from \"../actions/types/StringAction\";\r\nimport UPDATE_FILL_COLOR from \"../actions/updateFillColor\";\r\nimport UPDATE_STROKE_COLOR from \"../actions/updateStrokeColor\";\r\nimport UPDATE_STROKE_WIDTH from \"../actions/updateStrokeWidth\";\r\nimport UPDATE_TEXT from \"../actions/updateText\";\r\nimport UPDATE_TEXT_COLOR from \"../actions/updateTextColor\";\r\nimport UPDATE_TEXT_SIZE from \"../actions/updateTextSize\";\r\n\r\nconst updateObjectState: Reducer<ObjectState | undefined, RGBAColorAction | NumberAction | StringAction> =\r\n    (state, action) => {\r\n        if (state === undefined) {\r\n            throw new Error();\r\n        }\r\n        switch (action.type) {\r\n            case UPDATE_FILL_COLOR:\r\n                return {\r\n                    ...state,\r\n                    fillColor: action.value as RGBAColor\r\n                }\r\n            case UPDATE_STROKE_COLOR:\r\n                return {\r\n                    ...state,\r\n                    strokeColor: action.value as RGBAColor\r\n                }\r\n            case UPDATE_STROKE_WIDTH:\r\n                return {\r\n                    ...state,\r\n                    strokeWidth: action.value as number\r\n                }\r\n            case UPDATE_TEXT:\r\n                return {\r\n                    ...state,\r\n                    text: action.value as string\r\n                }\r\n            case UPDATE_TEXT_SIZE:\r\n                return {\r\n                    ...state,\r\n                    textSize: action.value as number\r\n                }\r\n            case UPDATE_TEXT_COLOR:\r\n                return {\r\n                    ...state,\r\n                    textColor: action.value as RGBAColor\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n\r\nexport default updateObjectState;","import { Action, Reducer } from \"redux\";\r\nimport { cutSelectedArea, selectArea } from \"../../helper/CanvasHelper\";\r\nimport { removeSelectedObject, replaceSelectedObject } from \"../../helper/EditorHelper\";\r\nimport { applyFilter } from \"../../helper/FilterHelper\";\r\nimport { pushToHistory, redoHistory, undoHistory } from \"../../helper/HistoryHelper\";\r\nimport { Editor } from \"../../structures/Editor\";\r\nimport { ViewModel } from \"../../viewmodel/ViewModel\";\r\nimport APPLY_FILTER from \"../actions/applyFilter\";\r\nimport CUT_SELECTED_AREA from \"../actions/cutSelectedArea\";\r\nimport PUSH_TO_HISTORY from \"../actions/pushToHistory\";\r\nimport REDO_HISTORY from \"../actions/redoHistory\";\r\nimport REMOVE_SELECTED_OBJECT from \"../actions/removeSelectedObject\";\r\nimport REPLACE_SELECTED_OBJECT from \"../actions/actionReplaceSelectedObject\";\r\nimport SELECT_AREA from \"../actions/selectArea\";\r\nimport SET_EDITOR from \"../actions/setEditor\";\r\nimport EditorAction from \"../actions/types/EditorAction\";\r\nimport FilterAction from \"../actions/types/FilterAction\";\r\nimport ImageDataAction from \"../actions/types/ImageDataAction\";\r\nimport NumberAction from \"../actions/types/NumberAction\";\r\nimport RGBAColorAction from \"../actions/types/RGBAColorAction\";\r\nimport SelectedAreaAction from \"../actions/types/SelectedAreaAction\";\r\nimport SelectedObjectAction from \"../actions/types/SelectedObjectAction\";\r\nimport StringAction from \"../actions/types/StringAction\";\r\nimport ToolTypeAction from \"../actions/types/ToolTypeAction\";\r\nimport Vector2Action from \"../actions/types/Vector2Action\";\r\nimport UNDO_HISTORY from \"../actions/undoHistory\";\r\nimport UPDATE_TOOL from \"../actions/updateTool\";\r\nimport updateEditor from \"./updateEditor\";\r\nimport updateObjectState from \"./updateObjectState\";\r\n\r\nconst reducers: Reducer<ViewModel | undefined,\r\n    EditorAction |\r\n    SelectedObjectAction |\r\n    Vector2Action |\r\n    ToolTypeAction |\r\n    RGBAColorAction |\r\n    NumberAction |\r\n    StringAction |\r\n    Action> =\r\n    (state, action): ViewModel => {\r\n        if (state === undefined) {\r\n            throw new Error();\r\n        }\r\n        const editor = state.editor;\r\n        let newEditor = {\r\n            canvas: editor.canvas,\r\n            selectedObject: editor.selectedObject\r\n        };\r\n        let imageHistory = state.imageHistory;\r\n        switch (action.type) {\r\n            case SET_EDITOR:\r\n                return {\r\n                    ...state,\r\n                    editor: (action as EditorAction).value as Editor\r\n                }\r\n            case UNDO_HISTORY:\r\n                return undoHistory(state);\r\n            case REDO_HISTORY:\r\n                return redoHistory(state);\r\n            case PUSH_TO_HISTORY:\r\n                return {\r\n                    ...state,\r\n                    imageHistory: pushToHistory(imageHistory, (action as ImageDataAction).value),\r\n                }\r\n            case UPDATE_TOOL:\r\n                return {\r\n                    ...state,\r\n                    currentTool: (action as ToolTypeAction).value,\r\n                }\r\n            case APPLY_FILTER:\r\n                let newImageHistory;\r\n                newImageHistory = pushToHistory(imageHistory, newEditor.canvas);\r\n                newEditor = applyFilter(newEditor, (action as FilterAction).value);\r\n                newImageHistory = pushToHistory(imageHistory, newEditor.canvas);\r\n                return {\r\n                    ...state,\r\n                    imageHistory: newImageHistory,\r\n                    editor: newEditor\r\n                }\r\n            case SELECT_AREA:\r\n                return {\r\n                    ...state,\r\n                    editor: selectArea(editor, (action as SelectedAreaAction).value)\r\n                }\r\n            case CUT_SELECTED_AREA:\r\n                return {\r\n                    ...state,\r\n                    editor: cutSelectedArea(editor)\r\n                }\r\n            case REPLACE_SELECTED_OBJECT:\r\n                newEditor = replaceSelectedObject(editor, (action as SelectedObjectAction).value);\r\n                return {\r\n                    ...state,\r\n                    editor: newEditor\r\n                };\r\n            case REMOVE_SELECTED_OBJECT:\r\n                return {\r\n                    ...state,\r\n                    editor: removeSelectedObject(editor)\r\n                };\r\n            default:\r\n                const updatedEditor = updateEditor(state.editor, action as SelectedObjectAction | Vector2Action);\r\n                if (updatedEditor === undefined) {\r\n                    throw new Error();\r\n                }\r\n                const objectState = updateObjectState(state.objectState, (action as RGBAColorAction | NumberAction | StringAction));\r\n                if (objectState === undefined) {\r\n                    throw new Error();\r\n                }\r\n                return {\r\n                    editor: updatedEditor,\r\n                    imageHistory: state.imageHistory,\r\n                    currentTool: state.currentTool,\r\n                    objectState: objectState\r\n                }\r\n        }\r\n    }\r\n\r\nexport default reducers;\r\n","import { createStore } from 'redux';\r\nimport initialViewModel from './initialState';\r\nimport reducers from './reducers/rootReducer';\r\n\r\nconst store = createStore(reducers, initialViewModel);\r\n\r\nexport default store;","import { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nrender();\nexport function render() {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    );\n}\n\nreportWebVitals();\n"],"sourceRoot":""}