{"version":3,"sources":["App.module.css","components/reactivedialog/DialogTitle.tsx","components/reactivedialog/ReactiveDialog.tsx","structures/Type.tsx","components/reactivetextfield/ReactiveTextFieldStyle.tsx","components/reactivetextfield/ReactiveTextField.tsx","components/selectsizepopup/SelectSizeDialogStyle.tsx","components/selectsizepopup/SelectSizeDialog.tsx","helper/ColorHelper.tsx","helper/DrawHelper.tsx","helper/ObjectCreateHelper.tsx","store/actions/removeSelectedObject.tsx","store/actionCreators/removeSelectedObject.tsx","store/actions/selectArea.tsx","store/actionCreators/selectArea.tsx","store/actions/cutSelectedArea.tsx","store/actionCreators/cutSelectedArea.tsx","store/actions/pushToHistory.tsx","store/actionCreators/pushToHistory.tsx","store/actions/actionReplaceSelectedObject.tsx","store/actionCreators/actionReplaceSelectedObject.tsx","store/actions/setEditor.tsx","store/actionCreators/setEditor.tsx","structures/ExportFormat.tsx","helper/CanvasHelper.tsx","helper/EditorHelper.tsx","helper/VectorHelper.tsx","store/actions/updateCanvasViewModel.tsx","store/actionCreators/updateCanvasViewModel.tsx","store/actions/updateText.tsx","store/actionCreators/updateText.tsx","store/actions/updateTool.tsx","components/tool/Tools.tsx","store/actionCreators/updateTool.tsx","components/canvas/CanvasHandler.tsx","components/canvas/Canvas.tsx","objectparams/ObjectParamsStyle.tsx","components/colopicker/TextColorPicker.tsx","store/actions/updateFillColor.tsx","store/actions/updateStrokeColor.tsx","store/actions/updateStrokeWidth.tsx","store/actions/updateTextColor.tsx","store/actions/updateTextSize.tsx","objectparams/ObjectParams.tsx","structures/Filter.tsx","store/actionCreators/updateFillColor.tsx","store/actionCreators/updateStrokeColor.tsx","store/actionCreators/updateStrokeWidth.tsx","store/actionCreators/updateTextSize.tsx","store/actionCreators/updateTextColor.tsx","components/filtermenu/FIltersIcon.tsx","components/filtermenu/FilterMenu.tsx","helper/FilterHelper.tsx","components/brightslider/BrightnessSlider.tsx","components/timeout/Timeout.tsx","components/pasteartdialog/PasteArtDialog.tsx","store/actions/undoHistory.tsx","store/actionCreators/undoHistory.tsx","store/actions/redoHistory.tsx","store/actionCreators/redoHistory.tsx","store/actions/editCanvasSize.tsx","store/actionCreators/editCanvasSize.tsx","store/actions/applyFilter.tsx","store/actionCreators/applyFilter.tsx","store/actions/createNewCanvas.tsx","store/actionCreators/createNewCanvas.tsx","components/exportdialog/ExportDialog.tsx","structures/ImportType.tsx","components/importdialog/ImportDialog.tsx","components/pexelsartdialog/PexelsSearchDialogStyle.tsx","components/pexelsartdialog/PexelsManager.tsx","components/pexelsartdialog/PexelsSearchDialog.tsx","App.tsx","reportWebVitals.ts","store/initialState.tsx","helper/HistoryHelper.tsx","store/reducers/updateCanvas.tsx","store/reducers/updateEditor.tsx","store/reducers/updateObjectState.tsx","store/reducers/rootReducer.tsx","store/store.tsx","index.tsx"],"names":["module","exports","DialogTitle","withStyles","theme","createStyles","root","margin","padding","spacing","closeButton","position","right","top","color","borderRadius","backgroundColor","boxShadow","title","userSelect","msUserSelect","fontFamily","marginLeft","props","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","type","aria-label","onClick","Transition","React","forwardRef","ref","Slide","direction","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","Dialog","background","backdropFilter","WebkitBackdropFilter","borderTop","borderLeft","borderColor","MuiDialog","ReactiveDialog","Types","close","PaperProps","style","paperStyle","TransitionComponent","aria-labelledby","open","isOpen","id","dividers","onScroll","contentStyle","undefined","actions","useStyles","makeStyles","ReactiveTextField","TextField","label","autoComplete","autocomplete","InputProps","inputProps","min","defaultValue","text","onFocus","onChange","e","searchField","SelectSizeDialog","dispatch","useDispatch","useState","setOpen","canApply","setCanApply","x","y","size","handleClose","handleCloseAndCreate","action","value","Button","autoFocus","applyText","target","Math","abs","parseInt","toRGBAColor","hex","r","substr","g","b","a","toHexColor","getRGB","to2dHex","floor","num","getAnalog","drawImageData","context","imageData","canvas","document","createElement","width","height","ctx","getContext","Error","putImageData","drawImage","remove","drawObject","selectedObject","newImageData","canvasSize","Rectangle","drawRectangle","Triangle","triangle","beginPath","moveTo","p0","lineTo","p1","p2","closePath","globalAlpha","fillColor","fillStyle","fill","strokeWidth","lineWidth","strokeColor","strokeStyle","stroke","getImageData","drawTriangle","Circle","circle","radius","arc","PI","drawCircle","Art","art","canvasCtx","image","imageCtx","canvasScaled","max","imageScaled","scale","drawArt","TextObject","rectangle","textColor","canvasTxt","fontSize","textSize","font","align","vAlign","lineHeight","drawText","createRectangle","downStart","moveEnd","objectState","start","end","createArea","Area","REMOVE_SELECTED_OBJECT","removeSelectedObject","SELECT_AREA","selectArea","CUT_SELECTED_AREA","cutSelectedArea","PUSH_TO_HISTORY","pushToHistory","REPLACE_SELECTED_OBJECT","actionReplaceSelectedObject","obj","SET_EDITOR","setEditor","ExportFormat","formatToString","format","JPEG","PNG","copyImageData","ImageData","data","set","Uint8ClampedArray","editor","selectedArea","newCanvas","i","j","dstIndex","srcIndex","k","importImageUrl","url","callback","img","Image","crossOrigin","onload","URL","revokeObjectURL","src","console","log","replaceSelectedObjectWithHistory","newSelectedObject","historyImage","newEditor","replaceSelectedObject","length","vector","sqrt","pow","UPDATE_CANVAS_VIEW_MODEL","updateCanvasViewModel","model","UPDATE_TEXT","updateText","UPDATE_TOOL","ToolType","item","minWidth","alignContent","selectedItem","palette","secondary","light","Tools","onSelected","currentTool","useSelector","state","tool","Paper","List","component","ListItem","button","SvgIcon","viewBox","points","cx","cy","Text","d","onMouseMove","viewModel","canvasViewModel","canvasModel","newCanvasViewModel","isMiddleMouseDown","first","second","clientX","offsetLeft","clientY","offsetTop","tempObject","isCanvasDown","tempPoint","deltaX","deltaY","cursor","objRA","shiftKey","delta","distance","sizeLength","dir","sign","objRCA","newObject","createTriangle","len","createCircle","createText","onCreateObject","setTempPoint","point","setupCursor","pointIndex","map","p","findIndex","scaledPoints","pointInTriangle","dX","dY","dX21","dY12","D","s","t","Canvas","shallowEqual","canvasPosition","drawProps","textObject","canvasContainer","useRef","canvasElement","useEffect","current","clientWidth","clientHeight","tempCanvasObject","drawBorder","objRTCTA","renderCanvas","wheelListener","newScale","window","addEventListener","mouseDownListener","body","middleMouseStart","mouseMoveListener","marginTop","mouseUpListener","removeEventListener","listener","ctrlKey","code","historyCanvas","textArea","focus","resize","border","outline","onMouseDown","onMouseUp","createGradient","grad","createLinearGradient","addColorStop","setLineDash","normY","positions","forEach","TextColorPicker","defaultColor","setColor","displayColorPicker","setDisplayColorPicker","handleChange","result","alpha","rgb","newColor","getElementById","zIndex","bottom","left","transform","disableAlpha","onChangeComplete","oninput","UPDATE_FILL_COLOR","UPDATE_STROKE_COLOR","UPDATE_STROKE_WIDTH","UPDATE_TEXT_COLOR","UPDATE_TEXT_SIZE","ObjectParams","Filter","updateFillColor","FilterIcon","fontWeight","paper","FilterMenu","anchorRef","event","contains","handleListKeyDown","key","preventDefault","prevOpen","edge","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","onSelect","Grey","Red","Green","Blue","Brightness","Blur","applyColorLevelFilter","dst","colorLevels","dataIndex","fab","slider","BrightnessSlider","onApply","setValue","Slider","step","valueLabelDisplay","newValue","Fab","useTimeout","isTimerStarted","setTimerStarted","ms","setTimeout","grey","PasteArtDialog","onSaveSize","onChangeSize","UNDO_HISTORY","undoHistory","REDO_HISTORY","redoHistory","EDIT_CANVAS_SIZE","editCanvasSize","APPLY_FILTER","applyFilter","filter","CREATE_NEW_CANVAS","createNewCanvas","quality_label","radioGroup","flexDirection","radio","ExportDialog","setFormat","quality","setQuality","FormControl","FormLabel","RadioGroup","aria-orientation","name","FormControlLabel","control","Radio","ImportType","ImportDialog","handleClickOpenWithAction","STORAGE","ListItemIcon","ListItemText","primary","PEXELS","WEB_CAMERA","searchContainer","display","textAlign","searchButtonWrapper","photoLineContainer","verticalAlign","searchResultsWrapper","error","photo","client","createClient","handleQuery","response","onQueryResult","onError","photos","PexelsSearchDialog","isRateLimitExceeded","setRateLimitExceeded","isErrorShown","setErrorShown","page","setPage","queryText","setQueryText","loadedPhotos","setLoadedPhotos","timeout","handleSearch","onProgress","curated","query","per_page","locale","then","search","concat","handleNewSearch","handleImageClick","original","maxWidth","div","currentTarget","offsetHeight","scrollTop","scrollHeight","htmlColor","Alert","severity","index","getHorizontalPosition","medium","alt","photographer","startBlockIndex","photo1","photo2","photo3","sortedIndices","newIndex","round","createMuiTheme","main","purple","red","flexGrow","menuButton","marginRight","App","isBrightSliderShown","setBrightSliderShown","tempEditor","setTempEditor","isPasteArtDialogOpen","setPasteArtDialogOpen","isPexelsArtDialogOpen","setPexelsArtDialogOpen","pasteArt","setPasteArt","styles","ThemeProvider","Box","AppBar","Toolbar","input","click","onchange","inputElement","files","file","createObjectURL","importObject","formatString","toBlob","blob","Blob","link","href","setAttribute","appendChild","exportObject","isPushToHistory","temp","brightEditor","brightnessFactor","applyBrightnessFilter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultEditor","initialViewModel","imageHistory","history","currentHistoryPosition","innerWidth","innerHeight","newHistory","flatMap","pop","push","updateCanvas","minHeight","canvasDataIndex","updateEditor","updateObjectState","reducers","newImageHistory","mean","applyGreyFilter","updatedEditor","store","createStore","render","ReactDOM"],"mappings":"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","file":"static/js/main.195604bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3B_72\",\"AppBar\":\"App_AppBar__2yUSo\"};","\r\nimport React from \"react\";\r\nimport { createStyles, IconButton, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst titleStyles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            margin: 0,\r\n            padding: theme.spacing(2)\r\n        },\r\n        closeButton: {\r\n            position: 'absolute',\r\n            right: theme.spacing(1),\r\n            top: theme.spacing(1),\r\n            color: \"#FFFFFF8a\",\r\n            borderRadius: \"50%\",\r\n            backgroundColor: \"#cfcfcf21\",\r\n            boxShadow: \"4px 4px 16px #55555521, -4px -4px 16px #ffffff21\"\r\n        },\r\n        title: {\r\n            userSelect: \"none\",\r\n            msUserSelect: \"none\",\r\n            fontFamily: \"cursive\",\r\n            color: \"#FFFFFFd0\",\r\n            marginLeft: theme.spacing(2)\r\n        }\r\n    });\r\n\r\nexport interface DialogTitleProps extends WithStyles<typeof titleStyles> {\r\n    id: string;\r\n    children: React.ReactNode;\r\n    onClose: () => void;\r\n}\r\n\r\nconst DialogTitle = withStyles(titleStyles)((props: DialogTitleProps) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography className={classes.title} variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton type=\"submit\" aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nexport default DialogTitle;\r\n","import React from \"react\";\r\nimport { Slide, Theme, withStyles } from \"@material-ui/core\";\r\nimport MuiDialog from '@material-ui/core/Dialog';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport { TransitionProps } from \"@material-ui/core/transitions/transition\";\r\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\r\nimport DialogTitle from \"./DialogTitle\";\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n    ref: React.Ref<unknown>,\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme: Theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nconst Dialog = withStyles((theme: Theme) => ({\r\n    root: {\r\n        \"& .MuiDialog-paper\": {\r\n            background: \"#cfcfcf33\",\r\n            boxShadow: \"0 8px 32px 0 rgba( 255, 255, 255, 0.2 )\",\r\n            backdropFilter: \"blur(10.0px)\",\r\n            WebkitBackdropFilter: \"blur( 10.0px )\",\r\n            borderRadius: \"32px\",\r\n            borderTop: \"1px solid rgba( 255, 255, 255, 0.18 )\",\r\n            borderLeft: \"1px solid rgba( 255, 255, 255, 0.18 )\"\r\n        },\r\n        '& label': {\r\n            color: \"#FFFFFF8a\"\r\n        },\r\n        '& label.Mui-focused': {\r\n            color: \"#62ebff\"\r\n        },\r\n        '& .MuiInputBase-root': {\r\n            color: \"white\"\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            backgroundColor: \"#cfcfcf21\",\r\n            boxShadow: \"4px 4px 16px #55555521, -4px -4px 16px #ffffff21\",\r\n            '& fieldset': {\r\n                borderColor: \"transparent\"\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: \"transparent\",\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: \"#62ebff42\"\r\n            }\r\n        }\r\n    },\r\n}))(MuiDialog);\r\n\r\ninterface ReactiveDialogProps {\r\n    isOpen: boolean,\r\n    children: React.ReactNode,\r\n    actions?: () => JSX.Element,\r\n    paperStyle?: CSSProperties,\r\n    contentStyle?: CSSProperties,\r\n    title: string,\r\n    onScroll?: (e: React.UIEvent<HTMLDivElement, UIEvent>) => void,\r\n    onClose: () => void\r\n}\r\n\r\nfunction ReactiveDialog(props: ReactiveDialogProps) {\r\n    const close = () => {\r\n        props.onClose();\r\n    }\r\n    return (\r\n        <Dialog\r\n            PaperProps={{\r\n                style: {\r\n                    ...props.paperStyle,\r\n                }\r\n            }}\r\n            TransitionComponent={Transition}\r\n            onClose={() => close()}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={props.isOpen}>\r\n            <DialogTitle id=\"customized-dialog-title\"\r\n                onClose={() => close()}>\r\n                {props.title}\r\n            </DialogTitle>\r\n            <DialogContent dividers\r\n                onScroll={props.onScroll}\r\n                style={props.contentStyle}>\r\n                {props.children}\r\n            </DialogContent>\r\n            {props.actions !== undefined && <DialogActions>\r\n                {props.actions !== undefined && props.actions()}\r\n            </DialogActions>}\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default ReactiveDialog;\r\n","export enum Types {\n    Art, Rectangle, Triangle, Circle, TextObject, Area\n}\n","import { createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            '& .MuiOutlinedInput-root': {\r\n                borderRadius: \"24px\",\r\n            }\r\n        }\r\n    }));\r\n\r\nexport default useStyles;","import React, { ChangeEvent } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport useStyles from \"./ReactiveTextFieldStyle\";\r\n\r\nexport interface ReactiveTextFieldProps {\r\n    id?: string;\r\n    className?: string;\r\n    label: string;\r\n    text?: string;\r\n    min?: string;\r\n    autocomplete?: string;\r\n    type: string,\r\n    onChange(e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void;\r\n    onClick?: Function;\r\n}\r\n\r\nconst ReactiveTextField = (props: ReactiveTextFieldProps) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <TextField\r\n            classes={{ root: `${classes.root} ${props.className}` }}\r\n            label={props.label}\r\n            id={props.id === undefined ? \"outlined-textfield\" : props.id}\r\n            variant=\"outlined\"\r\n            autoComplete={props.autocomplete}\r\n            InputProps={{\r\n                inputProps: { min: props.min }\r\n            }}\r\n            type={props.type}\r\n            defaultValue={props.text}\r\n            onFocus={() => {\r\n                if (props.onClick !== undefined) {\r\n                    props.onClick();\r\n                }\r\n            }}\r\n            onClick={() => {\r\n                if (props.onClick !== undefined) {\r\n                    props.onClick();\r\n                }\r\n            }}\r\n            onChange={(e) => props.onChange(e)} />\r\n    );\r\n};\r\n\r\n\r\nexport default ReactiveTextField;\r\n","import { createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        searchField: {\r\n            margin: \"0 8px\"\r\n        },\r\n    }));\r\n\r\nexport default useStyles;","import React, { useState } from 'react';\nimport './SelectSizeDialog.css';\nimport '../../index.css';\nimport { Vector2 } from '../../structures/Vector2';\nimport { Button, IconButton } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport Vector2Action from '../../store/actions/types/Vector2Action';\nimport ReactiveDialog from '../reactivedialog/ReactiveDialog';\nimport ReactiveTextField from '../reactivetextfield/ReactiveTextField';\nimport useStyles from './SelectSizeDialogStyle';\n\ninterface SelectSizeDialogProps {\n    applyText: string,\n    action: Vector2Action,\n    children: JSX.Element\n}\n\nexport default function SelectSizeDialog(props: SelectSizeDialogProps) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [open, setOpen] = useState(false);\n    const [canApply, setCanApply] = useState(true);\n    const [size] = useState<Vector2>({ x: 800, y: 600 });\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleCloseAndCreate = () => {\n        if (!canApply) {\n            return;\n        }\n        handleClose();\n        props.action.value = size;\n        dispatch(props.action);\n    };\n\n    return (\n        <div>\n            <IconButton\n                color=\"inherit\"\n                onClick={handleClickOpen}>\n                {props.children}\n            </IconButton>\n            <ReactiveDialog\n                isOpen={open}\n                title=\"Выберите размер\"\n                onClose={() => handleClose()}\n                actions={() => {\n                    return (\n                        <Button autoFocus onClick={handleCloseAndCreate} color=\"secondary\">\n                            {props.applyText}\n                        </Button>\n                    )\n                }}>\n\n                <ReactiveTextField\n                    className={classes.searchField}\n                    text={size.x + \"\"}\n                    type=\"number\"\n                    label=\"Ширина\"\n                    min=\"0\"\n                    onChange={(e) => {\n                        setCanApply(e.target.value !== \"\");\n                        if (e.target.value !== \"\")\n                            size.x = Math.abs(parseInt(e.target.value))\n                    }} />\n\n                <ReactiveTextField\n                    text={size.y + \"\"}\n                    type=\"number\"\n                    label=\"Высота\"\n                    min=\"0\"\n                    onChange={(e) => {\n                        setCanApply(e.target.value !== \"\");\n                        if (e.target.value !== \"\")\n                            size.y = Math.abs(parseInt(e.target.value))\n                    }} />\n            </ReactiveDialog>\n        </div >\n    );\n}\n","import { RGBAColor } from \"../structures/RGBAColor\"\r\n\r\nexport function toRGBAColor(hex: string): RGBAColor {\r\n    const color = {\r\n        r: parseInt(hex.substr(1, 2), 16),\r\n        g: parseInt(hex.substr(3, 2), 16),\r\n        b: parseInt(hex.substr(5, 2), 16),\r\n        a: parseInt(hex.substr(7, 2), 16) / 255,\r\n    };\r\n    return color;\r\n}\r\n\r\nexport function toHexColor(color: RGBAColor): string {\r\n    return getRGB(color)\r\n        + to2dHex(Math.floor(color.a * 255))\r\n}\r\n\r\nfunction to2dHex(num: number): string {\r\n    return getAnalog(Math.floor(num / 16)) + getAnalog(num % 16);\r\n}\r\n\r\nconst hex = [\r\n    '0', '1', '2', '3',\r\n    '4', '5', '6', '7',\r\n    '8', '9', 'A', 'B',\r\n    'C', 'D', 'E', 'F']\r\nfunction getAnalog(num: number) {\r\n    return hex[num];\r\n}\r\n\r\nexport function getRGB(color: RGBAColor): string {\r\n    return '#' + to2dHex(color.r)\r\n        + to2dHex(color.g)\r\n        + to2dHex(color.b)\r\n}\r\n","import { Art } from \"../structures/Art\";\r\nimport { Circle } from \"../structures/Circle\";\r\nimport { Rectangle } from \"../structures/Rectangle\";\r\nimport { TextObject } from \"../structures/TextObject\";\r\nimport { Triangle } from \"../structures/Triangle\";\r\nimport { Types } from \"../structures/Type\";\r\nimport { Vector2 } from \"../structures/Vector2\";\r\nimport { getRGB } from \"./ColorHelper\";\r\nimport canvasTxt from 'canvas-txt';\r\n\r\nexport function drawImageData(context: CanvasRenderingContext2D,\r\n    imageData: ImageData) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = imageData.width;\r\n    canvas.height = imageData.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (ctx === null) {\r\n        throw new Error();\r\n    }\r\n    ctx.putImageData(imageData, 0, 0);\r\n    context.drawImage(canvas, 0, 0);\r\n    canvas.remove();\r\n}\r\n\r\nexport function drawObject(\r\n    context: CanvasRenderingContext2D,\r\n    size: Vector2,\r\n    selectedObject: TextObject | Rectangle | Triangle | Circle | Art\r\n) {\r\n    let newImageData: ImageData | undefined;\r\n    const canvasSize = {\r\n        x: size.x,\r\n        y: size.y\r\n    }\r\n    switch (selectedObject.type) {\r\n        case Types.Rectangle:\r\n            newImageData = drawRectangle(context, canvasSize, selectedObject as Rectangle);\r\n            break;\r\n        case Types.Triangle:\r\n            newImageData = drawTriangle(context, canvasSize, selectedObject as Triangle);\r\n            break;\r\n        case Types.Circle:\r\n            newImageData = drawCircle(context, canvasSize, selectedObject as Circle);\r\n            break;\r\n        case Types.Art:\r\n            newImageData = drawArt(context, canvasSize, selectedObject as Art);\r\n            break;\r\n        case Types.TextObject:\r\n            newImageData = drawText(context, canvasSize, selectedObject as TextObject);\r\n            break;\r\n    };\r\n    context.globalAlpha = 1;\r\n    if (newImageData === undefined) {\r\n        throw new Error();\r\n    }\r\n    return newImageData;\r\n}\r\n\r\nfunction drawRectangle(ctx: CanvasRenderingContext2D,\r\n    canvasSize: Vector2,\r\n    rectangle: Rectangle\r\n): ImageData | undefined {\r\n    ctx.beginPath();\r\n    ctx.moveTo(rectangle.position.x, rectangle.position.y);\r\n    ctx.lineTo(rectangle.position.x + rectangle.size.x, rectangle.position.y);\r\n    ctx.lineTo(rectangle.position.x + rectangle.size.x, rectangle.position.y + rectangle.size.y);\r\n    ctx.lineTo(rectangle.position.x, rectangle.position.y + rectangle.size.y);\r\n    ctx.closePath();\r\n\r\n    ctx.globalAlpha = rectangle.props.fillColor.a;\r\n    ctx.fillStyle = getRGB(rectangle.props.fillColor);\r\n    ctx.fill();\r\n\r\n    if (rectangle.props.strokeWidth > 0) {\r\n        ctx.lineWidth = rectangle.props.strokeWidth;\r\n        ctx.globalAlpha = rectangle.props.strokeColor.a;\r\n        ctx.strokeStyle = getRGB(rectangle.props.strokeColor);\r\n        ctx.stroke();\r\n    }\r\n    return ctx.getImageData(0, 0, canvasSize.x, canvasSize.y);\r\n}\r\n\r\nfunction drawTriangle(ctx: CanvasRenderingContext2D,\r\n    size: Vector2,\r\n    triangle: Triangle\r\n): ImageData | undefined {\r\n    ctx.beginPath();\r\n    ctx.moveTo(triangle.p0.x, triangle.p0.y);\r\n    ctx.lineTo(triangle.p1.x, triangle.p1.y);\r\n    ctx.lineTo(triangle.p2.x, triangle.p2.y);\r\n    ctx.closePath();\r\n\r\n    ctx.globalAlpha = triangle.props.fillColor.a;\r\n    ctx.fillStyle = getRGB(triangle.props.fillColor);\r\n    ctx.fill();\r\n\r\n    if (triangle.props.strokeWidth > 0) {\r\n        ctx.lineWidth = triangle.props.strokeWidth;\r\n        ctx.globalAlpha = triangle.props.strokeColor.a;\r\n        ctx.strokeStyle = getRGB(triangle.props.strokeColor);\r\n        ctx.stroke();\r\n    }\r\n    return ctx.getImageData(0, 0, size.x, size.y);\r\n}\r\n\r\nfunction drawCircle(ctx: CanvasRenderingContext2D,\r\n    size: Vector2,\r\n    circle: Circle\r\n): ImageData | undefined {\r\n    ctx.beginPath();\r\n    ctx.moveTo(circle.position.x + circle.radius, circle.position.y);\r\n    ctx.arc(circle.position.x, circle.position.y, circle.radius, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n\r\n    ctx.globalAlpha = circle.props.fillColor.a;\r\n    ctx.fillStyle = getRGB(circle.props.fillColor);\r\n    ctx.fill();\r\n\r\n    if (circle.props.strokeWidth > 0) {\r\n        ctx.lineWidth = circle.props.strokeWidth;\r\n        ctx.globalAlpha = circle.props.strokeColor.a;\r\n        ctx.strokeStyle = getRGB(circle.props.strokeColor);\r\n        ctx.stroke();\r\n    }\r\n    return ctx.getImageData(0, 0, size.x, size.y);\r\n}\r\n\r\nfunction drawArt(ctx: CanvasRenderingContext2D,\r\n    size: Vector2, art: Art) {\r\n    const canvasCtx = document.createElement(\"canvas\");\r\n    canvasCtx.width = art.image.width;\r\n    canvasCtx.height = art.image.height;\r\n    const imageCtx = canvasCtx.getContext(\"2d\");\r\n    if (imageCtx === null) {\r\n        throw new Error();\r\n    }\r\n    imageCtx.putImageData(art.image, 0, 0);\r\n    const canvasScaled = document.createElement(\"canvas\");\r\n    canvasScaled.width = Math.max(1, art.size.x);\r\n    canvasScaled.height = Math.max(1, art.size.y);\r\n    const imageScaled = canvasScaled.getContext(\"2d\");\r\n    if (imageScaled === null) {\r\n        throw new Error();\r\n    }\r\n    imageScaled.scale(art.size.x / art.image.width, art.size.y / art.image.height);\r\n    imageScaled.drawImage(canvasCtx, 0, 0);\r\n    ctx.drawImage(canvasScaled, art.position.x, art.position.y);\r\n    return ctx.getImageData(0, 0, size.x, size.y);\r\n}\r\n\r\nfunction drawText(ctx: CanvasRenderingContext2D,\r\n    size: Vector2,\r\n    text: TextObject) {\r\n    drawRectangle(ctx, size, text.rectangle);\r\n    //ctx.globalAlpha = text.textColor.a;\r\n    ctx.fillStyle = getRGB(text.textColor);\r\n\r\n    canvasTxt.fontSize = text.textSize;\r\n    canvasTxt.font = \"monospace\";\r\n    canvasTxt.align = \"left\";\r\n    canvasTxt.vAlign = \"top\";\r\n    canvasTxt.lineHeight = text.textSize * 1.15;\r\n    canvasTxt.drawText(ctx, text.text,\r\n        text.rectangle.position.x + 2, text.rectangle.position.y,\r\n        text.rectangle.size.x, text.rectangle.size.y);\r\n\r\n    return ctx.getImageData(0, 0, size.x, size.y);\r\n}\r\n","import { Vector2 } from '../structures/Vector2';\r\nimport { Rectangle } from '../structures/Rectangle';\r\nimport { Triangle } from '../structures/Triangle';\r\nimport { Circle } from '../structures/Circle';\r\nimport { SelectedArea } from '../structures/SelectedArea';\r\nimport { Types } from '../structures/Type';\r\nimport { TextObject } from '../structures/TextObject';\r\nimport { ObjectState } from '../viewmodel/ObjectState';\r\n\r\nexport function createRectangle(downStart: Vector2, moveEnd: Vector2, objectState: ObjectState): Rectangle {\r\n    const start: Vector2 = {\r\n        x: Math.min(downStart.x, moveEnd.x),\r\n        y: Math.min(downStart.y, moveEnd.y)\r\n    };\r\n    const end = {\r\n        x: Math.max(downStart.x, moveEnd.x),\r\n        y: Math.max(downStart.y, moveEnd.y)\r\n    };\r\n    return {\r\n        type: Types.Rectangle,\r\n        position: start,\r\n        size: {\r\n            x: end.x - start.x,\r\n            y: end.y - start.y\r\n        },\r\n        props: {\r\n            fillColor: objectState.fillColor,\r\n            strokeColor: objectState.strokeColor,\r\n            strokeWidth: objectState.strokeWidth\r\n        }\r\n    }\r\n}\r\n\r\nexport function createTriangle(downStart: Vector2, moveEnd: Vector2, objectState: ObjectState): Triangle {\r\n    const start: Vector2 = {\r\n        x: Math.min(downStart.x, moveEnd.x),\r\n        y: downStart.y\r\n    };\r\n    const end = {\r\n        x: Math.max(downStart.x, moveEnd.x),\r\n        y: moveEnd.y\r\n    };\r\n    return {\r\n        type: Types.Triangle,\r\n        p0: {\r\n            x: start.x,\r\n            y: start.y,\r\n        },\r\n        p1: {\r\n            x: end.x,\r\n            y: start.y,\r\n        },\r\n        p2: {\r\n            x: start.x / 2 + end.x / 2,\r\n            y: end.y,\r\n        },\r\n        props: {\r\n            fillColor: objectState.fillColor,\r\n            strokeColor: objectState.strokeColor,\r\n            strokeWidth: objectState.strokeWidth\r\n        }\r\n    }\r\n}\r\n\r\nexport function createCircle(downStart: Vector2, moveEnd: Vector2, objectState: ObjectState): Circle {\r\n    const len = Math.sqrt(Math.pow(moveEnd.x - downStart.x, 2) + Math.pow(moveEnd.y - downStart.y, 2));\r\n    return {\r\n        type: Types.Circle,\r\n        position: {\r\n            x: downStart.x,\r\n            y: downStart.y\r\n        },\r\n        radius: len,\r\n        props: {\r\n            fillColor: objectState.fillColor,\r\n            strokeColor: objectState.strokeColor,\r\n            strokeWidth: objectState.strokeWidth\r\n        }\r\n    }\r\n}\r\n\r\nexport function createText(downStart: Vector2, moveEnd: Vector2, objectState: ObjectState): TextObject {\r\n    return {\r\n        type: Types.TextObject,\r\n        rectangle: createRectangle(downStart, moveEnd, objectState),\r\n        text: objectState.text,\r\n        textSize: objectState.textSize,\r\n        textColor: objectState.textColor\r\n    }\r\n}\r\n\r\nexport function createArea(downStart: Vector2, moveEnd: Vector2, objectState: ObjectState): SelectedArea {\r\n    const start: Vector2 = {\r\n        x: Math.min(downStart.x, moveEnd.x),\r\n        y: Math.min(downStart.y, moveEnd.y)\r\n    };\r\n    const end = {\r\n        x: Math.max(downStart.x, moveEnd.x),\r\n        y: Math.max(downStart.y, moveEnd.y)\r\n    };\r\n    return {\r\n        type: Types.Area,\r\n        position: start,\r\n        size: {\r\n            x: end.x - start.x,\r\n            y: end.y - start.y\r\n        },\r\n    }\r\n}","const REMOVE_SELECTED_OBJECT = \"REMOVE_SELECTED_OBJECT\";\r\nexport default REMOVE_SELECTED_OBJECT;\r\n","import { Action } from \"redux\";\r\nimport REMOVE_SELECTED_OBJECT from \"../actions/removeSelectedObject\";\r\n\r\nexport default function removeSelectedObject(): Action {\r\n    return {\r\n        type: REMOVE_SELECTED_OBJECT\r\n    };\r\n}","const SELECT_AREA = \"SELECT_AREA\";\r\nexport default SELECT_AREA;\r\n","import { SelectedArea } from \"../../structures/SelectedArea\";\r\nimport SELECT_AREA from \"../actions/selectArea\";\r\nimport SelectedAreaAction from \"../actions/types/SelectedAreaAction\";\r\n\r\nfunction selectArea(value: SelectedArea): SelectedAreaAction {\r\n    return {\r\n        type: SELECT_AREA,\r\n        value: value\r\n    };\r\n}\r\n\r\nexport default selectArea;","const CUT_SELECTED_AREA = \"CUT_SELECTED_AREA\";\r\nexport default CUT_SELECTED_AREA;\r\n","import { Action } from \"redux\";\r\nimport CUT_SELECTED_AREA from \"../actions/cutSelectedArea\";\r\n\r\nfunction cutSelectedArea(): Action {\r\n    return {\r\n        type: CUT_SELECTED_AREA,\r\n    };\r\n}\r\n\r\nexport default cutSelectedArea;","const PUSH_TO_HISTORY = \"PUSH_TO_HISTORY\";\r\nexport default PUSH_TO_HISTORY;","import PUSH_TO_HISTORY from \"../actions/pushToHistory\";\r\nimport ImageDataAction from \"../actions/types/ImageDataAction\";\r\n\r\nfunction pushToHistory(imageData: ImageData): ImageDataAction {\r\n    return {\r\n        type: PUSH_TO_HISTORY,\r\n        value: imageData\r\n    };\r\n}\r\n\r\nexport default pushToHistory;","const REPLACE_SELECTED_OBJECT = \"REPLACE_SELECTED_OBJECT\";\r\nexport default REPLACE_SELECTED_OBJECT;\r\n","import { Art } from \"../../structures/Art\";\r\nimport { Circle } from \"../../structures/Circle\";\r\nimport { Rectangle } from \"../../structures/Rectangle\";\r\nimport { TextObject } from \"../../structures/TextObject\";\r\nimport { Triangle } from \"../../structures/Triangle\";\r\nimport REPLACE_SELECTED_OBJECT from \"../actions/actionReplaceSelectedObject\";\r\nimport SelectedObjectAction from \"../actions/types/SelectedObjectAction\";\r\n\r\nfunction actionReplaceSelectedObject(obj: TextObject | Rectangle | Triangle | Circle | Art | null): SelectedObjectAction {\r\n    return {\r\n        type: REPLACE_SELECTED_OBJECT,\r\n        value: obj\r\n    };\r\n}\r\n\r\nexport default actionReplaceSelectedObject;\r\n","const SET_EDITOR = \"SET_EDITOR\";\r\nexport default SET_EDITOR;\r\n","import { Editor } from \"../../structures/Editor\";\r\nimport SET_EDITOR from \"../actions/setEditor\";\r\nimport EditorAction from \"../actions/types/EditorAction\";\r\n\r\nfunction setEditor(value: Editor): EditorAction {\r\n    return {\r\n        type: SET_EDITOR,\r\n        value: value\r\n    };\r\n}\r\n\r\nexport default setEditor;","export enum ExportFormat {\r\n    JPEG, PNG\r\n}\r\n\r\nexport function formatToString(format: ExportFormat): string {\r\n    switch (format) {\r\n        case ExportFormat.JPEG:\r\n            return \"jpeg\";\r\n        case ExportFormat.PNG:\r\n            return \"png\";\r\n        default:\r\n            return \"unknown\";\r\n    }\r\n}\r\n","import { Art } from '../structures/Art';\nimport { Editor } from '../structures/Editor'\nimport { ExportFormat, formatToString } from '../structures/ExportFormat';\nimport { SelectedArea } from '../structures/SelectedArea';\nimport { Types } from '../structures/Type';\nimport { Vector2 } from '../structures/Vector2'\n\nexport function copyImageData(imageData: ImageData) {\n\tconst newImageData: ImageData = new ImageData(\n\t\timageData.width,\n\t\timageData.height\n\t);\n\tnewImageData.data.set(new Uint8ClampedArray(imageData.data));\n\treturn newImageData;\n}\n\nexport function createNewCanvas(editor: Editor, size: Vector2): Editor {\n\tconst newCanvas = new ImageData(size.x, size.y);\n\tnewCanvas.data.fill(255);\n\tconst newEditor: Editor = {\n\t\t...editor,\n\t\tselectedObject: null,\n\t\tcanvas: newCanvas,\n\t};\n\treturn newEditor;\n}\n\nexport function editCanvasSize(editor: Editor, size: Vector2): Editor {\n\tlet imageData = new ImageData(size.x, size.y);\n\timageData.data.fill(255);\n\tlet minWidth = Math.min(size.x, editor.canvas.width);\n\tlet minHeight = Math.min(size.y, editor.canvas.height);\n\n\tfor (let i = 0; i < minHeight; i++) {\n\t\tfor (let j = 0; j < minWidth; j++) {\n\t\t\tlet dataIndex = (i * size.x + j) * 4;\n\t\t\tlet canvasDataIndex = (i * editor.canvas.width + j) * 4;\n\t\t\tfor (let k = 0; k < 4; k++) {\n\t\t\t\timageData.data[dataIndex + k] = editor.canvas.data[canvasDataIndex + k];\n\t\t\t}\n\t\t}\n\t}\n\tconst newEditor: Editor = {\n\t\t...editor,\n\t\tcanvas: imageData,\n\t};\n\treturn newEditor;\n}\n\nexport function cutSelectedArea(editor: Editor) {\n\tvar newCanvas = copyImageData((editor.selectedObject as Art).image);\n\tconst newEditor: Editor = {\n\t\tcanvas: newCanvas,\n\t\tselectedObject: null,\n\t};\n\treturn newEditor;\n}\n\nexport function selectArea(editor: Editor, selectedArea: SelectedArea): Editor {\n\tlet art: Art = {\n\t\ttype: Types.Art,\n\t\timage: new ImageData(selectedArea.size.x, selectedArea.size.y),\n\t\tposition: selectedArea.position,\n\t\tsize: selectedArea.size,\n\t};\n\tconst newCanvas = copyImageData(editor.canvas);\n\tfor (let i = 0; i < art.size.y; i++) {\n\t\tfor (let j = 0; j < art.size.x; j++) {\n\t\t\tlet dstIndex = (i * art.size.x + j) * 4;\n\t\t\tlet srcIndex =\n\t\t\t\t((i + art.position.y) * newCanvas.width + j + art.position.x) * 4;\n\t\t\tfor (let k = 0; k < 4; k++) {\n\t\t\t\tart.image.data[dstIndex + k] = editor.canvas.data[srcIndex + k];\n\t\t\t}\n\t\t\tnewCanvas.data[srcIndex + 3] = 0;\n\t\t}\n\t}\n\tconst newEditor: Editor = {\n\t\t...editor,\n\t\tselectedObject: art,\n\t\tcanvas: newCanvas,\n\t};\n\treturn newEditor;\n}\n\nexport function importImageUrl(url: string, callback: (art: Art) => void) {\n\tconst img = new Image();\n\timg.crossOrigin = \"anonymous\"\n\n\timg.onload = function () {\n\t\tURL.revokeObjectURL(img.src);\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tcanvas.width = img.width;\n\t\tcanvas.height = img.height;\n\t\tconst ctx = canvas.getContext(\"2d\");\n\t\tif (ctx !== null) {\n\t\t\tctx.drawImage(img, 0, 0);\n\t\t\tconsole.log(img);\n\t\t\tconst art: Art = {\n\t\t\t\ttype: Types.Art,\n\t\t\t\timage: ctx.getImageData(0, 0, img.width, img.height),\n\t\t\t\tposition: {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0\n\t\t\t\t},\n\t\t\t\tsize: {\n\t\t\t\t\tx: img.width,\n\t\t\t\t\ty: img.height\n\t\t\t\t}\n\t\t\t}\n\t\t\tcallback(art);\n\t\t}\n\t\tcanvas.remove();\n\t};\n\timg.src = url;\n}\n\nexport function importObject(callback: (art: Art) => void): void {\n\tif (document !== null) {\n\t\tconst input = document.createElement(\"input\") as HTMLInputElement;\n\t\tinput.type = \"file\";\n\t\tinput.click();\n\t\tif (input !== null) {\n\t\t\tinput.onchange = function (e: Event) {\n\t\t\t\tconst inputElement = e.target as HTMLInputElement;\n\t\t\t\tif (inputElement.files != null) {\n\t\t\t\t\tvar file = inputElement.files[0];\n\t\t\t\t\tconst url = URL.createObjectURL(file);\n\t\t\t\t\timportImageUrl(url, callback);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport function exportObject(imageData: ImageData, format: ExportFormat, quality: number) {\n\tconst formatString = formatToString(format);\n\tvar canvas = document.createElement(\"canvas\");\n\tcanvas.width = imageData.width;\n\tcanvas.height = imageData.height;\n\tif (canvas == null) {\n\t\treturn;\n\t}\n\tconst ctx = canvas.getContext(\"2d\");\n\tif (ctx == null) {\n\t\treturn;\n\t}\n\tctx.putImageData(imageData, 0, 0);\n\tcanvas.toBlob(\n\t\tfunction (blob) {\n\t\t\tif (blob == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst url = window.URL.createObjectURL(new Blob([blob]));\n\t\t\tconst link = document.createElement(\"a\");\n\t\t\tlink.href = url;\n\t\t\tlink.setAttribute(\"download\", `image.${formatString}`);\n\t\t\tdocument.body.appendChild(link);\n\t\t\tlink.click();\n\t\t\tlink.remove();\n\t\t\tcanvas.remove();\n\t\t},\n\t\t`image/${formatString}`,\n\t\tquality / 100\n\t);\n}\n","import pushToHistory from \"../store/actionCreators/pushToHistory\";\r\nimport setEditor from \"../store/actionCreators/setEditor\";\r\nimport { Art } from \"../structures/Art\";\r\nimport { Circle } from \"../structures/Circle\";\r\nimport { Editor } from \"../structures/Editor\";\r\nimport { Rectangle } from \"../structures/Rectangle\";\r\nimport { TextObject } from \"../structures/TextObject\";\r\nimport { Triangle } from \"../structures/Triangle\";\r\nimport { copyImageData } from \"./CanvasHelper\";\r\nimport { drawObject } from \"./DrawHelper\";\r\n\r\nexport function replaceSelectedObjectWithHistory(\r\n    dispatch: Function,\r\n    editor: Editor,\r\n    newSelectedObject: Rectangle | Triangle | Circle | TextObject | Art | null,\r\n    historyImage: ImageData | null = null) {\r\n        const newEditor = replaceSelectedObject(editor, newSelectedObject);\r\n        if (historyImage == null) {\r\n            dispatch(pushToHistory(newEditor.canvas));\r\n        } else {\r\n            dispatch(pushToHistory(historyImage));\r\n        }\r\n        dispatch(setEditor(newEditor));\r\n}\r\n\r\nexport function replaceSelectedObject(\r\n    editor: Editor,\r\n    newSelectedObject: Rectangle | Triangle | Circle | TextObject | Art | null\r\n) {\r\n    let newEditor: Editor = {\r\n        ...editor,\r\n        selectedObject: newSelectedObject,\r\n    };\r\n    if (editor.selectedObject != null) {\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = editor.canvas.width;\r\n        canvas.height = editor.canvas.height;\r\n        if (canvas != null) {\r\n            const ctx = canvas.getContext(\"2d\");\r\n            if (ctx != null) {\r\n                ctx.putImageData(editor.canvas, 0, 0);\r\n                newEditor.canvas = drawObject(ctx, { x: editor.canvas.width, y: editor.canvas.height },\r\n                    editor.selectedObject);\r\n            }\r\n        }\r\n    }\r\n    return newEditor;\r\n}\r\n\r\nexport function removeSelectedObject(\r\n    editor: Editor) {\r\n    let newEditor: Editor = {\r\n        canvas: copyImageData(editor.canvas),\r\n        selectedObject: null\r\n    };\r\n    return newEditor;\r\n}\r\n","import { Vector2 } from \"../structures/Vector2\";\r\n\r\nexport function length(vector: Vector2) {\r\n    return Math.floor(Math.sqrt(Math.pow(vector.x, 2) + Math.pow(vector.y, 2)));\r\n}\r\n\r\nexport function cosinus(first: Vector2, second: Vector2) {\r\n    return (first.x * second.x + first.y * second.y) / (length(first) * length(second));\r\n}","const UPDATE_CANVAS_VIEW_MODEL = \"UPDATE_CANVAS_VIEW_MODEL\";\r\nexport default UPDATE_CANVAS_VIEW_MODEL;","import { CanvasViewModel } from \"../../viewmodel/CanvasViewModel\";\r\nimport CanvasViewModelAction from \"../actions/types/CanvasViewModelAction\";\r\nimport UPDATE_CANVAS_VIEW_MODEL from \"../actions/updateCanvasViewModel\";\r\n\r\nfunction updateCanvasViewModel(model: CanvasViewModel): CanvasViewModelAction {\r\n    return {\r\n        type: UPDATE_CANVAS_VIEW_MODEL,\r\n        value: model\r\n    };\r\n}\r\n\r\nexport default updateCanvasViewModel;","const UPDATE_TEXT = \"UPDATE_TEXT\";\r\nexport default UPDATE_TEXT;","import StringAction from \"../actions/types/StringAction\";\r\nimport UPDATE_TEXT from \"../actions/updateText\";\r\n\r\nexport default function updateText(value: string): StringAction {\r\n    return { \r\n        type: UPDATE_TEXT,\r\n        value: value\r\n    };\r\n}","const UPDATE_TOOL = \"UPDATE_TOOL\";\r\nexport default UPDATE_TOOL;","import { createStyles, List, ListItem, makeStyles, Paper, SvgIcon, Theme, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport updateTool from '../../store/actionCreators/updateTool';\nimport { ViewModel } from '../../viewmodel/ViewModel';\nimport './Tools.css';\n\nexport enum ToolType {\n    Rectangle = 0, Triangle = 1, Circle = 2, Text = 3, Area = 4\n}\n\ninterface ToolsProps {\n    onSelected(): void\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            backgroundColor: \"#FFFFFF8a\",\n        },\n        item: {\n            minWidth: \"0\",\n            width: \"48px\",\n            height: \"48px\",\n            borderRadius: \"24px\",\n            alignContent: \"center\",\n            margin: \"0 4px\",\n            padding: \"0\",\n            '&:hover': {\n                background: \"#42424242\",\n            },\n        },\n        selectedItem: {\n            background: theme.palette.secondary.light + \"CC\",\n            '&:hover': {\n                background: theme.palette.secondary.light,\n            },\n        }\n    }),\n);\n\nexport default function Tools({ onSelected }: ToolsProps) {\n    const dispatch = useDispatch();\n    const currentTool: ToolType = useSelector(\n        (state: ViewModel) => state.currentTool\n    )\n    const onClick = (tool: ToolType) => {\n        if (tool !== currentTool) {\n            dispatch(updateTool(tool));\n            onSelected();\n        }\n    };\n    const classes = useStyles();\n    return (\n        <Paper className={\"Tools-root \" + classes.root}>\n            <Typography\n                className=\"Tools-title\"\n                variant=\"subtitle1\" color=\"inherit\">\n                Инструменты\n            </Typography>\n            <List className=\"Tools-list\" component=\"nav\" aria-label=\"Инструменты\">\n                <ListItem button\n                    onClick={() => onClick(ToolType.Rectangle)}\n                    className={classes.item + \" \" + (currentTool === ToolType.Rectangle ? classes.selectedItem : \"\")}>\n                    <SvgIcon viewBox=\"0 0 32 32\" style={{ margin: \"auto\" }}>\n                        <rect x=\"0\" y=\"0\" width=\"32\" height=\"32\"\n                            fill={currentTool === ToolType.Rectangle ? \"#FFFFFF\" : \"#424242\"} />\n                    </SvgIcon>\n                </ListItem>\n                <ListItem button\n                    onClick={() => onClick(ToolType.Triangle)}\n                    className={classes.item + \" \" + (currentTool === ToolType.Triangle ? classes.selectedItem : \"\")}>\n                    <SvgIcon viewBox=\"0 0 32 32\" style={{ margin: \"auto\" }}>\n                        <polygon points=\"0,32 32,32 16,0\"\n                            fill={currentTool === ToolType.Triangle ? \"#FFFFFF\" : \"#424242\"} />\n                    </SvgIcon>\n                </ListItem>\n                <ListItem button\n                    onClick={() => onClick(ToolType.Circle)}\n                    className={classes.item + \" \" + (currentTool === ToolType.Circle ? classes.selectedItem : \"\")}>\n                    <SvgIcon viewBox=\"0 0 32 32\" style={{ margin: \"auto\" }}>\n                        <circle r=\"16\" cx=\"16\" cy=\"16\"\n                            fill={currentTool === ToolType.Circle ? \"#FFFFFF\" : \"#424242\"}\n                        />\n                    </SvgIcon>\n                </ListItem>\n                <ListItem button\n                    onClick={() => onClick(ToolType.Text)}\n                    className={classes.item + \" \" + (currentTool === ToolType.Text ? classes.selectedItem : \"\")}>\n                    <SvgIcon viewBox=\"0 0 24 24\" style={{ margin: \"auto\" }}>\n                        <path d=\"M5 4v3h5.5v12h3V7H19V4z\"\n                            fill={currentTool === ToolType.Text ? \"#FFFFFF\" : \"#424242\"} />\n                    </SvgIcon>\n                </ListItem>\n                <ListItem button\n                    onClick={() => onClick(ToolType.Area)}\n                    className={classes.item + \" \" + (currentTool === ToolType.Area ? classes.selectedItem : \"\")}>\n                    <SvgIcon viewBox=\"0 0 24 24\" style={{ margin: \"auto\" }}>\n                        <path d=\"M17 15h2V7c0-1.1-.9-2-2-2H9v2h8v8zM7 17V1H5v4H1v2h4v10c0 1.1.9 2 2 2h10v4h2v-4h4v-2H7z\"\n                            fill={currentTool === ToolType.Area ? \"#FFFFFF\" : \"#424242\"} />\n                    </SvgIcon>\n                </ListItem>\n            </List>\n        </Paper>\n    );\n}\n","import { ToolType } from \"../../components/tool/Tools\";\r\nimport ToolTypeAction from \"../actions/types/ToolTypeAction\";\r\nimport UPDATE_TOOL from \"../actions/updateTool\";\r\n\r\nexport default function updateTool(value: ToolType): ToolTypeAction {\r\n    return { \r\n        type: UPDATE_TOOL,\r\n        value: value\r\n    };\r\n}","import { replaceSelectedObjectWithHistory } from \"../../helper/EditorHelper\";\r\nimport { createArea, createCircle, createRectangle, createText, createTriangle } from \"../../helper/ObjectCreateHelper\";\r\nimport { cosinus, length } from \"../../helper/VectorHelper\";\r\nimport actionReplaceSelectedObject from \"../../store/actionCreators/actionReplaceSelectedObject\";\r\nimport pushToHistory from \"../../store/actionCreators/pushToHistory\";\r\nimport removeSelectedObject from \"../../store/actionCreators/removeSelectedObject\";\r\nimport selectArea from \"../../store/actionCreators/selectArea\";\r\nimport updateCanvasViewModel from \"../../store/actionCreators/updateCanvasViewModel\";\r\nimport updateText from \"../../store/actionCreators/updateText\";\r\nimport { Art } from \"../../structures/Art\";\r\nimport { Circle } from \"../../structures/Circle\";\r\nimport { Editor } from \"../../structures/Editor\";\r\nimport { Rectangle } from \"../../structures/Rectangle\";\r\nimport { SelectedArea } from \"../../structures/SelectedArea\";\r\nimport { TextObject } from \"../../structures/TextObject\";\r\nimport { Triangle } from \"../../structures/Triangle\";\r\nimport { Types } from \"../../structures/Type\";\r\nimport { Vector2 } from \"../../structures/Vector2\";\r\nimport { CanvasViewModel } from \"../../viewmodel/CanvasViewModel\";\r\nimport { ViewModel } from \"../../viewmodel/ViewModel\";\r\nimport { ToolType } from \"../tool/Tools\";\r\n\r\nexport function onMouseDown(\r\n    e: React.MouseEvent<HTMLCanvasElement, MouseEvent>,\r\n    dispatch: Function,\r\n    canvas: HTMLCanvasElement,\r\n    editor: Editor,\r\n    canvasViewModel: CanvasViewModel): void {\r\n    if (e.button !== 0) {\r\n        return;\r\n    }\r\n    const newCanvasViewModel = {\r\n        ...canvasViewModel\r\n    }\r\n    if (canvasViewModel.isMiddleMouseDown) {\r\n        return;\r\n    }\r\n    const selectedObject = editor.selectedObject;\r\n    const tempObject = canvasViewModel.tempObject;\r\n    if (canvas.style.cursor === \"pointer\") {\r\n        if (selectedObject != null) {\r\n            newCanvasViewModel.tempObject = selectedObject;\r\n            const ctx = canvas.getContext(\"2d\");\r\n            if (ctx == null) {\r\n                throw new Error(\"CanvasHandler: context is null\");\r\n            }\r\n            if (selectedObject != null) {\r\n                dispatch(removeSelectedObject());\r\n            }\r\n            newCanvasViewModel.start = {\r\n                x: e.clientX - canvas.offsetLeft,\r\n                y: e.clientY - canvas.offsetTop\r\n            };\r\n        }\r\n    } else if (canvas.style.cursor === \"grab\") {\r\n        if (selectedObject != null || (tempObject !== null && tempObject.type === Types.Area)) {\r\n            canvas.style.cursor = \"grabbing\";\r\n\r\n            if (selectedObject !== null || tempObject === null || tempObject.type !== Types.Area) {\r\n                newCanvasViewModel.tempObject = selectedObject;\r\n            }\r\n            dispatch(removeSelectedObject());\r\n            newCanvasViewModel.start = {\r\n                x: e.clientX - canvas.offsetLeft,\r\n                y: e.clientY - canvas.offsetTop\r\n            };\r\n        }\r\n    } else {\r\n        if (selectedObject != null) {\r\n            replaceSelectedObjectWithHistory(dispatch, editor, null);\r\n        }\r\n        newCanvasViewModel.start = {\r\n            x: e.clientX - canvas.offsetLeft,\r\n            y: e.clientY - canvas.offsetTop\r\n        };\r\n    }\r\n    newCanvasViewModel.isCanvasDown = true;\r\n\r\n    dispatch(updateCanvasViewModel(newCanvasViewModel));\r\n}\r\n\r\nexport function onMouseMove(e: React.MouseEvent<HTMLCanvasElement, MouseEvent>,\r\n    dispatch: Function,\r\n    canvas: HTMLCanvasElement,\r\n    viewModel: ViewModel): void {\r\n\r\n    const canvasViewModel = viewModel.canvasModel;\r\n    const newCanvasViewModel = {\r\n        ...canvasViewModel\r\n    }\r\n\r\n    if (canvasViewModel.isMiddleMouseDown) {\r\n        return;\r\n    }\r\n    const moveEnd: Vector2 = {\r\n        x: e.clientX - canvas.offsetLeft,\r\n        y: e.clientY - canvas.offsetTop\r\n    };\r\n\r\n    const editor = viewModel.editor;\r\n    const selectedObject = editor.selectedObject;\r\n    const tempObject = canvasViewModel.tempObject;\r\n    const scale = canvasViewModel.scale;\r\n    if (canvasViewModel.isCanvasDown) {\r\n        const tempPoint = canvasViewModel.tempPoint;\r\n        const start = canvasViewModel.start;\r\n\r\n        const onCreateObject = (start: Vector2, moveEnd: Vector2) => {\r\n            if (canvasViewModel.isCanvasDown) {\r\n                let newObject = null;\r\n                const tool = viewModel.currentTool;\r\n                const objectState = viewModel.objectState;\r\n                switch (tool) {\r\n                    case ToolType.Rectangle:\r\n                        newObject = createRectangle(start, moveEnd, objectState);\r\n                        break;\r\n                    case ToolType.Triangle:\r\n                        newObject = createTriangle(start, moveEnd, objectState);\r\n                        break;\r\n                    case ToolType.Circle:\r\n                        newObject = createCircle(start, moveEnd, objectState);\r\n                        break;\r\n                    case ToolType.Text:\r\n                        newObject = createText(start, moveEnd, objectState);\r\n                        break;\r\n                    case ToolType.Area:\r\n                        newObject = createArea(start, moveEnd, objectState);\r\n                        break;\r\n                }\r\n                newCanvasViewModel.tempObject = newObject;\r\n                dispatch(updateCanvasViewModel(canvasViewModel));\r\n            }\r\n        }\r\n\r\n        if (selectedObject != null) {\r\n            replaceSelectedObjectWithHistory(dispatch, editor, null);\r\n        }\r\n        let deltaX = (moveEnd.x - start.x) / scale;\r\n        let deltaY = (moveEnd.y - start.y) / scale;\r\n        if (canvas.style.cursor === \"pointer\") {\r\n            if (tempObject !== null) {\r\n                if (tempPoint !== null) {\r\n                    if (tempObject.type === Types.Rectangle\r\n                        || tempObject.type === Types.TextObject\r\n                        || tempObject.type === Types.Art\r\n                        || tempObject.type === Types.Area) {\r\n                        let objRA: Rectangle | Art | SelectedArea;\r\n                        if (tempObject.type === Types.TextObject) {\r\n                            objRA = (tempObject as TextObject).rectangle;\r\n                        } else {\r\n                            objRA = tempObject as Rectangle | Art | SelectedArea;\r\n                        }\r\n                        if (e.shiftKey && objRA.type === Types.Art) {\r\n                            const delta: Vector2 = { x: deltaX, y: deltaY };\r\n\r\n                            const distance = length(delta);\r\n                            const sizeLength = length(objRA.size);\r\n                            const cos = objRA.size.x / sizeLength;\r\n                            const sin = objRA.size.y / sizeLength;\r\n                            deltaX = distance * cos;\r\n                            deltaY = distance * sin;\r\n                            const dir = Math.sign(cosinus(delta, tempPoint));\r\n                            objRA.position.x += deltaX * Math.min(tempPoint.x, 0) * dir;\r\n                            objRA.position.y += deltaY * Math.min(tempPoint.y, 0) * dir;\r\n                            objRA.size.x += deltaX * dir;\r\n                            objRA.size.y += deltaY * dir;\r\n                        } else {\r\n                            if (tempPoint.x > 0) {\r\n                                objRA.size.x += deltaX;\r\n                            } else if (tempPoint.x < 0) {\r\n                                objRA.position.x += deltaX;\r\n                                objRA.size.x += -deltaX;\r\n                            }\r\n                            if (tempPoint.y > 0) {\r\n                                objRA.size.y += deltaY;\r\n                            } else if (tempPoint.y < 0) {\r\n                                objRA.position.y += deltaY;\r\n                                objRA.size.y += -deltaY;\r\n                            }\r\n                        }\r\n                        if (objRA.size.x === 0) {\r\n                            objRA.size.x = -1;\r\n                        }\r\n                        if (objRA.size.y === 0) {\r\n                            objRA.size.y = -1;\r\n                        }\r\n                        if (objRA.size.x < 0) {\r\n                            tempPoint.x *= -1;\r\n                            objRA.size.x = Math.abs(objRA.size.x);\r\n                            objRA.position.x -= objRA.size.x;\r\n                        }\r\n                        if (objRA.size.y < 0) {\r\n                            tempPoint.y *= -1;\r\n                            objRA.size.y = Math.abs(objRA.size.y);\r\n                            objRA.position.y -= objRA.size.y;\r\n                        }\r\n                    } else if (tempObject.type === Types.Triangle) {\r\n                        tempPoint.x += deltaX;\r\n                        tempPoint.y += deltaY;\r\n                    } else if (tempObject.type === Types.Circle) {\r\n                        const circle = tempObject as Circle;\r\n                        circle.radius = length({\r\n                            x: moveEnd.x - circle.position.x,\r\n                            y: moveEnd.y - circle.position.y\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            newCanvasViewModel.start = moveEnd;\r\n        } else if (canvas.style.cursor === \"grabbing\") {\r\n            if (tempObject != null) {\r\n                if (tempObject.type === Types.Rectangle\r\n                    || tempObject.type === Types.Circle\r\n                    || tempObject.type === Types.TextObject\r\n                    || tempObject.type === Types.Art\r\n                    || tempObject.type === Types.Area) {\r\n                    let objRCA: Rectangle | Circle | Art | SelectedArea;\r\n                    if (tempObject.type === Types.TextObject) {\r\n                        objRCA = (tempObject as TextObject).rectangle;\r\n                    } else {\r\n                        objRCA = tempObject as Rectangle | Circle | Art | SelectedArea;\r\n                    }\r\n                    objRCA.position.x += deltaX;\r\n                    objRCA.position.y += deltaY;\r\n                } else if (tempObject.type === Types.Triangle) {\r\n                    const triangle = tempObject as Triangle;\r\n                    triangle.p0.x += deltaX;\r\n                    triangle.p0.y += deltaY;\r\n                    triangle.p1.x += deltaX;\r\n                    triangle.p1.y += deltaY;\r\n                    triangle.p2.x += deltaX;\r\n                    triangle.p2.y += deltaY;\r\n                }\r\n            }\r\n            newCanvasViewModel.start = moveEnd;\r\n        } else {\r\n            if (canvas.style.cursor === \"default\") {\r\n                if (viewModel.objectState.text !== \"\") {\r\n                    dispatch(updateText(\"\"));\r\n                }\r\n            }\r\n            onCreateObject({ x: start.x / scale, y: start.y / scale },\r\n                { x: moveEnd.x / scale, y: moveEnd.y / scale });\r\n        }\r\n    } else {\r\n        const setTempPoint = (point: Vector2) => {\r\n            newCanvasViewModel.tempPoint = point;\r\n        }\r\n        if (selectedObject === null && tempObject !== null && tempObject.type === Types.Area) {\r\n            setupCursor(canvas, scale, moveEnd, tempObject, setTempPoint);\r\n        } else {\r\n            setupCursor(canvas, scale, moveEnd, selectedObject, setTempPoint);\r\n        }\r\n        newCanvasViewModel.start = moveEnd;\r\n    }\r\n    dispatch(updateCanvasViewModel(newCanvasViewModel));\r\n}\r\n\r\nexport function onMouseUp(e: React.MouseEvent<HTMLCanvasElement, MouseEvent>,\r\n    dispatch: Function,\r\n    canvas: HTMLCanvasElement,\r\n    viewModel: ViewModel) {\r\n    const moveEnd: Vector2 = {\r\n        x: e.clientX - canvas.offsetLeft,\r\n        y: e.clientY - canvas.offsetTop\r\n    };\r\n    const canvasViewModel = viewModel.canvasModel;\r\n    const newCanvasViewModel = {\r\n        ...canvasViewModel\r\n    }\r\n    const editor = viewModel.editor;\r\n    const selectedObject = editor.selectedObject;\r\n    const tempObject = canvasViewModel.tempObject;\r\n    const scale = canvasViewModel.scale;\r\n\r\n    const setTempPoint = (point: Vector2) => {\r\n        newCanvasViewModel.tempPoint = point;\r\n    }\r\n\r\n    if (tempObject != null) {\r\n        setupCursor(canvas, scale, moveEnd, tempObject, setTempPoint);\r\n        if (tempObject.type !== Types.Area) {\r\n            dispatch(actionReplaceSelectedObject(tempObject as TextObject | Rectangle | Triangle | Circle | Art));\r\n            newCanvasViewModel.tempObject = null;\r\n        } else {\r\n            const area = tempObject as SelectedArea;\r\n            dispatch(selectArea(area));\r\n\r\n            const historyCanvas = editor.canvas;\r\n            dispatch(actionReplaceSelectedObject(null));\r\n            dispatch(pushToHistory(historyCanvas));\r\n\r\n            newCanvasViewModel.tempObject = null;\r\n            dispatch(updateCanvasViewModel(newCanvasViewModel));\r\n        }\r\n    } else if (canvas.style.cursor === \"default\") {\r\n        if (selectedObject != null) {\r\n            replaceSelectedObjectWithHistory(dispatch, editor, null, editor.canvas);\r\n        } else {\r\n            dispatch(updateText(\"\"));\r\n        }\r\n    }\r\n    newCanvasViewModel.isCanvasDown = false;\r\n    dispatch(updateCanvasViewModel(newCanvasViewModel));\r\n}\r\n\r\n\r\nfunction setupCursor(canvas: HTMLCanvasElement,\r\n    scale: number,\r\n    moveEnd: Vector2,\r\n    selectedObject: Rectangle | Triangle | Circle | TextObject | Art | SelectedArea | null = null,\r\n    setTempPoint: Function) {\r\n    if (selectedObject != null) {\r\n        if (selectedObject.type === Types.Rectangle\r\n            || selectedObject.type === Types.TextObject\r\n            || selectedObject.type === Types.Art\r\n            || selectedObject.type === Types.Area) {\r\n            let objRA: Rectangle | Art | SelectedArea;\r\n            if (selectedObject.type === Types.TextObject) {\r\n                objRA = (selectedObject as TextObject).rectangle;\r\n            } else {\r\n                objRA = selectedObject as Rectangle | Art | SelectedArea;\r\n            }\r\n            const position = {\r\n                x: objRA.position.x * scale,\r\n                y: objRA.position.y * scale,\r\n            };\r\n            let size: Vector2 = {\r\n                x: objRA.size.x * scale,\r\n                y: objRA.size.y * scale,\r\n            };\r\n\r\n            const points = [\r\n                { x: position.x, y: position.y }, // Left Top\r\n                { x: position.x + size.x / 2, y: position.y }, // Top\r\n                { x: position.x + size.x, y: position.y }, // Top Right\r\n                { x: position.x + size.x, y: position.y + size.y / 2 }, // Right\r\n                { x: position.x + size.x, y: position.y + size.y }, // Bottom Right\r\n                { x: position.x + size.x / 2, y: position.y + size.y }, // Bottom\r\n                { x: position.x, y: position.y + size.y }, // Bottom Left\r\n                { x: position.x, y: position.y + size.y / 2 } // Left\r\n            ];\r\n            const pointIndex = points\r\n                .map((p) => length({ x: p.x - moveEnd.x, y: p.y - moveEnd.y }) <= 12)\r\n                .findIndex((value) => value);\r\n            if (pointIndex > -1) {\r\n                setTempPoint({\r\n                    x: Math.sign(points[pointIndex].x - (position.x + size.x / 2)),\r\n                    y: Math.sign(points[pointIndex].y - (position.y + size.y / 2))\r\n                });\r\n                canvas.style.cursor = \"pointer\";\r\n            } else if (moveEnd.x >= position.x\r\n                && moveEnd.x <= position.x + size.x\r\n                && moveEnd.y >= position.y\r\n                && moveEnd.y <= position.y + size.y) {\r\n                canvas.style.cursor = \"grab\";\r\n            } else {\r\n                canvas.style.cursor = \"default\";\r\n            }\r\n        } else if (selectedObject.type === Types.Triangle) {\r\n            const triangle = selectedObject as Triangle;\r\n            const points = [triangle.p0, triangle.p1, triangle.p2];\r\n            const scaledPoints = [\r\n                { x: triangle.p0.x * scale, y: triangle.p0.y * scale },\r\n                { x: triangle.p1.x * scale, y: triangle.p1.y * scale },\r\n                { x: triangle.p2.x * scale, y: triangle.p2.y * scale }];\r\n            const pointIndex = scaledPoints\r\n                .map((p) => length({ x: p.x - moveEnd.x, y: p.y - moveEnd.y }) <= 12)\r\n                .findIndex((value) => value);\r\n            if (pointIndex > -1) {\r\n                setTempPoint(points[pointIndex]);\r\n                canvas.style.cursor = \"pointer\";\r\n            } else if (pointInTriangle(moveEnd, scaledPoints[0], scaledPoints[1], scaledPoints[2])) {\r\n                canvas.style.cursor = \"grab\";\r\n            } else {\r\n                canvas.style.cursor = \"default\";\r\n            }\r\n        } else if (selectedObject.type === Types.Circle) {\r\n            const circle = selectedObject as Circle;\r\n            const position = {\r\n                x: circle.position.x * scale,\r\n                y: circle.position.y * scale,\r\n            };\r\n            const radius = circle.radius * scale;\r\n            const distance = length({ x: moveEnd.x - position.x, y: moveEnd.y - position.y });\r\n            if (distance >= radius - 12 && distance <= radius + 12) {\r\n                canvas.style.cursor = \"pointer\";\r\n            } else if (length({ x: moveEnd.x - position.x, y: moveEnd.y - position.y }) < Math.max(radius - 12, 0)) {\r\n                canvas.style.cursor = \"grab\";\r\n            } else {\r\n                canvas.style.cursor = \"default\";\r\n            }\r\n        }\r\n    } else {\r\n        canvas.style.cursor = \"default\";\r\n    }\r\n}\r\n\r\nfunction pointInTriangle(p: Vector2, p0: Vector2, p1: Vector2, p2: Vector2) {\r\n    var dX = p.x - p2.x;\r\n    var dY = p.y - p2.y;\r\n    var dX21 = p2.x - p1.x;\r\n    var dY12 = p1.y - p2.y;\r\n    var D = dY12 * (p0.x - p2.x) + dX21 * (p0.y - p2.y);\r\n    var s = dY12 * dX + dX21 * dY;\r\n    var t = (p2.y - p0.y) * dX + (p0.x - p2.x) * dY;\r\n    if (D < 0) return s <= 0 && t <= 0 && s + t >= D;\r\n    return s >= 0 && t >= 0 && s + t <= D;\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { drawImageData, drawObject } from '../../helper/DrawHelper';\r\nimport './Canvas.css';\r\nimport { Types } from '../../structures/Type';\r\nimport { Vector2 } from '../../structures/Vector2';\r\nimport { Art } from '../../structures/Art';\r\nimport { TextObject } from '../../structures/TextObject';\r\nimport { Rectangle } from '../../structures/Rectangle';\r\nimport { Triangle } from '../../structures/Triangle';\r\nimport { Circle } from '../../structures/Circle';\r\nimport { SelectedArea } from '../../structures/SelectedArea';\r\nimport { createArea } from '../../helper/ObjectCreateHelper';\r\nimport removeSelectedObject from '../../store/actionCreators/removeSelectedObject';\r\nimport selectArea from '../../store/actionCreators/selectArea';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { Editor } from '../../structures/Editor';\r\nimport { ViewModel } from '../../viewmodel/ViewModel';\r\nimport cutSelectedArea from '../../store/actionCreators/cutSelectedArea';\r\nimport pushToHistory from '../../store/actionCreators/pushToHistory';\r\nimport actionReplaceSelectedObject from '../../store/actionCreators/actionReplaceSelectedObject';\r\nimport { DrawProps } from '../../structures/DrawProps';\r\nimport { replaceSelectedObjectWithHistory } from '../../helper/EditorHelper';\r\nimport { onMouseDown, onMouseMove, onMouseUp } from './CanvasHandler';\r\nimport { CanvasViewModel } from '../../viewmodel/CanvasViewModel';\r\nimport updateCanvasViewModel from '../../store/actionCreators/updateCanvasViewModel';\r\nimport updateText from '../../store/actionCreators/updateText';\r\nimport { toHexColor } from '../../helper/ColorHelper';\r\n\r\nexport default function Canvas() {\r\n    const dispatch = useDispatch();\r\n\r\n    const state: ViewModel = useSelector(\r\n        (state: ViewModel) => state\r\n    )\r\n    const selectedObject = state.editor.selectedObject;\r\n    const objectState = state.objectState;\r\n\r\n    const canvasViewModel: CanvasViewModel = state.canvasModel;\r\n    const tempObject = canvasViewModel.tempObject;\r\n\r\n    const editor: Editor = useSelector(\r\n        (state: ViewModel) => state.editor,\r\n        shallowEqual\r\n    )\r\n    const imageData = editor.canvas;\r\n\r\n    const position = canvasViewModel.canvasPosition;\r\n\r\n    if (selectedObject != null) {\r\n        if (selectedObject.type === Types.Rectangle ||\r\n            selectedObject.type === Types.Triangle ||\r\n            selectedObject.type === Types.Circle ||\r\n            selectedObject.type === Types.TextObject) {\r\n            let drawProps: DrawProps;\r\n            if (selectedObject.type === Types.TextObject) {\r\n                const textObject = selectedObject as TextObject;\r\n                textObject.text = objectState.text;\r\n                textObject.textSize = objectState.textSize;\r\n                textObject.textColor = objectState.textColor;\r\n                drawProps = textObject.rectangle.props;\r\n            } else {\r\n                drawProps = selectedObject.props;\r\n            }\r\n            drawProps.fillColor = objectState.fillColor;\r\n            drawProps.strokeColor = objectState.strokeColor;\r\n            drawProps.strokeWidth = objectState.strokeWidth;\r\n        }\r\n    }\r\n\r\n    const canvasContainer = useRef<HTMLDivElement>(null);\r\n    const canvasElement = useRef<HTMLCanvasElement>(null);\r\n    useEffect(() => {\r\n        const scale = canvasViewModel.scale;\r\n        if (canvasElement.current !== null && canvasContainer.current !== null) {\r\n            canvasElement.current.width = Math.min(imageData.width * scale, canvasContainer.current.clientWidth);\r\n            canvasElement.current.height = Math.min(imageData.height * scale, canvasContainer.current.clientHeight);\r\n            if (canvasElement.current != null) {\r\n                renderCanvas(canvasElement.current, scale, imageData, selectedObject, canvasViewModel.tempObject);\r\n            }\r\n        }\r\n\r\n        const powFactor = 1.125;\r\n        const wheelListener = (e: WheelEvent) => {\r\n            const delta = Math.sign(e.deltaY);\r\n            let newScale = scale;\r\n            if (delta === 1) {\r\n                newScale /= powFactor;\r\n            } else {\r\n                newScale *= powFactor;\r\n            }\r\n\r\n            canvasViewModel.scale = newScale;\r\n            dispatch(updateCanvasViewModel(canvasViewModel));\r\n        }\r\n        window.addEventListener(\"wheel\", wheelListener);\r\n\r\n        const mouseDownListener = (e: MouseEvent) => {\r\n            if (e.button === 1) {\r\n                document.body.style.cursor = \"move\"\r\n                if (canvasElement.current !== null) {\r\n                    canvasElement.current.style.cursor = \"move\"\r\n                }\r\n                canvasViewModel.isMiddleMouseDown = true;\r\n                canvasViewModel.middleMouseStart = { x: e.clientX, y: e.clientY }\r\n                dispatch(updateCanvasViewModel(canvasViewModel));\r\n            }\r\n        };\r\n        window.addEventListener(\"mousedown\", mouseDownListener)\r\n\r\n        const mouseMoveListener = (e: MouseEvent) => {\r\n            if (canvasViewModel.isMiddleMouseDown && canvasElement.current !== null) {\r\n                canvasViewModel.canvasPosition = ({\r\n                    x: canvasViewModel.canvasPosition.x + (e.clientX - canvasViewModel.middleMouseStart.x),\r\n                    y: canvasViewModel.canvasPosition.y + (e.clientY - canvasViewModel.middleMouseStart.y)\r\n                });\r\n                canvasElement.current.style.marginLeft = `${canvasViewModel.canvasPosition.x}px`;\r\n                canvasElement.current.style.marginTop = `${canvasViewModel.canvasPosition.y}px`;\r\n\r\n                canvasViewModel.middleMouseStart = { x: e.clientX, y: e.clientY };\r\n                dispatch(updateCanvasViewModel(canvasViewModel));\r\n            }\r\n        };\r\n        window.addEventListener(\"mousemove\", mouseMoveListener);\r\n\r\n        const mouseUpListener = (e: MouseEvent) => {\r\n            if (e.button === 1) {\r\n                document.body.style.cursor = \"default\";\r\n                if (canvasElement.current !== null) {\r\n                    canvasElement.current.style.cursor = \"default\"\r\n                }\r\n                canvasViewModel.isMiddleMouseDown = false;\r\n                dispatch(updateCanvasViewModel(canvasViewModel));\r\n            }\r\n        };\r\n        window.addEventListener(\"mouseup\", mouseUpListener);\r\n        return () => {\r\n            window.removeEventListener(\"wheel\", wheelListener);\r\n            window.removeEventListener(\"mousedown\", mouseDownListener);\r\n            window.removeEventListener(\"mousemove\", mouseMoveListener);\r\n            window.removeEventListener(\"mouseup\", mouseUpListener);\r\n        }\r\n    }, [canvasViewModel,\r\n        dispatch,\r\n        selectedObject,\r\n        imageData]);\r\n    useEffect(() => {\r\n        const listener = (e: KeyboardEvent) => {\r\n            if (e.ctrlKey) {\r\n                if (e.code === \"KeyX\") {\r\n                    if (tempObject != null && tempObject.type === Types.Area) {\r\n                        dispatch(selectArea(tempObject as SelectedArea));\r\n\r\n                        let historyCanvas = editor.canvas;\r\n                        dispatch(cutSelectedArea());\r\n                        dispatch(pushToHistory(historyCanvas));\r\n\r\n                        canvasViewModel.tempObject = null;\r\n                        dispatch(updateCanvasViewModel(canvasViewModel));\r\n                        dispatch(removeSelectedObject());\r\n                    }\r\n                } else if (e.code === \"KeyA\") {\r\n                    canvasViewModel.tempObject = createArea({ x: 0, y: 0 }, { x: imageData.width, y: imageData.height }, objectState);\r\n                    dispatch(updateCanvasViewModel(canvasViewModel));\r\n                }\r\n            } else {\r\n                switch (e.code) {\r\n                    case \"Escape\":\r\n                        canvasViewModel.tempObject = null;\r\n                        dispatch(updateCanvasViewModel(canvasViewModel));\r\n                        replaceSelectedObjectWithHistory(dispatch, editor, null);\r\n                        dispatch(updateText(\"\"));\r\n                        break;\r\n                    case \"Delete\":\r\n                        if (tempObject != null && tempObject.type === Types.Area) {\r\n                            dispatch(selectArea(tempObject as SelectedArea));\r\n                            const historyCanvas = editor.canvas;\r\n                            dispatch(removeSelectedObject());\r\n                            dispatch(pushToHistory(historyCanvas));\r\n                        } else {\r\n                            dispatch(removeSelectedObject());\r\n                        }\r\n                        canvasViewModel.tempObject = null;\r\n                        dispatch(updateCanvasViewModel(canvasViewModel));\r\n                        dispatch(updateText(\"\"));\r\n                        break;\r\n                    case \"Enter\":\r\n                        if (e.shiftKey) {\r\n                            break;\r\n                        }\r\n                        if (!(tempObject != null && tempObject.type === Types.Area)) {\r\n                            const historyCanvas = editor.canvas;\r\n                            dispatch(actionReplaceSelectedObject(null));\r\n                            dispatch(pushToHistory(historyCanvas));\r\n                        }\r\n                        canvasViewModel.tempObject = null;\r\n                        dispatch(updateCanvasViewModel(canvasViewModel));\r\n                        dispatch(updateText(\"\"));\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener(\"keydown\", listener)\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", listener)\r\n        }\r\n    })\r\n    const textArea = useRef<HTMLTextAreaElement>(null);\r\n    useEffect(() => {\r\n        textArea.current?.focus();\r\n    })\r\n    return (\r\n        <div\r\n            ref={canvasContainer}\r\n            className=\"Canvas-container\">\r\n            {selectedObject !== null && selectedObject.type === Types.TextObject &&\r\n                <textarea\r\n                    ref={textArea}\r\n                    style={{\r\n                        marginLeft: position.x +\r\n                            (selectedObject as TextObject).rectangle.position.x * canvasViewModel.scale +\r\n                            (selectedObject as TextObject).rectangle.props.strokeWidth / 2 * canvasViewModel.scale,\r\n                        marginTop: position.y +\r\n                            (selectedObject as TextObject).rectangle.position.y * canvasViewModel.scale +\r\n                            (selectedObject as TextObject).rectangle.props.strokeWidth / 2 * canvasViewModel.scale,\r\n                        position: \"fixed\",\r\n                        width: (selectedObject as TextObject).rectangle.size.x * canvasViewModel.scale,\r\n                        height: (selectedObject as TextObject).rectangle.size.y * canvasViewModel.scale,\r\n                        resize: \"none\",\r\n                        fontFamily: \"monospace\",\r\n                        fontSize: `${(selectedObject as TextObject).textSize * canvasViewModel.scale}px`,\r\n                        backgroundColor: \"#FFFFFF00\",\r\n                        border: \"none\",\r\n                        outline: \"none\",\r\n                        color: `${toHexColor(objectState.textColor)}`\r\n                    }}\r\n                    value={objectState.text}\r\n                    onChange={(e) => {\r\n                        dispatch(updateText(e.target.value))\r\n                    }}\r\n                >\r\n                </textarea>\r\n            }\r\n\r\n            <canvas id=\"canvas\"\r\n                ref={canvasElement}\r\n                className=\"Canvas\"\r\n                width={0}\r\n                height={0}\r\n                style={{ marginLeft: position.x, marginTop: position.y }}\r\n                // В onMouseDown и onMouseUp не нужны timeout,\r\n                // так как они вызаываются намного реже, чем onMouseMove\r\n                onMouseDown={(e) => {\r\n                    if (canvasElement.current) {\r\n                        onMouseDown(e, dispatch, canvasElement.current, editor, canvasViewModel);\r\n                    }\r\n                }}\r\n                onMouseMove={(e) => {\r\n                    if (canvasElement.current) {\r\n                        onMouseMove(e, dispatch, canvasElement.current, state);\r\n                    }\r\n                }}\r\n                onMouseUp={(e) => {\r\n                    if (canvasElement.current) {\r\n                        onMouseUp(e, dispatch, canvasElement.current, state);\r\n                    }\r\n                }}>\r\n            </canvas>\r\n        </div >\r\n    );\r\n}\r\n\r\nfunction renderCanvas(canvas: HTMLCanvasElement, scale: number, imageData: ImageData,\r\n    selectedObject: Rectangle | Triangle | Circle | TextObject | Art | null = null,\r\n    tempCanvasObject: Rectangle | Triangle | Circle | TextObject | Art | SelectedArea | null = null) {\r\n    if (canvas == null) {\r\n        return;\r\n    }\r\n    const context = canvas.getContext(\"2d\");\r\n    if (context != null) {\r\n        context.scale(scale, scale);\r\n        drawImageData(context, imageData);\r\n        if (selectedObject != null) {\r\n            if (selectedObject.type === Types.TextObject) {\r\n                context.putImageData(drawObject(context, { x: imageData.width, y: imageData.height }, (selectedObject as TextObject).rectangle), 0, 0);\r\n            } else {\r\n                context.putImageData(drawObject(context, { x: imageData.width, y: imageData.height }, selectedObject), 0, 0);\r\n            }\r\n            drawBorder(scale, selectedObject, context);\r\n        }\r\n        if (tempCanvasObject != null) {\r\n            if (tempCanvasObject.type !== Types.Area) {\r\n                let objRTCTA = tempCanvasObject as Rectangle | Triangle | Circle | TextObject | Art;\r\n                if (objRTCTA.type === Types.TextObject) {\r\n                    context.putImageData(drawObject(context, { x: imageData.width, y: imageData.height }, (objRTCTA as TextObject).rectangle), 0, 0);\r\n                } else {\r\n                    context.putImageData(drawObject(context, { x: imageData.width, y: imageData.height }, objRTCTA), 0, 0);\r\n                }\r\n            } else {\r\n                drawBorder(scale, tempCanvasObject as SelectedArea, context);\r\n            }\r\n        }\r\n        context.scale(1 / scale, 1 / scale);\r\n    }\r\n}\r\n\r\nfunction createGradient(ctx: CanvasRenderingContext2D, position: Vector2, size: Vector2) {\r\n    const grad = ctx.createLinearGradient(position.x, position.y, position.x + size.x, position.y + size.y);\r\n    grad.addColorStop(0, \"#F00\");\r\n    grad.addColorStop(0.2, \"#FF0\");\r\n    grad.addColorStop(0.4, \"#0F0\");\r\n    grad.addColorStop(0.6, \"#0FF\");\r\n    grad.addColorStop(0.8, \"#00F\");\r\n    grad.addColorStop(1, \"#F0F\");\r\n    return grad;\r\n}\r\n\r\nfunction drawBorder(scale: number, obj: Rectangle | Triangle | Circle | TextObject | Art | SelectedArea, ctx: CanvasRenderingContext2D) {\r\n    ctx.lineWidth = 2 / scale;\r\n\r\n    if (obj.type === Types.Rectangle\r\n        || obj.type === Types.TextObject\r\n        || obj.type === Types.Art\r\n        || obj.type === Types.Area) {\r\n        let objRA: Rectangle | Art | SelectedArea;\r\n        if (obj.type === Types.TextObject) {\r\n            objRA = (obj as TextObject).rectangle;\r\n        } else {\r\n            objRA = obj as Rectangle | Art | SelectedArea;\r\n        }\r\n        if (obj.type === Types.Area) {\r\n            ctx.setLineDash([3, 4]);\r\n        }\r\n        let position = {\r\n            x: objRA.position.x,\r\n            y: objRA.position.y\r\n        };\r\n        let size = {\r\n            x: objRA.size.x,\r\n            y: objRA.size.y\r\n        };\r\n        ctx.beginPath();\r\n        const normY = Math.min(position.y + size.y, position.y);\r\n        ctx.moveTo(\r\n            position.x - ctx.lineWidth,\r\n            normY - ctx.lineWidth);\r\n        ctx.lineTo(\r\n            position.x + size.x + ctx.lineWidth,\r\n            normY - ctx.lineWidth);\r\n        ctx.lineTo(\r\n            position.x + size.x + ctx.lineWidth,\r\n            normY + Math.abs(size.y) + ctx.lineWidth);\r\n        ctx.lineTo(\r\n            position.x - ctx.lineWidth,\r\n            normY + Math.abs(size.y) + ctx.lineWidth);\r\n        ctx.lineTo(\r\n            position.x - ctx.lineWidth,\r\n            normY - ctx.lineWidth);\r\n        ctx.closePath();\r\n        ctx.strokeStyle = createGradient(ctx, position, size);\r\n        ctx.fillStyle = ctx.strokeStyle;\r\n        ctx.stroke();\r\n\r\n        const radius = 8;\r\n\r\n        const positions = [\r\n            { x: position.x, y: position.y }, //Left Top\r\n            { x: position.x + size.x / 2, y: position.y }, // Top\r\n            { x: position.x + size.x, y: position.y }, // Right Top\r\n            { x: position.x + size.x, y: position.y + size.y / 2 }, // Right\r\n            { x: position.x + size.x, y: position.y + size.y }, // Right Bottom\r\n            { x: position.x + size.x / 2, y: position.y + size.y }, // Bottom\r\n            { x: position.x, y: position.y + size.y }, // Left Bottom\r\n            { x: position.x, y: position.y + size.y / 2 }, // Left\r\n        ];\r\n\r\n        if (obj.type === Types.Area) {\r\n            ctx.setLineDash([]);\r\n        }\r\n\r\n        positions.forEach((item) => {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                item.x,\r\n                item.y,\r\n                radius / scale,\r\n                0,\r\n                2 * Math.PI,\r\n                false\r\n            );\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            ctx.strokeStyle = \"#424242\"\r\n            ctx.stroke();\r\n        });\r\n    } else if (obj.type === Types.Triangle) {\r\n        const triangle = obj as Triangle;\r\n        ctx.beginPath();\r\n        ctx.moveTo(triangle.p0.x, triangle.p0.y);\r\n        ctx.lineTo(triangle.p1.x, triangle.p1.y);\r\n        ctx.lineTo(triangle.p2.x, triangle.p2.y);\r\n        ctx.closePath();\r\n\r\n\r\n        const positions = [triangle.p0, triangle.p1, triangle.p2];\r\n\r\n        const min = {\r\n            x: Math.min(triangle.p0.x, triangle.p1.x, triangle.p2.x),\r\n            y: Math.min(triangle.p0.y, triangle.p1.y, triangle.p2.y),\r\n        }\r\n\r\n        const max = {\r\n            x: Math.max(triangle.p0.x, triangle.p1.x, triangle.p2.x),\r\n            y: Math.max(triangle.p0.y, triangle.p1.y, triangle.p2.y),\r\n        }\r\n        ctx.strokeStyle = createGradient(ctx, min, {\r\n            x: max.x - min.x,\r\n            y: max.y - min.y\r\n        });\r\n        ctx.fillStyle = ctx.strokeStyle;\r\n        ctx.stroke();\r\n\r\n        const radius = 8;\r\n\r\n        positions.forEach((item) => {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                item.x,\r\n                item.y,\r\n                radius / scale,\r\n                0,\r\n                2 * Math.PI,\r\n                false\r\n            );\r\n            ctx.fill();\r\n            ctx.strokeStyle = \"#424242\"\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n        });\r\n    } else if (obj.type === Types.Circle) {\r\n        const circle = obj as Circle;\r\n        const position = circle.position;\r\n        ctx.beginPath();\r\n        ctx.moveTo(\r\n            position.x + circle.radius + ctx.lineWidth,\r\n            position.y);\r\n        ctx.arc(position.x, position.y, circle.radius + ctx.lineWidth, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.strokeStyle = createGradient(ctx, {\r\n            x: position.x - circle.radius,\r\n            y: position.y - circle.radius\r\n        }, {\r\n            x: circle.radius * 2,\r\n            y: circle.radius * 2\r\n        });\r\n        ctx.fillStyle = ctx.strokeStyle;\r\n        ctx.stroke();\r\n    }\r\n}\r\n","import { createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            margin: \"8px 0\",\r\n            '& label': {\r\n                color: \"#aa00ff\"\r\n            },\r\n            '& .MuiOutlinedInput-root': {\r\n                backgroundColor: \"#FFFFFFa5\",\r\n                boxShadow: \"4px 4px 16px #646464a5, -4px -4px 16px #ffffffa5\",\r\n\r\n                '& fieldset': {\r\n                    borderColor: \"#aa00ff\"\r\n                },\r\n                '&:hover fieldset': {\r\n                    borderColor: \"#aa00ff\",\r\n                },\r\n                '&.Mui-focused fieldset': {\r\n                    borderColor: \"#aa00ff\"\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\nexport default useStyles;","import React, { CSSProperties, useState } from 'react';\r\nimport { ChromePicker, ColorResult } from 'react-color';\r\nimport { toHexColor, toRGBAColor } from '../../helper/ColorHelper';\r\nimport useStyles from '../../objectparams/ObjectParamsStyle';\r\nimport { RGBAColor } from '../../structures/RGBAColor';\r\nimport ReactiveTextField from '../reactivetextfield/ReactiveTextField';\r\n\r\ninterface ColorPickerProps {\r\n    id: string,\r\n    title: string,\r\n    defaultColor: RGBAColor,\r\n    onChange(color: RGBAColor): void\r\n}\r\n\r\nexport default function TextColorPicker(props: ColorPickerProps) {\r\n    const classes = useStyles();\r\n    const [color, setColor] = useState(props.defaultColor)\r\n    const [displayColorPicker, setDisplayColorPicker] = useState(false)\r\n    const handleChange = (result: ColorResult) => {\r\n        if (result !== undefined) {\r\n            let alpha = result.rgb.a;\r\n            if (alpha === undefined) {\r\n                alpha = 1;\r\n            }\r\n            const newColor = { r: result.rgb.r, g: result.rgb.g, b: result.rgb.b, a: alpha };\r\n            setColor(newColor);\r\n            (document.getElementById(props.id) as HTMLInputElement).value = `${toHexColor(newColor)}`\r\n            props.onChange(newColor);\r\n        }\r\n    };\r\n\r\n    const handleClick = () => {\r\n        setDisplayColorPicker(!displayColorPicker)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setDisplayColorPicker(false)\r\n    };\r\n    const popover: CSSProperties = {\r\n        position: 'fixed',\r\n        zIndex: 4\r\n    }\r\n\r\n    const cover: CSSProperties = {\r\n        position: 'fixed',\r\n        top: '0px',\r\n        right: '0px',\r\n        bottom: '0px',\r\n        left: '0px',\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                {displayColorPicker ? <div style={popover}>\r\n                    <div style={cover} onClick={handleClose} />\r\n                    <div ref={\r\n                        (e) => {\r\n                            if (e !== null) {\r\n                                e.style.transform = `translateY(${-e.clientHeight - 8}px)`;\r\n                            }\r\n                        }}>\r\n                        <ChromePicker\r\n                            color={{ r: color.r, g: color.g, b: color.b, a: color.a }}\r\n                            disableAlpha={false}\r\n                            onChangeComplete={handleChange}\r\n                            onChange={handleChange}>\r\n                        </ChromePicker>\r\n                    </div>\r\n                </div> : null}\r\n                <ReactiveTextField\r\n                    className={classes.root}\r\n                    id={props.id}\r\n                    label={props.title}\r\n                    text={toHexColor(color)}\r\n                    type=\"text\"\r\n                    onClick={handleClick}\r\n                    onChange={(e) => {\r\n                        (e.target as HTMLInputElement).oninput = null;\r\n                        const newColor = toRGBAColor(e.target.value);\r\n                        setColor(newColor);\r\n                        props.onChange(newColor);\r\n                    }}></ReactiveTextField>\r\n            </div>\r\n        </div >\r\n    );\r\n}","const UPDATE_FILL_COLOR = \"UPDATE_FILL_COLOR\";\r\nexport default UPDATE_FILL_COLOR;","const UPDATE_STROKE_COLOR = \"UPDATE_STROKE_COLOR\";\r\nexport default UPDATE_STROKE_COLOR;","const UPDATE_STROKE_WIDTH = \"UPDATE_STROKE_WIDTH\";\r\nexport default UPDATE_STROKE_WIDTH;","const UPDATE_TEXT_COLOR = \"UPDATE_TEXT_COLOR\";\r\nexport default UPDATE_TEXT_COLOR;","const UPDATE_TEXT_SIZE = \"UPDATE_TEXT_SIZE\";\r\nexport default UPDATE_TEXT_SIZE;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport TextColorPicker from '../components/colopicker/TextColorPicker';\r\nimport ReactiveTextField from '../components/reactivetextfield/ReactiveTextField';\r\nimport { ToolType } from '../components/tool/Tools';\r\nimport updateFillColor from '../store/actionCreators/updateFillColor';\r\nimport updateStrokeColor from '../store/actionCreators/updateStrokeColor';\r\nimport updateStrokeWidth from '../store/actionCreators/updateStrokeWidth';\r\nimport updateTextColor from '../store/actionCreators/updateTextColor';\r\nimport updateTextSize from '../store/actionCreators/updateTextSize';\r\nimport { ObjectState } from '../viewmodel/ObjectState';\r\nimport { ViewModel } from '../viewmodel/ViewModel';\r\nimport './ObjectParams.css';\r\nimport useStyles from './ObjectParamsStyle';\r\n\r\nfunction ObjectParams() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const objectState: ObjectState = useSelector(\r\n        (state: ViewModel) => state.objectState\r\n    )\r\n    const tool: ToolType = useSelector(\r\n        (state: ViewModel) => state.currentTool\r\n    )\r\n    return (\r\n        <div className=\"ObjectParams\">\r\n            <div className=\"ParamsList\">\r\n                <TextColorPicker\r\n                    id=\"TextField-fillColor\"\r\n                    title=\"Цвет заливки\"\r\n                    defaultColor={objectState.fillColor}\r\n                    onChange={(color) => {\r\n                        dispatch(updateFillColor(color));\r\n                    }}></TextColorPicker>\r\n                <TextColorPicker\r\n                    id=\"TextField-strokeColor\"\r\n                    title=\"Цвет контура\"\r\n                    defaultColor={objectState.strokeColor}\r\n                    onChange={(color) => {\r\n                        dispatch(updateStrokeColor(color))\r\n                    }}></TextColorPicker>\r\n                <ReactiveTextField\r\n                    className={classes.root}\r\n                    label=\"Толщина контура\"\r\n                    text={`${objectState.strokeWidth}`}\r\n                    min=\"0\"\r\n                    type=\"number\"\r\n                    onChange={(e) => {\r\n                        const strokeWidth = parseInt(e.target.value);\r\n                        dispatch(updateStrokeWidth(strokeWidth))\r\n                    }}></ReactiveTextField>\r\n            </div>\r\n            <div className=\"ParamsList\">\r\n                {tool === ToolType.Text\r\n                    && <ReactiveTextField\r\n                        className={classes.root}\r\n                        label=\"Размер текста\"\r\n                        text={`${objectState.textSize}`}\r\n                        min=\"1\"\r\n                        type=\"number\"\r\n                        onChange={(e) => {\r\n                            dispatch(updateTextSize(parseInt(e.target.value)))\r\n                        }}></ReactiveTextField>\r\n                }\r\n                {tool === ToolType.Text\r\n                    && <TextColorPicker\r\n                        id=\"TextField-textColor\"\r\n                        title=\"Цвет текста\"\r\n                        defaultColor={objectState.textColor}\r\n                        onChange={(color) => {\r\n                            dispatch(updateTextColor(color));\r\n                        }}></TextColorPicker>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ObjectParams;\r\n","export enum Filter {\r\n    Grey, Red, Green, Blue, Brightness, Blur\r\n}","import { RGBAColor } from \"../../structures/RGBAColor\";\r\nimport RGBAColorAction from \"../actions/types/RGBAColorAction\";\r\nimport UPDATE_FILL_COLOR from \"../actions/updateFillColor\";\r\n\r\nexport default function updateFillColor(color: RGBAColor): RGBAColorAction {\r\n    return { \r\n        type: UPDATE_FILL_COLOR,\r\n        value: color\r\n    };\r\n}","import { RGBAColor } from \"../../structures/RGBAColor\";\r\nimport RGBAColorAction from \"../actions/types/RGBAColorAction\";\r\nimport UPDATE_STROKE_COLOR from \"../actions/updateStrokeColor\";\r\n\r\nexport default function updateStrokeColor(value: RGBAColor): RGBAColorAction {\r\n    return { \r\n        type: UPDATE_STROKE_COLOR,\r\n        value: value\r\n    };\r\n}","import NumberAction from \"../actions/types/NumberAction\";\r\nimport UPDATE_STROKE_WIDTH from \"../actions/updateStrokeWidth\";\r\n\r\nexport default function updateStrokeWidth(value: number): NumberAction {\r\n    return { \r\n        type: UPDATE_STROKE_WIDTH,\r\n        value: value\r\n    };\r\n}","import NumberAction from \"../actions/types/NumberAction\";\r\nimport UPDATE_TEXT_SIZE from \"../actions/updateTextSize\";\r\n\r\nexport default function updateTextSize(value: number): NumberAction {\r\n    return { \r\n        type: UPDATE_TEXT_SIZE,\r\n        value: value\r\n    };\r\n}","import { RGBAColor } from \"../../structures/RGBAColor\";\r\nimport RGBAColorAction from \"../actions/types/RGBAColorAction\";\r\nimport UPDATE_TEXT_COLOR from \"../actions/updateTextColor\";\r\n\r\nexport default function updateTextColor(value: RGBAColor): RGBAColorAction {\r\n    return { \r\n        type: UPDATE_TEXT_COLOR,\r\n        value: value\r\n    };\r\n}","import { SvgIcon } from \"@material-ui/core\";\r\nimport React from 'react';\r\n\r\nexport default function FilterIcon() {\r\n\treturn (\r\n\t\t<SvgIcon viewBox=\"0 0 512 512\" style={{ width: \"100%\", height: \"100%\" }}>\r\n\t\t\t<path style={{ fill: \"#FFE17D\" }} d=\"M214.71,306.106v197.626c0,6.139,6.46,10.132,11.951,7.386l61.5-30.75  c5.595-2.798,9.13-8.517,9.13-14.772v-159.49c0-5.702,1.967-11.229,5.568-15.649L473.4,81.157c3.602-4.42,5.568-9.947,5.568-15.649  V16.516C478.968,7.395,471.573,0,462.452,0H49.548c-9.122,0-16.516,7.395-16.516,16.516v48.991c0,5.702,1.967,11.229,5.568,15.649  l170.541,209.3C212.743,294.877,214.71,300.404,214.71,306.106z\" />\r\n\t\t\t<path style={{ fill: \"#FFD164\" }} d=\"M404.355,66.065H198.194c-4.561,0-8.258-3.697-8.258-8.258V0H49.548  c-9.122,0-16.516,7.395-16.516,16.516v48.991c0,5.702,1.967,11.229,5.568,15.649l170.541,209.3c3.602,4.42,5.569,9.948,5.569,15.65  v197.625c0,6.139,6.46,10.132,11.951,7.386l17.105-8.552V305.548c0-4.561,3.697-8.258,8.258-8.258h11.74  c5.474,0,10.593-2.712,13.667-7.242L415.346,86.804C421.33,77.985,415.013,66.065,404.355,66.065z\" />\r\n\t\t\t<path style={{ fill: \"#FFC350\" }} d=\"M123.502,66.065H33.08c0.126,5.502,2.037,10.817,5.52,15.091l170.541,209.3  c1.681,2.064,2.968,4.383,3.903,6.835h6.065c5.821,0,9.814-5.86,7.686-11.278L146.561,81.78  C142.836,72.299,133.688,66.065,123.502,66.065z\" />\r\n\t\t</SvgIcon >\r\n\t);\r\n}\r\n","import {\r\n    ClickAwayListener, createStyles, Grow, IconButton, makeStyles, MenuItem,\r\n    MenuList, Paper, Popper, Theme\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Filter } from '../../structures/Filter';\r\nimport './FilterMenu.css';\r\nimport FilterIcon from './FIltersIcon';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            backgroundColor: \"#9d46ff\",\r\n            color: \"#FFFFFF\",\r\n            fontWeight: 600,\r\n            fontFamily: \"monospace\",\r\n            fontSize: \"16px\",\r\n            margin: \"8px\",\r\n            padding: \"16px\",\r\n            width: \"56px\",\r\n            height: \"56px\",\r\n            '&:hover': {\r\n                backgroundColor: \"#7200ca\"\r\n            }\r\n        },\r\n        paper: {\r\n            marginTop: \"4px\",\r\n            backgroundColor: \"#8eacbbbe\",\r\n            color: \"white\",\r\n        }\r\n    }),\r\n);\r\n\r\ninterface FilterMenuProps {\r\n    onSelect(filter: Filter): void\r\n}\r\n\r\nexport default function FilterMenu(props: FilterMenuProps) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event: React.MouseEvent<EventTarget>) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    function handleListKeyDown(event: React.KeyboardEvent) {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault();\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current!.focus();\r\n        }\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n    return (\r\n        <div className=\"FiltersContainer\">\r\n            <IconButton\r\n                edge=\"end\"\r\n                className={classes.button}\r\n                ref={anchorRef}\r\n                onClick={handleToggle}\r\n                color=\"primary\">\r\n                <FilterIcon></FilterIcon>\r\n            </IconButton>\r\n            <div>\r\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                    {({ TransitionProps, placement }) => (\r\n                        <Grow\r\n                            {...TransitionProps}\r\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}>\r\n                            <Paper className={classes.paper}>\r\n                                <ClickAwayListener onClickAway={handleClose}>\r\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                                        <MenuItem onClick={(e) => { props.onSelect(Filter.Grey); handleClose(e) }}>Серый</MenuItem>\r\n                                        <MenuItem onClick={(e) => { props.onSelect(Filter.Red); handleClose(e) }}>Красный</MenuItem>\r\n                                        <MenuItem onClick={(e) => { props.onSelect(Filter.Green); handleClose(e) }}>Зелёный</MenuItem>\r\n                                        <MenuItem onClick={(e) => { props.onSelect(Filter.Blue); handleClose(e) }}>Синий</MenuItem>\r\n                                        <MenuItem onClick={(e) => { props.onSelect(Filter.Brightness); handleClose(e) }}>Яркость</MenuItem>\r\n                                        <MenuItem onClick={(e) => { props.onSelect(Filter.Blur); handleClose(e) }}>Размытие</MenuItem>\r\n                                    </MenuList>\r\n                                </ClickAwayListener>\r\n                            </Paper>\r\n                        </Grow>\r\n                    )}\r\n                </Popper>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { Editor } from \"../structures/Editor\";\r\nimport { Filter } from \"../structures/Filter\";\r\n\r\nexport function applyFilter(editor: Editor, filter: Filter) {\r\n\tconst newImageData = new ImageData(editor.canvas.width, editor.canvas.height);\r\n\tswitch (filter) {\r\n\t\tcase Filter.Red:\r\n\t\t\tapplyColorLevelFilter(editor.canvas, newImageData, [1, 0, 0, 1]);\r\n\t\t\tbreak;\r\n\t\tcase Filter.Green:\r\n\t\t\tapplyColorLevelFilter(editor.canvas, newImageData, [0, 1, 0, 1]);\r\n\t\t\tbreak\r\n\t\tcase Filter.Blue:\r\n\t\t\tapplyColorLevelFilter(editor.canvas, newImageData, [0, 0, 1, 1]);\r\n\t\t\tbreak\r\n\t\tcase Filter.Grey:\r\n\t\t\tapplyGreyFilter(editor.canvas, newImageData);\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tconst newEditor: Editor = {\r\n\t\t...editor,\r\n\t\tcanvas: newImageData,\r\n\t};\r\n\treturn newEditor;\r\n}\r\n\r\nfunction applyColorLevelFilter(src: ImageData, dst: ImageData, colorLevels: Array<number>) {\r\n\tfor (var i = 0; i < dst.height; i++) {\r\n\t\tfor (var j = 0; j < dst.width; j++) {\r\n\t\t\tvar dataIndex = (i * dst.width + j) * 4;\r\n\t\t\tfor (var k = 0; k < 4; k++) {\r\n\t\t\t\tdst.data[dataIndex + k] = src.data[dataIndex + k] * colorLevels[k];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyGreyFilter(src: ImageData, dst: ImageData) {\r\n\tfor (var i = 0; i < dst.height; i++) {\r\n\t\tfor (var j = 0; j < dst.width; j++) {\r\n\t\t\tvar dataIndex = (i * dst.width + j) * 4;\r\n\t\t\tvar mean = (src.data[dataIndex] + src.data[dataIndex + 1] + src.data[dataIndex + 2]) / 3;\r\n\t\t\tfor (var k = 0; k < 3; k++) {\r\n\t\t\t\tdst.data[dataIndex + k] = mean;\r\n            }\r\n            dst.data[dataIndex + 3] = src.data[dataIndex + 3];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport function applyBrightnessFilter(editor: Editor, brightnessFactor: number): Editor {\r\n    const dst = new ImageData(editor.canvas.width, editor.canvas.height);\r\n\tconst src = editor.canvas;\r\n\tfor (var i = 0; i < dst.height; i++) {\r\n\t\tfor (var j = 0; j < dst.width; j++) {\r\n\t\t\tvar dataIndex = (i * dst.width + j) * 4;\r\n\t\t\tfor (var k = 0; k < 3; k++) {\r\n\t\t\t\tdst.data[dataIndex + k] = src.data[dataIndex + k] * brightnessFactor;\r\n            }\r\n            dst.data[dataIndex + 3] = src.data[dataIndex + 3];\r\n\t\t}\r\n    }\r\n    const newEditor: Editor = {\r\n\t\tselectedObject: null,\r\n\t\tcanvas: dst,\r\n\t};\r\n\treturn newEditor;\r\n}\r\n","import { createStyles, Fab, makeStyles, Slider, SvgIcon, Theme } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport './BrightnessSlider.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        fab: {\r\n            marginLeft: \"24px\",\r\n        },\r\n        slider: {\r\n            width: \"350px\"\r\n        }\r\n    }),\r\n);\r\n\r\ninterface BrightnessSliderProps {\r\n    onChange(value: number): void,\r\n    onApply(value: number): void\r\n}\r\n\r\nexport default function BrightnessSlider({ onApply, onChange }: BrightnessSliderProps) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState<number>(1)\r\n    return (\r\n        <div className='BrightnessSlider-container'>\r\n            <div className='BrightnessSlider-center'>\r\n                <Slider\r\n                    className={classes.slider}\r\n                    defaultValue={1}\r\n                    aria-labelledby=\"discrete-slider-custom\"\r\n                    step={0.01}\r\n                    min={0}\r\n                    max={4}\r\n                    valueLabelDisplay=\"auto\"\r\n                    onChange={(e, newValue) => {\r\n                        const num = newValue as number;\r\n                        setValue(num);\r\n                        onChange(num)\r\n                    }}\r\n                />\r\n                <Fab color=\"primary\" aria-label=\"add\"\r\n                    size=\"small\"\r\n                    className={classes.fab}\r\n                    onClick={(e) => onApply(value)}>\r\n                    <SvgIcon>\r\n                        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\r\n                    </SvgIcon>\r\n                </Fab>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useState } from \"react\";\r\n\r\nexport function useTimeout() {\r\n    const [isTimerStarted, setTimerStarted] = useState<Boolean>(false);\r\n    return (ms: number, action: Function) => {\r\n        if (!isTimerStarted) {\r\n            setTimerStarted(true);\r\n            setTimeout(() => {\r\n                action();\r\n                setTimerStarted(false);\r\n            }, ms);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport '../../index.css';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button, createStyles, Dialog, IconButton, Slide, Theme, Typography, withStyles, WithStyles } from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            margin: 0,\r\n            padding: theme.spacing(2),\r\n        },\r\n        closeButton: {\r\n            position: 'absolute',\r\n            right: theme.spacing(1),\r\n            top: theme.spacing(1),\r\n            color: theme.palette.grey[500],\r\n        },\r\n        title: {\r\n            fontFamily: \"cursive\"\r\n        }\r\n    });\r\n\r\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\r\n    id: string;\r\n    children: React.ReactNode;\r\n    onClose: () => void;\r\n}\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography className={classes.title} variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n    ref: React.Ref<unknown>,\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\ninterface PasteArtDialogProps {\r\n    isOpen: boolean,\r\n    onSaveSize: Function,\r\n    onChangeSize: Function,\r\n    onClose: Function\r\n}\r\n\r\nexport default function PasteArtDialog(props: PasteArtDialogProps) {\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                TransitionComponent={Transition}\r\n                onClose={() => props.onClose()}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={props.isOpen}>\r\n                <DialogTitle id=\"customized-dialog-title\"\r\n                    onClose={() => props.onClose()}>\r\n                    Выберите действие\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Button autoFocus onClick={() => {\r\n                        props.onSaveSize();\r\n                        props.onClose()\r\n                    }} color=\"primary\">\r\n                        Сохранить размер полотна\r\n                    </Button>\r\n                    <Button autoFocus onClick={() => {\r\n                        props.onChangeSize();\r\n                        props.onClose();\r\n                    }} color=\"primary\">\r\n                        Изменить размер полотна\r\n                    </Button>\r\n                    <Button autoFocus onClick={() => props.onClose()} color=\"primary\">\r\n                        Отмена\r\n                    </Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","const UNDO_HISTORY = \"UNDO_HISTORY\";\r\nexport default UNDO_HISTORY;","import { Action } from \"redux\";\r\nimport UNDO_HISTORY from \"../actions/undoHistory\";\r\n\r\nfunction undoHistory(): Action {\r\n    return {\r\n        type: UNDO_HISTORY,\r\n    };\r\n}\r\n\r\nexport default undoHistory;","const REDO_HISTORY = \"REDO_HISTORY\";\r\nexport default REDO_HISTORY;","import { Action } from \"redux\";\r\nimport REDO_HISTORY from \"../actions/redoHistory\";\r\n\r\nfunction redoHistory(): Action {\r\n    return {\r\n        type: REDO_HISTORY,\r\n    };\r\n}\r\n\r\nexport default redoHistory;","const EDIT_CANVAS_SIZE = \"EDIT_CANVAS_SIZE\";\r\nexport default EDIT_CANVAS_SIZE;","import { Vector2 } from \"../../structures/Vector2\";\r\nimport EDIT_CANVAS_SIZE from \"../actions/editCanvasSize\";\r\nimport Vector2Action from \"../actions/types/Vector2Action\";\r\n\r\nfunction editCanvasSize(size: Vector2): Vector2Action {\r\n    return {\r\n        type: EDIT_CANVAS_SIZE,\r\n        value: size\r\n    };\r\n}\r\n\r\nexport default editCanvasSize;","const APPLY_FILTER = \"APPLY_FILTER\";\r\nexport default APPLY_FILTER;\r\n","import { Filter } from \"../../structures/Filter\";\r\nimport APPLY_FILTER from \"../actions/applyFilter\";\r\nimport FilterAction from \"../actions/types/FilterAction\";\r\n\r\nfunction applyFilter(filter: Filter): FilterAction {\r\n    return {\r\n        type: APPLY_FILTER,\r\n        value: filter\r\n    };\r\n}\r\n\r\nexport default applyFilter;","const CREATE_NEW_CANVAS = \"CREATE_NEW_CANVAS\";\r\nexport default CREATE_NEW_CANVAS;\r\n","import { Vector2 } from \"../../structures/Vector2\";\r\nimport CREATE_NEW_CANVAS from \"../actions/createNewCanvas\";\r\nimport Vector2Action from \"../actions/types/Vector2Action\";\r\n\r\nfunction createNewCanvas(size: Vector2): Vector2Action {\r\n    return {\r\n        type: CREATE_NEW_CANVAS,\r\n        value: size\r\n    };\r\n}\r\n\r\nexport default createNewCanvas;\r\n","import React from 'react';\r\nimport '../../index.css';\r\nimport {\r\n    Button, createStyles, FormControl,\r\n    FormControlLabel, FormLabel, IconButton,\r\n    makeStyles, Radio, RadioGroup, Slider, SvgIcon\r\n} from '@material-ui/core';\r\nimport { ExportFormat, formatToString } from '../../structures/ExportFormat';\r\nimport ReactiveDialog from '../reactivedialog/ReactiveDialog';\r\n\r\ninterface ExportDialogProps {\r\n    onApply(format: ExportFormat, quality: number): void\r\n}\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        slider: {\r\n            width: \"272px\",\r\n            margin: \"8px 8px 0 8px\",\r\n        },\r\n        quality_label: {\r\n            color: \"#FFFFFFa5\",\r\n            marginTop: \"16px\",\r\n            \"&.Mui-focused\": {\r\n                color: \"#FFFFFFa5\"\r\n            }\r\n        },\r\n        label: {\r\n            color: \"#FFFFFFa5\",\r\n            \"&.Mui-focused\": {\r\n                color: \"#FFFFFFa5\",\r\n            }\r\n        },\r\n        radioGroup: {\r\n            marginTop: \"8px\",\r\n            flexDirection: \"row\"\r\n        },\r\n        radio: {\r\n            color: \"#FFFFFF8a\"\r\n        }\r\n    }),\r\n);\r\n\r\nexport default function ExportDialog(props: ExportDialogProps) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [format, setFormat] = React.useState<ExportFormat>(ExportFormat.JPEG);\r\n    const [quality, setQuality] = React.useState<number>(90);\r\n    const handleCloseAndCreate = () => {\r\n        handleClose();\r\n        props.onApply(format, quality);\r\n    };\r\n\r\n    const handleFormatChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const newFormat = (event.target as HTMLInputElement).value;\r\n        switch (newFormat) {\r\n            case \"jpeg\":\r\n                setFormat(ExportFormat.JPEG);\r\n                break;\r\n            case \"png\":\r\n                setFormat(ExportFormat.PNG);\r\n                break;\r\n            default:\r\n                throw new Error();\r\n        }\r\n    };\r\n\r\n    const handleQualityChange = (v: number) => {\r\n        setQuality(v);\r\n    };\r\n    return (\r\n        <div>\r\n            <IconButton\r\n                color=\"inherit\"\r\n                onClick={handleClickOpen}>\r\n                <SvgIcon>\r\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                    <path d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\" />\r\n                </SvgIcon>\r\n            </IconButton>\r\n            <ReactiveDialog\r\n                isOpen={open}\r\n                onClose={() => handleClose()}\r\n                title=\"Сохранение\"\r\n                actions={() => {\r\n                    return (\r\n                        <Button autoFocus onClick={handleCloseAndCreate} color=\"secondary\">\r\n                            Сохранить\r\n                        </Button>\r\n                    );\r\n                }}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel\r\n                        component=\"legend\"\r\n                        classes={{ root: classes.label }}>Формат</FormLabel>\r\n                    <RadioGroup\r\n                        className={classes.radioGroup}\r\n                        aria-orientation=\"horizontal\"\r\n                        aria-label=\"format\"\r\n                        name=\"format1\"\r\n                        value={formatToString(format)}\r\n                        onChange={handleFormatChange}>\r\n                        <FormControlLabel\r\n                            value=\"jpeg\"\r\n                            control={<Radio className={classes.radio} />}\r\n                            label=\"JPEG\" />\r\n                        <FormControlLabel\r\n                            value=\"png\"\r\n                            control={<Radio className={classes.radio} />}\r\n                            label=\"PNG\" />\r\n                    </RadioGroup>\r\n                    <FormLabel\r\n                        component=\"legend\"\r\n                        classes={{ root: classes.quality_label }}>Качество</FormLabel>\r\n                    <Slider\r\n                        className={classes.slider}\r\n                        defaultValue={90}\r\n                        aria-labelledby=\"discrete-slider-custom\"\r\n                        step={1}\r\n                        min={1}\r\n                        max={100}\r\n                        valueLabelDisplay=\"auto\"\r\n                        onChange={(e, newValue) => {\r\n                            const num = newValue as number;\r\n                            handleQualityChange(num);\r\n                        }}\r\n                    />\r\n                </FormControl>\r\n            </ReactiveDialog>\r\n        </div>\r\n    );\r\n}\r\n","export enum ImportType {\r\n    STORAGE, PEXELS, WEB_CAMERA\r\n}","import React from 'react';\r\nimport '../../index.css';\r\nimport {\r\n    IconButton, List, ListItem,\r\n    ListItemIcon, ListItemText, SvgIcon\r\n} from '@material-ui/core';\r\nimport { ImportType } from '../../structures/ImportType';\r\nimport ReactiveDialog from '../reactivedialog/ReactiveDialog';\r\n\r\ninterface ImportDialogProps {\r\n    onApply(importType: ImportType): void\r\n}\r\n\r\nexport default function ImportDialog(props: ImportDialogProps) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClickOpenWithAction = (type: ImportType) => {\r\n        props.onApply(type);\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IconButton\r\n                color=\"inherit\"\r\n                onClick={handleClickOpen}>\r\n                <SvgIcon viewBox=\"0 0 24 24\">\r\n                    <path d=\"M8 11h3v10h2V11h3l-4-4-4 4zM4 3v2h16V3H4z\" />\r\n                </SvgIcon>\r\n            </IconButton>\r\n            <ReactiveDialog\r\n                isOpen={open}\r\n                title=\"Вставка изображения\"\r\n                onClose={handleClose}\r\n                paperStyle={{\r\n                    width: \"320px\",\r\n                }}>\r\n                <List\r\n                    style={{\r\n                        color: \"#FFFFFFa5\"\r\n                    }}\r\n                    component=\"nav\" aria-label=\"\">\r\n                    <ListItem button onClick={() => handleClickOpenWithAction(ImportType.STORAGE)}>\r\n                        <ListItemIcon>\r\n                            <SvgIcon viewBox=\"0 0 24 24\">\r\n                                <path\r\n                                    fill=\"#F5F5F58a\"\r\n                                    d=\"M21 2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7v2H8v2h8v-2h-2v-2h7c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H3V4h18v12z\" />\r\n                            </SvgIcon>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Компьютер\" />\r\n                    </ListItem>\r\n                    <ListItem button onClick={() => handleClickOpenWithAction(ImportType.PEXELS)}>\r\n                        <ListItemIcon>\r\n                            <SvgIcon viewBox=\"0 0 32 32\">\r\n                                <path d=\"M2 0h28a2 2 0 0 1 2 2v28a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2z\"\r\n                                    fill=\"#05A081\" />\r\n                                <path d=\"M13 21h3.863v-3.752h1.167a3.124 3.124 0 1 0 0-6.248H13v10zm5.863 2H11V9h7.03a5.124 5.124 0 0 1 .833 10.18V23z\"\r\n                                    fill=\"#fff\" />\r\n                            </SvgIcon>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Сервис Pexels\" />\r\n                    </ListItem>\r\n                    <ListItem button onClick={() => handleClickOpenWithAction(ImportType.WEB_CAMERA)}>\r\n                        <ListItemIcon>\r\n                            <SvgIcon viewBox=\"0 0 24 24\">\r\n                                <path\r\n                                    fill=\"#F5F5F58a\"\r\n                                    d=\"M9.4 10.5l4.77-8.26C13.47 2.09 12.75 2 12 \r\n                                        2c-2.4 0-4.6.85-6.32 2.25l3.66 6.35.06-.1zM21.54 \r\n                                        9c-.92-2.92-3.15-5.26-6-6.34L11.88 9h9.66zm.26 1h-7.49l.29.5 \r\n                                        4.76 8.25C21 16.97 22 14.61 22 12c0-.69-.07-1.35-.2-2zM8.54 \r\n                                        12l-3.9-6.75C3.01 7.03 2 9.39 2 12c0 .69.07 1.35.2 \r\n                                        2h7.49l-1.15-2zm-6.08 3c.92 2.92 3.15 5.26 6 6.34L12.12 \r\n                                        15H2.46zm11.27 0l-3.9 6.76c.7.15 1.42.24 2.17.24 \r\n                                        2.4 0 4.6-.85 6.32-2.25l-3.66-6.35-.93 1.6z\" />\r\n                            </SvgIcon>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Веб-камера\" />\r\n                    </ListItem>\r\n                </List>\r\n            </ReactiveDialog>\r\n        </div>\r\n    );\r\n}\r\n","import { createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        searchContainer: {\r\n            width: \"100%\",\r\n            display: \"inline-flex\",\r\n            textAlign: \"center\"\r\n        },\r\n        searchField: {\r\n            width: \"40%\",\r\n            marginLeft: \"auto\",\r\n            borderRadius: \"24px\"\r\n        },\r\n        searchButtonWrapper: {\r\n            display: \"flex\",\r\n            width: \"fit-content\",\r\n            height: \"fit-content\",\r\n            margin: \"auto auto auto 8px\",\r\n            borderRadius: \"50%\",\r\n            backgroundColor: \"#cfcfcf21\",\r\n            boxShadow: \"4px 4px 16px #55555521, -4px -4px 16px #ffffff21\"\r\n        },\r\n        photoLineContainer: {\r\n            display: \"inline-block\",\r\n            position: \"relative\",\r\n            verticalAlign: \"top\",\r\n            width: \"24%\",\r\n        },\r\n        searchResultsWrapper: {\r\n            textAlign: \"start\",\r\n            margin: \"auto\",\r\n            width: \"69%\",\r\n            color: \"#FFFFFFd0\",\r\n            font: \"24px cursive\"\r\n        },\r\n        error: {\r\n            margin: \"16px auto 0 auto\",\r\n            width: \"fit-content\"\r\n        },\r\n        photo: {\r\n            cursor: \"pointer\"\r\n        }\r\n    }));\r\n\r\nexport default useStyles;","import { createClient, Photo, Photos } from \"pexels\";\r\nimport { PhotosWithTotalResults, ErrorResponse } from \"pexels\";\r\n\r\nconst client = createClient('563492ad6f917000010000011d7c21ba52c34f0abbefd675f9034e42');\r\nconst PHOTOS_AT_TIME = 9;\r\n\r\nfunction handleQuery(\r\n    response: Photos | PhotosWithTotalResults | ErrorResponse,\r\n    onQueryResult: (photos: Photo[]) => void, onError: () => void) {\r\n\r\n    if ((response as ErrorResponse).error === \"Rate limit exceeded\") {\r\n        onError();\r\n        return;\r\n    }\r\n    const res = response as PhotosWithTotalResults;\r\n    onQueryResult(res.photos);\r\n}\r\n\r\nexport function query(queryText: string, page: number,\r\n    onQueryResult: (photos: Photo[]) => void,\r\n    onError: () => void,\r\n    onProgress: (percentage: number) => void) {\r\n    if (queryText === \"\") {\r\n        client.photos.curated({\r\n            query: queryText,\r\n            per_page: PHOTOS_AT_TIME,\r\n            page: page,\r\n            locale: \"ru-RU\"\r\n        }).then(response => {\r\n            handleQuery(response, onQueryResult, onError);\r\n        })\r\n    } else {\r\n        client.photos.search({\r\n            query: queryText,\r\n            per_page: PHOTOS_AT_TIME,\r\n            page: page,\r\n            locale: \"ru-RU\"\r\n        }).then(response => {\r\n            handleQuery(response, onQueryResult, onError);\r\n        });\r\n    }\r\n}\r\n","import { IconButton } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ReactiveDialog from \"../reactivedialog/ReactiveDialog\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport useStyles from \"./PexelsSearchDialogStyle\";\r\nimport ReactiveTextField from \"../reactivetextfield/ReactiveTextField\";\r\nimport { query } from \"./PexelsManager\";\r\nimport { Photo } from \"pexels\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useTimeout } from \"../timeout/Timeout\";\r\nimport { importImageUrl } from \"../../helper/CanvasHelper\";\r\nimport { Art } from \"../../structures/Art\";\r\n\r\ninterface PexelsArtDialogProps {\r\n    isOpen: boolean,\r\n    onClose: Function,\r\n    onApply: (art: Art) => void\r\n}\r\n\r\nexport default function PexelsSearchDialog(props: PexelsArtDialogProps) {\r\n    const classes = useStyles();\r\n\r\n    const [isRateLimitExceeded, setRateLimitExceeded] = useState<boolean>(false);\r\n    const [isErrorShown, setErrorShown] = useState<boolean>(false);\r\n\r\n    const [page, setPage] = useState<number>(0);\r\n    const [queryText, setQueryText] = useState<string>(\"\");\r\n    const [loadedPhotos, setLoadedPhotos] = useState<Photo[]>([]);\r\n\r\n    const timeout = useTimeout();\r\n\r\n    const handleSearch = () => {\r\n        query(queryText, page, (photos) => {\r\n            if (isRateLimitExceeded) {\r\n                setRateLimitExceeded(false);\r\n            }\r\n            setPage(page + 1);\r\n            if (page > 1) {\r\n                setLoadedPhotos(loadedPhotos.concat(photos));\r\n            } else {\r\n                setLoadedPhotos(photos);\r\n            }\r\n        }, () => {\r\n            console.log(\"Превышен лимит запросов\");\r\n            if (!isRateLimitExceeded) {\r\n                setRateLimitExceeded(true);\r\n            }\r\n            setErrorShown(true);\r\n            timeout(3000, () => {\r\n                setErrorShown(false)\r\n            });\r\n        }, (percentage) => {\r\n            \r\n        });\r\n    }\r\n\r\n    const handleNewSearch = () => {\r\n        setPage(0);\r\n        handleSearch();\r\n    }\r\n\r\n    const handleImageClick = (photo: Photo) => {\r\n        importImageUrl(photo.src.original, (art) => {\r\n            props.onApply(art);\r\n        })\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.onClose();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const listener = (e: KeyboardEvent) => {\r\n            if (e.key === \"Enter\") {\r\n                handleNewSearch();\r\n            }\r\n        };\r\n        window.addEventListener(\"keydown\", listener);\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", listener);\r\n        }\r\n    });\r\n    return (\r\n        <ReactiveDialog\r\n            title=\"Поиск картинок в Pexels\"\r\n            paperStyle={{\r\n                width: \"72%\",\r\n                maxWidth: \"72%\"\r\n            }}\r\n            contentStyle={{\r\n                textAlign: \"center\"\r\n            }}\r\n            isOpen={props.isOpen}\r\n            onScroll={(e) => {\r\n                const div = e.currentTarget;\r\n                if (div.offsetHeight + div.scrollTop >= div.scrollHeight) {\r\n                    handleSearch();\r\n                }\r\n            }}\r\n            onClose={() => handleClose()}>\r\n            <div className={classes.searchContainer}>\r\n                <ReactiveTextField\r\n                    className={classes.searchField}\r\n                    text={queryText}\r\n                    type=\"text\"\r\n                    label=\"Поиск\"\r\n                    autocomplete=\"off\"\r\n                    onChange={(e) => {\r\n                        setQueryText(e.target.value)\r\n                    }} />\r\n                <div className={classes.searchButtonWrapper}>\r\n                    <IconButton\r\n                        type=\"submit\"\r\n                        aria-label=\"search\"\r\n                        onClick={() => handleNewSearch()}>\r\n                        <SearchIcon\r\n                            htmlColor=\"#FFFFFF8a\" />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            {(loadedPhotos.length > 0 && !isRateLimitExceeded) &&\r\n                <div className={classes.searchResultsWrapper}>\r\n                    <h5>Результаты запроса</h5>\r\n                </div>}\r\n            {isErrorShown &&\r\n                <Alert\r\n                    className={classes.error}\r\n                    variant=\"filled\" severity=\"error\">\r\n                    Достигнут лимит запросов. Подождите некоторое время\r\n              </Alert>}\r\n            <div>\r\n                <div className={classes.photoLineContainer}>\r\n                    {loadedPhotos.map((photo, index) => {\r\n                        return getHorizontalPosition(loadedPhotos, index) === 0 &&\r\n                            <img\r\n                                className={classes.photo}\r\n                                onClick={() => handleImageClick(photo)}\r\n                                key={photo.id}\r\n                                src={photo.src.medium}\r\n                                alt={\"Автор: \" + photo.photographer}\r\n                                width=\"98%\" />\r\n                    })}\r\n                </div>\r\n\r\n                <div className={classes.photoLineContainer}>\r\n                    {loadedPhotos.map((photo, index) => {\r\n                        return (getHorizontalPosition(loadedPhotos, index) === 1 &&\r\n                            <img\r\n                                className={classes.photo}\r\n                                onClick={() => handleImageClick(photo)}\r\n                                key={photo.id}\r\n                                src={photo.src.medium}\r\n                                alt={\"Автор: \" + photo.photographer}\r\n                                width=\"98%\" />)\r\n                    })}\r\n                </div>\r\n\r\n                <div className={classes.photoLineContainer}>\r\n                    {loadedPhotos.map((photo, index) => {\r\n                        return (getHorizontalPosition(loadedPhotos, index) === 2 &&\r\n                            <img\r\n                                className={classes.photo}\r\n                                onClick={() => handleImageClick(photo)}\r\n                                key={photo.id}\r\n                                src={photo.src.medium}\r\n                                alt={\"Автор: \" + photo.photographer}\r\n                                width=\"98%\" />)\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </ReactiveDialog>\r\n    );\r\n}\r\n\r\nfunction getHorizontalPosition(photos: Photo[], index: number): number {\r\n    const startBlockIndex = index - index % 3;\r\n    const photo1 = photos[startBlockIndex].height / photos[startBlockIndex].width;\r\n    const photo2 = photos[startBlockIndex + 1].height / photos[startBlockIndex + 1].width;\r\n    const photo3 = photos[startBlockIndex + 2].height / photos[startBlockIndex + 2].width;\r\n    const sortedIndices = [3];\r\n    if (photo1 <= photo2) {\r\n        if (photo2 <= photo3) {\r\n            sortedIndices[0] = 0;\r\n            sortedIndices[1] = 1;\r\n            sortedIndices[2] = 2;\r\n        } else {\r\n            if (photo3 < photo1) {\r\n                sortedIndices[0] = 2;\r\n                sortedIndices[1] = 0;\r\n            } else {\r\n                sortedIndices[0] = 0;\r\n                sortedIndices[1] = 2;\r\n            }\r\n            sortedIndices[2] = 1;\r\n        }\r\n    } else {\r\n        if (photo1 <= photo3) {\r\n            sortedIndices[0] = 1;\r\n            sortedIndices[1] = 0;\r\n            sortedIndices[2] = 2;\r\n        } else {\r\n            if (photo3 < photo2) {\r\n                sortedIndices[0] = 2;\r\n                sortedIndices[1] = 1;\r\n            } else {\r\n                sortedIndices[0] = 1;\r\n                sortedIndices[1] = 2;\r\n            }\r\n            sortedIndices[2] = 0;\r\n        }\r\n    }\r\n    const newIndex = (index - (-Math.floor(index / 3 + 1) % 3) + 3) % 3;\r\n    console.log(startBlockIndex + \"- \" + index + \": \" + newIndex + \" & \" + Math.round(index / 3 + 1));\r\n    return sortedIndices[newIndex];\r\n}","import React, { useEffect, useState } from 'react';\r\nimport styles from './App.module.css';\r\nimport SelectSizePopup from './components/selectsizepopup/SelectSizeDialog';\r\nimport Canvas from './components/canvas/Canvas';\r\nimport ObjectParams from './objectparams/ObjectParams';\r\nimport { exportObject, importObject } from './helper/CanvasHelper';\r\nimport './structures/Vector2';\r\nimport Tools, { ToolType } from './components/tool/Tools';\r\nimport { Editor } from './structures/Editor';\r\nimport { AppBar, Box, SvgIcon, Toolbar, Typography } from '@material-ui/core';\r\nimport { createStyles, makeStyles, Theme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { Art } from './structures/Art';\r\nimport FilterMenu from './components/filtermenu/FilterMenu';\r\nimport { applyBrightnessFilter } from './helper/FilterHelper';\r\nimport { Filter } from './structures/Filter';\r\nimport BrightnessSlider from './components/brightslider/BrightnessSlider';\r\nimport { useTimeout } from './components/timeout/Timeout';\r\nimport PasteArtDialog from './components/pasteartdialog/PasteArtDialog';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { ViewModel } from './viewmodel/ViewModel';\r\nimport undoHistory from './store/actionCreators/undoHistory';\r\nimport redoHistory from './store/actionCreators/redoHistory';\r\nimport actionReplaceSelectedObject from './store/actionCreators/actionReplaceSelectedObject';\r\nimport setEditor from './store/actionCreators/setEditor';\r\nimport pushToHistory from './store/actionCreators/pushToHistory';\r\nimport editCanvasSize from './store/actionCreators/editCanvasSize';\r\nimport applyFilter from './store/actionCreators/applyFilter';\r\nimport createNewCanvas from './store/actionCreators/createNewCanvas';\r\nimport { replaceSelectedObject } from './helper/EditorHelper';\r\nimport { purple, red } from '@material-ui/core/colors';\r\nimport ExportDialog from './components/exportdialog/ExportDialog';\r\nimport ImportDialog from './components/importdialog/ImportDialog';\r\nimport { ImportType } from './structures/ImportType';\r\nimport PexelsSearchDialog from './components/pexelsartdialog/PexelsSearchDialog';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: purple[\"A700\"],\r\n        },\r\n        secondary: {\r\n            main: purple[\"A700\"],\r\n            light: red[\"A400\"],\r\n        },\r\n    }\r\n});\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n            width: \"100%\"\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n            textAlign: \"start\",\r\n            fontFamily: \"cursive\"\r\n        }\r\n    }),\r\n);\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n    const timeout = useTimeout();\r\n    const dispatch = useDispatch();\r\n\r\n    const editor: Editor = useSelector(\r\n        (state: ViewModel) => state.editor,\r\n        shallowEqual\r\n    )\r\n    const currentTool: ToolType = useSelector(\r\n        (state: ViewModel) => state.currentTool\r\n    )\r\n\r\n    const [isBrightSliderShown, setBrightSliderShown] = useState(false);\r\n    const [tempEditor, setTempEditor] = useState<Editor | null>(null);\r\n    const [isPasteArtDialogOpen, setPasteArtDialogOpen] = useState(false);\r\n    const [isPexelsArtDialogOpen, setPexelsArtDialogOpen] = useState(false);\r\n    const [pasteArt, setPasteArt] = useState<Art | null>(null);\r\n\r\n    useEffect(() => {\r\n        const listener = (e: KeyboardEvent) => {\r\n            if (e.ctrlKey) {\r\n                if (e.code === \"KeyZ\") {\r\n                    dispatch(undoHistory());\r\n                } else if (e.code === \"KeyY\") {\r\n                    dispatch(redoHistory());\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener(\"keydown\", listener)\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", listener);\r\n        }\r\n    })\r\n    return (\r\n        <div className={styles.App}\r\n            id=\"App\">\r\n            <ThemeProvider theme={theme}>\r\n                <Canvas></Canvas>\r\n                <Box position=\"fixed\" className={classes.root}>\r\n                    <AppBar position=\"static\" style={{ background: \"#6200ea\" }}>\r\n                        <Toolbar>\r\n                            <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\r\n                                Reactive Photo Editor\r\n                            </Typography>\r\n                            <SelectSizePopup\r\n                                applyText=\"Создать\"\r\n                                action={createNewCanvas({ x: 0, y: 0 })}>\r\n                                <SvgIcon>\r\n                                    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                                    <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\r\n                                </SvgIcon>\r\n                            </SelectSizePopup>\r\n                            <SelectSizePopup\r\n                                applyText=\"Изменить\"\r\n                                action={editCanvasSize({ x: 0, y: 0 })}>\r\n                                <SvgIcon>\r\n                                    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                                    <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" />\r\n                                </SvgIcon>\r\n                            </SelectSizePopup>\r\n                            <ImportDialog\r\n                                onApply={(type) => {\r\n                                    switch (type) {\r\n                                        case ImportType.STORAGE:\r\n                                            importObject((art: Art) => {\r\n                                                setPasteArt(art);\r\n                                                setPasteArtDialogOpen(true);\r\n                                            })\r\n                                            break;\r\n                                        case ImportType.PEXELS:\r\n                                            setPexelsArtDialogOpen(true);\r\n                                            break;\r\n                                    }\r\n                                }}\r\n                            ></ImportDialog>\r\n                            <ExportDialog\r\n                                onApply={(format, quality) => {\r\n                                    const newEditor = replaceSelectedObject(editor, null);\r\n                                    exportObject(newEditor.canvas, format, quality);\r\n                                }}></ExportDialog>\r\n                            <PasteArtDialog\r\n                                isOpen={isPasteArtDialogOpen}\r\n                                onSaveSize={() => {\r\n                                    const isPushToHistory = editor.selectedObject !== null;\r\n                                    const historyCanvas = editor.canvas;\r\n                                    dispatch(actionReplaceSelectedObject(pasteArt));\r\n                                    if (isPushToHistory) {\r\n                                        dispatch(pushToHistory(historyCanvas));\r\n                                    }\r\n                                }}\r\n                                onChangeSize={() => {\r\n                                    const isPushToHistory = editor.selectedObject !== null;\r\n                                    const historyCanvas = editor.canvas;\r\n                                    if (pasteArt === null) {\r\n                                        throw new Error();\r\n                                    }\r\n                                    dispatch(editCanvasSize(pasteArt.size));\r\n                                    dispatch(actionReplaceSelectedObject(pasteArt));\r\n                                    if (isPushToHistory) {\r\n                                        dispatch(pushToHistory(historyCanvas));\r\n                                    }\r\n                                }}\r\n                                onClose={() => {\r\n                                    setPasteArtDialogOpen(false);\r\n                                    setPasteArt(null);\r\n                                }}></PasteArtDialog>\r\n                            <PexelsSearchDialog\r\n                                isOpen={isPexelsArtDialogOpen}\r\n                                onClose={() => {\r\n                                    setPexelsArtDialogOpen(false);\r\n                                }}\r\n                                onApply={(art) => {\r\n                                    setPasteArt(art);\r\n                                    setPasteArtDialogOpen(false);\r\n                                }}\r\n                            ></PexelsSearchDialog>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Tools onSelected={() => {\r\n                        if (isBrightSliderShown) {\r\n                            if (tempEditor === null) {\r\n                                throw new Error();\r\n                            }\r\n                            dispatch(setEditor(tempEditor))\r\n                            setBrightSliderShown(false);\r\n                        }\r\n                    }}></Tools>\r\n                    <FilterMenu\r\n                        onSelect={(filter) => {\r\n                            let temp = editor;\r\n                            if (editor.selectedObject != null) {\r\n                                const newEditor = replaceSelectedObject(editor, null);\r\n                                dispatch(pushToHistory(newEditor.canvas));\r\n                                dispatch(setEditor(newEditor));\r\n                                temp = newEditor;\r\n                            }\r\n                            if (filter !== Filter.Brightness && filter !== Filter.Blur) {\r\n                                dispatch(applyFilter(filter));\r\n                            } else {\r\n                                setTempEditor(temp);\r\n                                setBrightSliderShown(true);\r\n                            }\r\n                        }}></FilterMenu>\r\n                </Box>\r\n                {currentTool !== ToolType.Area && <ObjectParams />}\r\n                {isBrightSliderShown\r\n                    && <BrightnessSlider\r\n                        onChange={(value) => {\r\n                            if (tempEditor === null) {\r\n                                return;\r\n                            }\r\n                            timeout(16, () => {\r\n                                const brightEditor = applyBrightnessFilter(tempEditor, value);\r\n                                dispatch(setEditor(brightEditor))\r\n                            });\r\n                        }}\r\n                        onApply={(value) => {\r\n                            setBrightSliderShown(false);\r\n                            if (value === 1) {\r\n                                return;\r\n                            }\r\n                            const newEditor = replaceSelectedObject(editor, null);\r\n                            dispatch(pushToHistory(newEditor.canvas));\r\n                            dispatch(setEditor(newEditor));\r\n                        }}\r\n                    ></BrightnessSlider>}\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { ToolType } from \"../components/tool/Tools\";\r\nimport { createNewCanvas } from \"../helper/CanvasHelper\";\r\nimport { toRGBAColor } from \"../helper/ColorHelper\";\r\nimport { ViewModel } from \"../viewmodel/ViewModel\";\r\n\r\nconst defaultEditor = createNewCanvas(\r\n    {\r\n        selectedObject: null,\r\n        canvas: new ImageData(1, 1)\r\n    },\r\n    { x: 800, y: 600 });\r\n\r\nconst initialViewModel: ViewModel = {\r\n    editor: defaultEditor,\r\n    imageHistory: {\r\n        history: [defaultEditor.canvas],\r\n        currentHistoryPosition: 0\r\n    },\r\n    currentTool: ToolType.Rectangle,\r\n    objectState: {\r\n        fillColor: toRGBAColor(\"#00CCCCFF\"),\r\n        strokeColor: toRGBAColor(\"#CC0000FF\"),\r\n        strokeWidth: 4,\r\n        text: \"\",\r\n        textSize: 24,\r\n        textColor: toRGBAColor(\"#424242FF\")\r\n    },\r\n    canvasModel: {\r\n        isCanvasDown: false,\r\n        start: {x: 0, y: 0},\r\n        tempObject: null,\r\n        isMiddleMouseDown: false,\r\n        middleMouseStart: {x: 0, y: 0},\r\n        tempPoint: null,\r\n        scale: 1,\r\n        canvasPosition: {\r\n            x: (window.innerWidth - defaultEditor.canvas.width) / 2,\r\n            y: (window.innerHeight - defaultEditor.canvas.height) / 2\r\n        }\r\n    }\r\n}\r\n\r\nexport default initialViewModel;\r\n","import { Editor } from \"../structures/Editor\";\r\nimport { ImageHistory } from \"../structures/ImageHistory\";\r\nimport { ViewModel } from \"../viewmodel/ViewModel\";\r\nimport { copyImageData } from \"./CanvasHelper\";\r\nimport { replaceSelectedObject } from \"./EditorHelper\";\r\n\r\nexport function pushToHistory(imageHistory: ImageHistory, canvas: ImageData): ImageHistory {\r\n    const newArrayHistory = imageHistory.history.flatMap((imageData) => copyImageData(imageData));\r\n\r\n    const newHistory = {\r\n        history: newArrayHistory,\r\n        currentHistoryPosition: imageHistory.currentHistoryPosition\r\n    }\r\n    while (newHistory.currentHistoryPosition < newHistory.history.length - 1) {\r\n        newHistory.history.pop();\r\n    }\r\n    if (newHistory.currentHistoryPosition === newHistory.history.length - 1) {\r\n        newHistory.currentHistoryPosition++;\r\n    }\r\n    newHistory.history.push(copyImageData(canvas));\r\n    return newHistory;\r\n}\r\n\r\nexport function undoHistory(state: ViewModel): ViewModel {\r\n    let editor: Editor = {\r\n        selectedObject: state.editor.selectedObject,\r\n        canvas: state.editor.canvas\r\n    };\r\n    let imageHistory: ImageHistory = state.imageHistory;\r\n    if (imageHistory.history.length > 0) {\r\n        if (imageHistory.currentHistoryPosition > 0 || editor.selectedObject != null) {\r\n            if (editor.selectedObject == null) {\r\n                imageHistory.currentHistoryPosition--;\r\n            } else {\r\n                editor = replaceSelectedObject(editor, null);\r\n                const historyCanvas = copyImageData(editor.canvas);\r\n                imageHistory = pushToHistory(imageHistory, historyCanvas);\r\n                if (state === undefined) {\r\n                    throw new Error();\r\n                }\r\n                imageHistory.currentHistoryPosition--;\r\n            }\r\n            editor.canvas = copyImageData(\r\n                imageHistory.history[imageHistory.currentHistoryPosition]\r\n            );\r\n        }\r\n    }\r\n    return {\r\n        ...state,\r\n        imageHistory: imageHistory,\r\n        editor: editor\r\n    }\r\n}\r\n\r\nexport function redoHistory(state: ViewModel): ViewModel {\r\n    let editor: Editor = {\r\n        selectedObject: state.editor.selectedObject,\r\n        canvas: state.editor.canvas\r\n    };\r\n    let imageHistory: ImageHistory = state.imageHistory;\r\n    if (imageHistory.history.length > 0) {\r\n        if (imageHistory.currentHistoryPosition < imageHistory.history.length - 1) {\r\n            imageHistory.currentHistoryPosition++;\r\n            editor.canvas = copyImageData(\r\n                imageHistory.history[imageHistory.currentHistoryPosition]\r\n            );\r\n        }\r\n    }\r\n    return {\r\n        ...state,\r\n        editor: editor,\r\n        imageHistory: imageHistory\r\n    }\r\n}\r\n","import { Reducer } from \"react\";\r\nimport { copyImageData } from \"../../helper/CanvasHelper\";\r\nimport CREATE_NEW_CANVAS from \"../actions/createNewCanvas\";\r\nimport EDIT_CANVAS_SIZE from \"../actions/editCanvasSize\";\r\nimport Vector2Action from \"../actions/types/Vector2Action\";\r\n\r\nconst updateCanvas: Reducer<ImageData, Vector2Action> = (canvas, action) => {\r\n    const size = action.value;\r\n    switch (action.type) {\r\n        case CREATE_NEW_CANVAS:\r\n            const newCanvas = new ImageData(action.value.x, action.value.y);\r\n            newCanvas.data.fill(255);\r\n            return newCanvas;\r\n        case EDIT_CANVAS_SIZE:\r\n            let imageData = new ImageData(size.x, size.y);\r\n            imageData.data.fill(255);\r\n            let minWidth = Math.min(size.x, canvas.width);\r\n            let minHeight = Math.min(size.y, canvas.height);\r\n\r\n            for (let i = 0; i < minHeight; i++) {\r\n                for (let j = 0; j < minWidth; j++) {\r\n                    let dataIndex = (i * size.x + j) * 4;\r\n                    let canvasDataIndex = (i * canvas.width + j) * 4;\r\n                    for (let k = 0; k < 4; k++) {\r\n                        imageData.data[dataIndex + k] = canvas.data[canvasDataIndex + k];\r\n                    }\r\n                }\r\n            }\r\n            return imageData;\r\n        default:\r\n            return copyImageData(canvas);\r\n    }\r\n}\r\n\r\nexport default updateCanvas;\r\n","import { Reducer } from \"react\";\r\nimport { Editor } from \"../../structures/Editor\";\r\nimport SelectedObjectAction from \"../actions/types/SelectedObjectAction\";\r\nimport Vector2Action from \"../actions/types/Vector2Action\";\r\nimport updateCanvas from \"./updateCanvas\";\r\n\r\nconst updateEditor: Reducer<Editor | undefined, SelectedObjectAction | Vector2Action> = (editor, action) => {\r\n    if (editor === undefined) {\r\n        return editor;\r\n    }\r\n    switch (action.type) {\r\n        default:\r\n            return {\r\n                canvas: updateCanvas(editor.canvas, action as Vector2Action),\r\n                selectedObject: editor.selectedObject\r\n            }\r\n    }\r\n}\r\n\r\nexport default updateEditor;","import { Reducer } from \"redux\";\r\nimport { RGBAColor } from \"../../structures/RGBAColor\";\r\nimport { ObjectState } from \"../../viewmodel/ObjectState\";\r\nimport NumberAction from \"../actions/types/NumberAction\";\r\nimport RGBAColorAction from \"../actions/types/RGBAColorAction\";\r\nimport StringAction from \"../actions/types/StringAction\";\r\nimport UPDATE_FILL_COLOR from \"../actions/updateFillColor\";\r\nimport UPDATE_STROKE_COLOR from \"../actions/updateStrokeColor\";\r\nimport UPDATE_STROKE_WIDTH from \"../actions/updateStrokeWidth\";\r\nimport UPDATE_TEXT from \"../actions/updateText\";\r\nimport UPDATE_TEXT_COLOR from \"../actions/updateTextColor\";\r\nimport UPDATE_TEXT_SIZE from \"../actions/updateTextSize\";\r\n\r\nconst updateObjectState: Reducer<ObjectState | undefined, RGBAColorAction | NumberAction | StringAction> =\r\n    (state, action) => {\r\n        if (state === undefined) {\r\n            throw new Error();\r\n        }\r\n        switch (action.type) {\r\n            case UPDATE_FILL_COLOR:\r\n                return {\r\n                    ...state,\r\n                    fillColor: action.value as RGBAColor\r\n                }\r\n            case UPDATE_STROKE_COLOR:\r\n                return {\r\n                    ...state,\r\n                    strokeColor: action.value as RGBAColor\r\n                }\r\n            case UPDATE_STROKE_WIDTH:\r\n                return {\r\n                    ...state,\r\n                    strokeWidth: action.value as number\r\n                }\r\n            case UPDATE_TEXT:\r\n                return {\r\n                    ...state,\r\n                    text: action.value as string\r\n                }\r\n            case UPDATE_TEXT_SIZE:\r\n                return {\r\n                    ...state,\r\n                    textSize: action.value as number\r\n                }\r\n            case UPDATE_TEXT_COLOR:\r\n                return {\r\n                    ...state,\r\n                    textColor: action.value as RGBAColor\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n\r\nexport default updateObjectState;","import { Action, Reducer } from \"redux\";\r\nimport { cutSelectedArea, selectArea } from \"../../helper/CanvasHelper\";\r\nimport { removeSelectedObject, replaceSelectedObject } from \"../../helper/EditorHelper\";\r\nimport { applyFilter } from \"../../helper/FilterHelper\";\r\nimport { pushToHistory, redoHistory, undoHistory } from \"../../helper/HistoryHelper\";\r\nimport { Editor } from \"../../structures/Editor\";\r\nimport { ViewModel } from \"../../viewmodel/ViewModel\";\r\nimport APPLY_FILTER from \"../actions/applyFilter\";\r\nimport CUT_SELECTED_AREA from \"../actions/cutSelectedArea\";\r\nimport PUSH_TO_HISTORY from \"../actions/pushToHistory\";\r\nimport REDO_HISTORY from \"../actions/redoHistory\";\r\nimport REMOVE_SELECTED_OBJECT from \"../actions/removeSelectedObject\";\r\nimport REPLACE_SELECTED_OBJECT from \"../actions/actionReplaceSelectedObject\";\r\nimport SELECT_AREA from \"../actions/selectArea\";\r\nimport SET_EDITOR from \"../actions/setEditor\";\r\nimport EditorAction from \"../actions/types/EditorAction\";\r\nimport FilterAction from \"../actions/types/FilterAction\";\r\nimport ImageDataAction from \"../actions/types/ImageDataAction\";\r\nimport NumberAction from \"../actions/types/NumberAction\";\r\nimport RGBAColorAction from \"../actions/types/RGBAColorAction\";\r\nimport SelectedAreaAction from \"../actions/types/SelectedAreaAction\";\r\nimport SelectedObjectAction from \"../actions/types/SelectedObjectAction\";\r\nimport StringAction from \"../actions/types/StringAction\";\r\nimport ToolTypeAction from \"../actions/types/ToolTypeAction\";\r\nimport Vector2Action from \"../actions/types/Vector2Action\";\r\nimport UNDO_HISTORY from \"../actions/undoHistory\";\r\nimport UPDATE_TOOL from \"../actions/updateTool\";\r\nimport updateEditor from \"./updateEditor\";\r\nimport updateObjectState from \"./updateObjectState\";\r\nimport UPDATE_CANVAS_VIEW_MODEL from \"../actions/updateCanvasViewModel\";\r\nimport CanvasViewModelAction from \"../actions/types/CanvasViewModelAction\";\r\n\r\nconst reducers: Reducer<ViewModel | undefined,\r\n    EditorAction |\r\n    SelectedObjectAction |\r\n    Vector2Action |\r\n    ToolTypeAction |\r\n    RGBAColorAction |\r\n    NumberAction |\r\n    StringAction |\r\n    CanvasViewModelAction |\r\n    Action> =\r\n    (state, action): ViewModel => {\r\n        if (state === undefined) {\r\n            throw new Error();\r\n        }\r\n        const editor = state.editor;\r\n        let newEditor = {\r\n            canvas: editor.canvas,\r\n            selectedObject: editor.selectedObject\r\n        };\r\n        let imageHistory = state.imageHistory;\r\n        switch (action.type) {\r\n            case SET_EDITOR:\r\n                return {\r\n                    ...state,\r\n                    editor: (action as EditorAction).value as Editor\r\n                }\r\n            case UNDO_HISTORY:\r\n                return undoHistory(state);\r\n            case REDO_HISTORY:\r\n                return redoHistory(state);\r\n            case PUSH_TO_HISTORY:\r\n                return {\r\n                    ...state,\r\n                    imageHistory: pushToHistory(imageHistory, (action as ImageDataAction).value),\r\n                }\r\n            case UPDATE_TOOL:\r\n                return {\r\n                    ...state,\r\n                    currentTool: (action as ToolTypeAction).value,\r\n                }\r\n            case APPLY_FILTER:\r\n                let newImageHistory;\r\n                newImageHistory = pushToHistory(imageHistory, newEditor.canvas);\r\n                newEditor = applyFilter(newEditor, (action as FilterAction).value);\r\n                newImageHistory = pushToHistory(imageHistory, newEditor.canvas);\r\n                return {\r\n                    ...state,\r\n                    imageHistory: newImageHistory,\r\n                    editor: newEditor\r\n                }\r\n            case SELECT_AREA:\r\n                return {\r\n                    ...state,\r\n                    editor: selectArea(editor, (action as SelectedAreaAction).value)\r\n                }\r\n            case CUT_SELECTED_AREA:\r\n                return {\r\n                    ...state,\r\n                    editor: cutSelectedArea(editor)\r\n                }\r\n            case REPLACE_SELECTED_OBJECT:\r\n                newEditor = replaceSelectedObject(editor, (action as SelectedObjectAction).value);\r\n                return {\r\n                    ...state,\r\n                    editor: newEditor\r\n                };\r\n            case REMOVE_SELECTED_OBJECT:\r\n                return {\r\n                    ...state,\r\n                    editor: removeSelectedObject(editor)\r\n                };\r\n            case UPDATE_CANVAS_VIEW_MODEL:\r\n                return {\r\n                    ...state,\r\n                    canvasModel: (action as CanvasViewModelAction).value\r\n                }\r\n            default:\r\n                const updatedEditor = updateEditor(state.editor, action as SelectedObjectAction | Vector2Action);\r\n                if (updatedEditor === undefined) {\r\n                    throw new Error();\r\n                }\r\n                const objectState = updateObjectState(state.objectState, (action as RGBAColorAction | NumberAction | StringAction));\r\n                if (objectState === undefined) {\r\n                    throw new Error();\r\n                }\r\n                return {\r\n                    editor: updatedEditor,\r\n                    imageHistory: state.imageHistory,\r\n                    currentTool: state.currentTool,\r\n                    objectState: objectState,\r\n                    canvasModel: state.canvasModel\r\n                }\r\n        }\r\n    }\r\n\r\nexport default reducers;\r\n","import { createStore } from 'redux';\r\nimport initialViewModel from './initialState';\r\nimport reducers from './reducers/rootReducer';\r\n\r\nconst store = createStore(reducers, initialViewModel);\r\n\r\nexport default store;","import { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nrender();\nexport function render() {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    );\n}\n\nreportWebVitals();\n"],"sourceRoot":""}